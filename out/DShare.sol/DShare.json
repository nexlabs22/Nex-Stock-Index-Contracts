{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "name": "AccessControlEnforcedDefaultAdminDelay",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccessControlEnforcedDefaultAdminRules",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "defaultAdmin",
          "type": "address"
        }
      ],
      "name": "AccessControlInvalidDefaultAdmin",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AllowanceOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AllowanceUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPermit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "PRBMath_MulDiv18_Overflow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "PRBMath_MulDiv_Overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PermitExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "bits",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SafeCastOverflowedUintDowncast",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TotalSupplyOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroValue",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balancePerShare",
          "type": "uint256"
        }
      ],
      "name": "BalancePerShareSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminDelayChangeCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "effectSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminDelayChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminTransferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "acceptSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminTransferScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "NameSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "SymbolSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ITransferRestrictor",
          "name": "transferRestrictor",
          "type": "address"
        }
      ],
      "name": "TransferRestrictorSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "result",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balancePerShare",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "balanceToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "beginDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        }
      ],
      "name": "changeDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelayIncreaseWait",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "contract ITransferRestrictor",
          "name": "_transferRestrictor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBlacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rollbackDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "balancePerShare_",
          "type": "uint128"
        }
      ],
      "name": "setBalancePerShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newName",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newSymbol",
          "type": "string"
        }
      ],
      "name": "setSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ITransferRestrictor",
          "name": "newRestrictor",
          "type": "address"
        }
      ],
      "name": "setTransferRestrictor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "sharesOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferRestrictor",
      "outputs": [
        {
          "internalType": "contract ITransferRestrictor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6126fb806100d96000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c806384ef8ffc11610167578063cefc1429116100ce578063d5abeb0111610087578063d5abeb0114610608578063d602b9fd14610610578063d8ddf18f14610618578063dd62ed3e1461062b578063f5eb42dc14610654578063fe575a871461066757600080fd5b8063cefc142914610567578063cf6eefb71461056f578063d4ec137a1461059d578063d505accf146105bb578063d5391393146105ce578063d547741f146105f557600080fd5b8063a781a3fd11610120578063a781a3fd146104f3578063a850e02414610513578063a9059cbb14610526578063b84c824614610539578063c47f00271461054c578063cc8463c81461055f57600080fd5b806384ef8ffc146104815780638da5cb5b146104a157806391d14854146104a957806395d89b41146104bc578063a1eda53c146104c4578063a217fddf146104eb57600080fd5b80633644e5151161020b578063613d25bb116101c4578063613d25bb146103fc578063634e93da1461040f578063649a5ec71461042257806370a082311461043557806379cc6790146104485780637ecebe001461045b57600080fd5b80633644e5151461039557806336568abe1461039d57806340c10f19146103b057806342966c68146103c35780634904ac8f146103d657806353735f37146103e957600080fd5b806318160ddd1161025d57806318160ddd1461031057806323b872dd14610326578063248a9ca314610339578063282c51f31461034c5780632f2ff15d14610373578063313ce5671461038657600080fd5b806301ffc9a71461029a578063022d63fb146102c257806306fdde03146102de578063095ea7b3146102f35780630aa6220b14610306575b600080fd5b6102ad6102a8366004611f6b565b61067a565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff90911681526020016102b9565b6102e66106a5565b6040516102b99190611f95565b6102ad610301366004611ff9565b610749565b61030e61079c565b005b6103186107b2565b6040519081526020016102b9565b6102ad610334366004612025565b6107cd565b610318610347366004612066565b6107f0565b6103187f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61030e61038136600461207f565b610812565b604051601281526020016102b9565b61031861083e565b61030e6103ab36600461207f565b6108bb565b61030e6103be366004611ff9565b610984565b61030e6103d1366004612066565b6109b8565b61030e6103e43660046120af565b6109ec565b6103186103f7366004612066565b610a61565b61030e61040a36600461216f565b610a7d565b61030e61041d3660046120af565b610bf6565b61030e6104303660046121f8565b610c0a565b6103186104433660046120af565b610c1e565b61030e610456366004611ff9565b610c3c565b6103186104693660046120af565b6338377508600c908152600091909152602090205490565b610489610c7b565b6040516001600160a01b0390911681526020016102b9565b610489610c97565b6102ad6104b736600461207f565b610ca1565b6102e6610cd9565b6104cc610d18565b6040805165ffffffffffff9384168152929091166020830152016102b9565b610318600081565b6104fb610d8b565b6040516001600160801b0390911681526020016102b9565b61030e610521366004612220565b610de0565b6102ad610534366004611ff9565b610e9b565b61030e610547366004612249565b610eb1565b61030e61055a366004612249565b610f37565b6102c7610f8f565b61030e61100d565b61057761104d565b604080516001600160a01b03909316835265ffffffffffff9091166020830152016102b9565b600080516020612686833981519152546001600160a01b0316610489565b61030e6105c93660046122bb565b61107b565b6103187f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61030e61060336600461207f565b611204565b61031861122c565b61030e6112ad565b610318610626366004612066565b6112c0565b610318610639366004612332565b602052637f5e9f20600c908152600091909152603490205490565b6103186106623660046120af565b6112e5565b6102ad6106753660046120af565b6112ff565b60006001600160e01b031982166318a4c3c360e11b148061069f575061069f826113ac565b92915050565b6000805160206126a683398151915280546060919081906106c590612360565b80601f01602080910402602001604051908101604052809291908181526020018280546106f190612360565b801561073e5780601f106107135761010080835404028352916020019161073e565b820191906000526020600020905b81548152906001019060200180831161072157829003601f168201915b505050505091505090565b600082602052637f5e9f20600c5233600052816034600c205581600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a350600192915050565b60006107a7816113e1565b6107af6113eb565b50565b60006107c86103f76805345cdf77eb68f44c5490565b905090565b60006107da8433846113f8565b6107e584848461143b565b5060015b9392505050565b6000908152600080516020612646833981519152602052604090206001015490565b8161083057604051631fe1e13d60e11b815260040160405180910390fd5b61083a82826114d0565b5050565b6000806108496106a5565b8051906020012090506040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81528160208201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015260a081209250505090565b600080516020612626833981519152821580156108f057506108db610c7b565b6001600160a01b0316826001600160a01b0316145b156109755760008061090061104d565b90925090506001600160a01b038216151580610922575065ffffffffffff8116155b8061093557504265ffffffffffff821610155b15610962576040516319ca5ebb60e01b815265ffffffffffff821660048201526024015b60405180910390fd5b5050805465ffffffffffff60a01b191681555b61097f83836114ec565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109ae816113e1565b61097f838361151f565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486109e2816113e1565b61083a3383611624565b60006109f7816113e1565b60008051602061268683398151915280546001600160a01b0319166001600160a01b0384169081179091556040516000805160206126a683398151915291907fc2315c0e6785ae744f588d76c3aa8b08329e38dc33e849116b425556ef076ea490600090a2505050565b600061069f82610a6f610d8b565b6001600160801b03166116b5565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610ac35750825b905060008267ffffffffffffffff166001148015610ae05750303b155b905081158015610aee575080155b15610b0c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b3657845460ff60401b1916600160401b1785555b610b4160008a61176b565b6000805160206126a683398151915280610b5b8a826123ea565b5060018101610b6a89826123ea565b506002810180546001600160a01b0389166001600160a01b031990911617905560030180546001600160801b031916670de0b6b3a76400001790558315610beb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b6000610c01816113e1565b61083a826117d4565b6000610c15816113e1565b61083a82611847565b6387a211a2600c908152600082815260209091205461069f90610a61565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610c66816113e1565b610c718333846113f8565b61097f8383611624565b600080516020612666833981519152546001600160a01b031690565b60006107c8610c7b565b6000918252600080516020612646833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f18580180546060916000805160206126a6833981519152916106c590612360565b60008051602061266683398151915254600090600160d01b900465ffffffffffff166000805160206126268339815191528115801590610d6057504265ffffffffffff831610155b610d6c57600080610d82565b6001810154600160a01b900465ffffffffffff16825b92509250509091565b7f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f185803546000906000805160206126a6833981519152906001600160801b031680830361069f57670de0b6b3a76400009250505090565b6000610deb816113e1565b816001600160801b0316600003610e1557604051637c946ed760e01b815260040160405180910390fd5b7f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f18580380546001600160801b0384166001600160801b0319909116811790915560408051918252516000805160206126a6833981519152917f7d1fa2fe734d16276290c7f8713b6aac4d03f2ef2a604f4ef62525ccead2cf13919081900360200190a1505050565b6000610ea833848461143b565b50600192915050565b6000610ebc816113e1565b6000805160206126a68339815191527f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f185801610ef78486836124aa565b507f3e46ff90086ee29856e77591e82c82ff8ed513379b0fd82e84fc5290dd633c998484604051610f2992919061256a565b60405180910390a150505050565b6000610f42816113e1565b6000805160206126a683398151915280610f5d8486836124aa565b507f13c98778b0c1a086bb98d7f1986e15788b5d3a1ad4c492e1d78f1c4cc51c20cf8484604051610f2992919061256a565b6000805160206126668339815191525460009060008051602061262683398151915290600160d01b900465ffffffffffff168015801590610fd757504265ffffffffffff8216105b610ff1578154600160d01b900465ffffffffffff16611006565b6001820154600160a01b900465ffffffffffff165b9250505090565b600061101761104d565b509050336001600160a01b0382161461104557604051636116401160e11b8152336004820152602401610959565b6107af6118b7565b600080516020612626833981519152546001600160a01b03811691600160a01b90910465ffffffffffff1690565b60006110856106a5565b805190602001209050844211156110a457631a15a3cc6000526004601cfd5b6040518860601b60601c98508760601b60601c975065383775081901600e52886000526020600c2080547f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528360208401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604084015246606084015230608084015260a08320602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528a60208401528960408401528860608401528060808401528760a084015260c08320604e526042602c206000528660ff1660205285604052846060526020806080600060015afa8b3d51146111b05763ddafbaef6000526004601cfd5b0190556303faf4f960a51b88176040526034602c2087905587897f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608501a360405250506000606052505050505050565b8161122257604051631fe1e13d60e11b815260040160405180910390fd5b61083a8282611954565b600080611237610d8b565b9050670de0b6b3a76400006001600160801b038216101561126d57611267600019826001600160801b03166116b5565b91505090565b670de0b6b3a76400006001600160801b03821611156112a457611267600019670de0b6b3a76400006001600160801b038416611970565b60001991505090565b60006112b8816113e1565b6107af611a44565b600061069f82670de0b6b3a76400006112d7610d8b565b6001600160801b0316611970565b6387a211a2600c908152600082815260209091205461069f565b600080516020612686833981519152546000906000805160206126a6833981519152906001600160a01b03168061133a575060009392505050565b60405163fe575a8760e01b81526001600160a01b03858116600483015282169063fe575a8790602401602060405180830381865afa158015611380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a49190612599565b949350505050565b60006001600160e01b03198216637965db0b60e01b148061069f57506301ffc9a760e01b6001600160e01b031983161461069f565b6107af8133611a4f565b6113f6600080611a88565b565b81602052637f5e9f20600c52826000526034600c2080546001810115611434578083111561142e576313be252b6000526004601cfd5b82810382555b5050505050565b611446838383611b63565b6000611451826112c0565b90508360601b6387a211a28117600c526020600c2080548084111561147e5763f4d678b86000526004601cfd5b83810382555050836000526020600c208281540181555082602052600c5160601c8160601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505b50505050565b6114d9826107f0565b6114e2816113e1565b6114ca8383611bef565b6001600160a01b03811633146115155760405163334bd91960e11b815260040160405180910390fd5b61097f8282611c5e565b61152b60008383611b63565b600061153e6805345cdf77eb68f44c5490565b9050600061154b82610a61565b9050828101818110156115715760405163e5cfe95760e01b815260040160405180910390fd5b61159481670de0b6b3a7640000611586610d8b565b6001600160801b0316611cb7565b156115b25760405163e5cfe95760e01b815260040160405180910390fd5b60006115bd856112c0565b905060008185019050806805345cdf77eb68f44c556387a211a2600c52866000526020600c208281540181555085602052600c5160601c60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a350505050505050565b61163082600083611b63565b600061163b826112c0565b90506387a211a2600c52826000526020600c208054808311156116665763f4d678b86000526004601cfd5b82900390556805345cdf77eb68f44c8054829003905560008281526001600160a01b0384167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602083a3505050565b60008080600019848609848602925082811083820303915050806000036116e95750670de0b6b3a76400009004905061069f565b670de0b6b3a7640000811061171b57604051635173648d60e01b81526004810186905260248101859052604401610959565b6000670de0b6b3a764000085870962040000818503049310909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690291505092915050565b611773611cd8565b6000805160206126268339815191526001600160a01b0382166117ac57604051636116401160e11b815260006004820152602401610959565b80546001600160d01b0316600160d01b65ffffffffffff8516021781556114ca600083611bef565b60006117de610f8f565b6117e742611d21565b6117f191906125e7565b90506117fd8282611d58565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b600061185282611de5565b61185b42611d21565b61186591906125e7565b90506118718282611a88565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b910160405180910390a15050565b6000805160206126268339815191526000806118d161104d565b915091506118e68165ffffffffffff16151590565b15806118fa57504265ffffffffffff821610155b15611922576040516319ca5ebb60e01b815265ffffffffffff82166004820152602401610959565b611934600061192f610c7b565b611c5e565b50611940600083611bef565b505081546001600160d01b03191690915550565b61195d826107f0565b611966816113e1565b6114ca8383611c5e565b60008080600019858709858702925082811083820303915050806000036119aa578382816119a0576119a06125bb565b04925050506107e9565b8381106119db57604051630c740aef60e31b8152600481018790526024810186905260448101859052606401610959565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6113f6600080611d58565b611a598282610ca1565b61083a5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610959565b6000805160206126668339815191525460008051602061262683398151915290600160d01b900465ffffffffffff168015611b25574265ffffffffffff82161015611afb57600182015482546001600160d01b0316600160a01b90910465ffffffffffff16600160d01b02178255611b25565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec590600090a15b5060010180546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b600080516020612686833981519152546000805160206126a6833981519152906001600160a01b03168015611434576040516329e019e160e11b81526001600160a01b03868116600483015285811660248301528216906353c033c29060440160006040518083038186803b158015611bdb57600080fd5b505afa158015610beb573d6000803e3d6000fd5b600060008051602061262683398151915283611c54576000611c0f610c7b565b6001600160a01b031614611c3657604051631fe1e13d60e11b815260040160405180910390fd5b6001810180546001600160a01b0319166001600160a01b0385161790555b6113a48484611e2d565b600060008051602061262683398151915283158015611c955750611c80610c7b565b6001600160a01b0316836001600160a01b0316145b15611cad576001810180546001600160a01b03191690555b6113a48484611ed9565b60008080600019858709868602808210910303841115925050509392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166113f657604051631afcd79f60e31b815260040160405180910390fd5b600065ffffffffffff821115611d54576040516306dfcc6560e41b81526030600482015260248101839052604401610959565b5090565b6000805160206126268339815191526000611d7161104d565b835465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b038816171784559150611db190508165ffffffffffff16151590565b156114ca576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a960510990600090a150505050565b600080611df0610f8f565b90508065ffffffffffff168365ffffffffffff1611611e1857611e138382612606565b6107e9565b6107e965ffffffffffff841662069780611f55565b6000600080516020612646833981519152611e488484610ca1565b611ec8576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055611e7e3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061069f565b600091505061069f565b5092915050565b6000600080516020612646833981519152611ef48484610ca1565b15611ec8576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061069f565b6000818310611f6457816107e9565b5090919050565b600060208284031215611f7d57600080fd5b81356001600160e01b0319811681146107e957600080fd5b60006020808352835180602085015260005b81811015611fc357858101830151858201604001528201611fa7565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146107af57600080fd5b6000806040838503121561200c57600080fd5b823561201781611fe4565b946020939093013593505050565b60008060006060848603121561203a57600080fd5b833561204581611fe4565b9250602084013561205581611fe4565b929592945050506040919091013590565b60006020828403121561207857600080fd5b5035919050565b6000806040838503121561209257600080fd5b8235915060208301356120a481611fe4565b809150509250929050565b6000602082840312156120c157600080fd5b81356107e981611fe4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126120f357600080fd5b813567ffffffffffffffff8082111561210e5761210e6120cc565b604051601f8301601f19908116603f01168101908282118183101715612136576121366120cc565b8160405283815286602085880101111561214f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561218557600080fd5b843561219081611fe4565b9350602085013567ffffffffffffffff808211156121ad57600080fd5b6121b9888389016120e2565b945060408701359150808211156121cf57600080fd5b506121dc878288016120e2565b92505060608501356121ed81611fe4565b939692955090935050565b60006020828403121561220a57600080fd5b813565ffffffffffff811681146107e957600080fd5b60006020828403121561223257600080fd5b81356001600160801b03811681146107e957600080fd5b6000806020838503121561225c57600080fd5b823567ffffffffffffffff8082111561227457600080fd5b818501915085601f83011261228857600080fd5b81358181111561229757600080fd5b8660208285010111156122a957600080fd5b60209290920196919550909350505050565b600080600080600080600060e0888a0312156122d657600080fd5b87356122e181611fe4565b965060208801356122f181611fe4565b95506040880135945060608801359350608088013560ff8116811461231557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561234557600080fd5b823561235081611fe4565b915060208301356120a481611fe4565b600181811c9082168061237457607f821691505b60208210810361239457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561097f576000816000526020600020601f850160051c810160208610156123c35750805b601f850160051c820191505b818110156123e2578281556001016123cf565b505050505050565b815167ffffffffffffffff811115612404576124046120cc565b612418816124128454612360565b8461239a565b602080601f83116001811461244d57600084156124355750858301515b600019600386901b1c1916600185901b1785556123e2565b600085815260208120601f198616915b8281101561247c5788860151825594840194600190910190840161245d565b508582101561249a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff8311156124c2576124c26120cc565b6124d6836124d08354612360565b8361239a565b6000601f84116001811461250a57600085156124f25750838201355b600019600387901b1c1916600186901b178355611434565b600083815260209020601f19861690835b8281101561253b578685013582556020948501946001909201910161251b565b50868210156125585760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156125ab57600080fd5b815180151581146107e957600080fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b65ffffffffffff818116838216019080821115611ed257611ed26125d1565b65ffffffffffff828116828216039080821115611ed257611ed26125d156feeef3dac4538c82c8ace4063ab0acd2d15cdb5883aa1dff7c2673abb3d869840002dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800eef3dac4538c82c8ace4063ab0acd2d15cdb5883aa1dff7c2673abb3d86984017315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f1858027315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f185800a26469706673582212204e8ce1572b006aead70d7a2ddf3ce23a02ff147ad6459153c4fd4ef076b5435064736f6c63430008190033",
    "sourceMap": "837:6701:1:-:0;;;3029:53;;;;;;;;;-1:-1:-1;3053:22:1;:20;:22::i;:::-;837:6701;;7711:422:74;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:74;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:74;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:74;-1:-1:-1;;;;;8035:33:74;;;;;8087:29;;158:50:135;;;8087:29:74;;146:2:135;131:18;8087:29:74;;;;;;;7981:146;7760:373;7711:422::o;14:200:135:-;837:6701:1;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c806384ef8ffc11610167578063cefc1429116100ce578063d5abeb0111610087578063d5abeb0114610608578063d602b9fd14610610578063d8ddf18f14610618578063dd62ed3e1461062b578063f5eb42dc14610654578063fe575a871461066757600080fd5b8063cefc142914610567578063cf6eefb71461056f578063d4ec137a1461059d578063d505accf146105bb578063d5391393146105ce578063d547741f146105f557600080fd5b8063a781a3fd11610120578063a781a3fd146104f3578063a850e02414610513578063a9059cbb14610526578063b84c824614610539578063c47f00271461054c578063cc8463c81461055f57600080fd5b806384ef8ffc146104815780638da5cb5b146104a157806391d14854146104a957806395d89b41146104bc578063a1eda53c146104c4578063a217fddf146104eb57600080fd5b80633644e5151161020b578063613d25bb116101c4578063613d25bb146103fc578063634e93da1461040f578063649a5ec71461042257806370a082311461043557806379cc6790146104485780637ecebe001461045b57600080fd5b80633644e5151461039557806336568abe1461039d57806340c10f19146103b057806342966c68146103c35780634904ac8f146103d657806353735f37146103e957600080fd5b806318160ddd1161025d57806318160ddd1461031057806323b872dd14610326578063248a9ca314610339578063282c51f31461034c5780632f2ff15d14610373578063313ce5671461038657600080fd5b806301ffc9a71461029a578063022d63fb146102c257806306fdde03146102de578063095ea7b3146102f35780630aa6220b14610306575b600080fd5b6102ad6102a8366004611f6b565b61067a565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff90911681526020016102b9565b6102e66106a5565b6040516102b99190611f95565b6102ad610301366004611ff9565b610749565b61030e61079c565b005b6103186107b2565b6040519081526020016102b9565b6102ad610334366004612025565b6107cd565b610318610347366004612066565b6107f0565b6103187f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b61030e61038136600461207f565b610812565b604051601281526020016102b9565b61031861083e565b61030e6103ab36600461207f565b6108bb565b61030e6103be366004611ff9565b610984565b61030e6103d1366004612066565b6109b8565b61030e6103e43660046120af565b6109ec565b6103186103f7366004612066565b610a61565b61030e61040a36600461216f565b610a7d565b61030e61041d3660046120af565b610bf6565b61030e6104303660046121f8565b610c0a565b6103186104433660046120af565b610c1e565b61030e610456366004611ff9565b610c3c565b6103186104693660046120af565b6338377508600c908152600091909152602090205490565b610489610c7b565b6040516001600160a01b0390911681526020016102b9565b610489610c97565b6102ad6104b736600461207f565b610ca1565b6102e6610cd9565b6104cc610d18565b6040805165ffffffffffff9384168152929091166020830152016102b9565b610318600081565b6104fb610d8b565b6040516001600160801b0390911681526020016102b9565b61030e610521366004612220565b610de0565b6102ad610534366004611ff9565b610e9b565b61030e610547366004612249565b610eb1565b61030e61055a366004612249565b610f37565b6102c7610f8f565b61030e61100d565b61057761104d565b604080516001600160a01b03909316835265ffffffffffff9091166020830152016102b9565b600080516020612686833981519152546001600160a01b0316610489565b61030e6105c93660046122bb565b61107b565b6103187f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61030e61060336600461207f565b611204565b61031861122c565b61030e6112ad565b610318610626366004612066565b6112c0565b610318610639366004612332565b602052637f5e9f20600c908152600091909152603490205490565b6103186106623660046120af565b6112e5565b6102ad6106753660046120af565b6112ff565b60006001600160e01b031982166318a4c3c360e11b148061069f575061069f826113ac565b92915050565b6000805160206126a683398151915280546060919081906106c590612360565b80601f01602080910402602001604051908101604052809291908181526020018280546106f190612360565b801561073e5780601f106107135761010080835404028352916020019161073e565b820191906000526020600020905b81548152906001019060200180831161072157829003601f168201915b505050505091505090565b600082602052637f5e9f20600c5233600052816034600c205581600052602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560206000a350600192915050565b60006107a7816113e1565b6107af6113eb565b50565b60006107c86103f76805345cdf77eb68f44c5490565b905090565b60006107da8433846113f8565b6107e584848461143b565b5060015b9392505050565b6000908152600080516020612646833981519152602052604090206001015490565b8161083057604051631fe1e13d60e11b815260040160405180910390fd5b61083a82826114d0565b5050565b6000806108496106a5565b8051906020012090506040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81528160208201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015260a081209250505090565b600080516020612626833981519152821580156108f057506108db610c7b565b6001600160a01b0316826001600160a01b0316145b156109755760008061090061104d565b90925090506001600160a01b038216151580610922575065ffffffffffff8116155b8061093557504265ffffffffffff821610155b15610962576040516319ca5ebb60e01b815265ffffffffffff821660048201526024015b60405180910390fd5b5050805465ffffffffffff60a01b191681555b61097f83836114ec565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109ae816113e1565b61097f838361151f565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8486109e2816113e1565b61083a3383611624565b60006109f7816113e1565b60008051602061268683398151915280546001600160a01b0319166001600160a01b0384169081179091556040516000805160206126a683398151915291907fc2315c0e6785ae744f588d76c3aa8b08329e38dc33e849116b425556ef076ea490600090a2505050565b600061069f82610a6f610d8b565b6001600160801b03166116b5565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610ac35750825b905060008267ffffffffffffffff166001148015610ae05750303b155b905081158015610aee575080155b15610b0c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610b3657845460ff60401b1916600160401b1785555b610b4160008a61176b565b6000805160206126a683398151915280610b5b8a826123ea565b5060018101610b6a89826123ea565b506002810180546001600160a01b0389166001600160a01b031990911617905560030180546001600160801b031916670de0b6b3a76400001790558315610beb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b6000610c01816113e1565b61083a826117d4565b6000610c15816113e1565b61083a82611847565b6387a211a2600c908152600082815260209091205461069f90610a61565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848610c66816113e1565b610c718333846113f8565b61097f8383611624565b600080516020612666833981519152546001600160a01b031690565b60006107c8610c7b565b6000918252600080516020612646833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f18580180546060916000805160206126a6833981519152916106c590612360565b60008051602061266683398151915254600090600160d01b900465ffffffffffff166000805160206126268339815191528115801590610d6057504265ffffffffffff831610155b610d6c57600080610d82565b6001810154600160a01b900465ffffffffffff16825b92509250509091565b7f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f185803546000906000805160206126a6833981519152906001600160801b031680830361069f57670de0b6b3a76400009250505090565b6000610deb816113e1565b816001600160801b0316600003610e1557604051637c946ed760e01b815260040160405180910390fd5b7f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f18580380546001600160801b0384166001600160801b0319909116811790915560408051918252516000805160206126a6833981519152917f7d1fa2fe734d16276290c7f8713b6aac4d03f2ef2a604f4ef62525ccead2cf13919081900360200190a1505050565b6000610ea833848461143b565b50600192915050565b6000610ebc816113e1565b6000805160206126a68339815191527f7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f185801610ef78486836124aa565b507f3e46ff90086ee29856e77591e82c82ff8ed513379b0fd82e84fc5290dd633c998484604051610f2992919061256a565b60405180910390a150505050565b6000610f42816113e1565b6000805160206126a683398151915280610f5d8486836124aa565b507f13c98778b0c1a086bb98d7f1986e15788b5d3a1ad4c492e1d78f1c4cc51c20cf8484604051610f2992919061256a565b6000805160206126668339815191525460009060008051602061262683398151915290600160d01b900465ffffffffffff168015801590610fd757504265ffffffffffff8216105b610ff1578154600160d01b900465ffffffffffff16611006565b6001820154600160a01b900465ffffffffffff165b9250505090565b600061101761104d565b509050336001600160a01b0382161461104557604051636116401160e11b8152336004820152602401610959565b6107af6118b7565b600080516020612626833981519152546001600160a01b03811691600160a01b90910465ffffffffffff1690565b60006110856106a5565b805190602001209050844211156110a457631a15a3cc6000526004601cfd5b6040518860601b60601c98508760601b60601c975065383775081901600e52886000526020600c2080547f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528360208401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604084015246606084015230608084015260a08320602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983528a60208401528960408401528860608401528060808401528760a084015260c08320604e526042602c206000528660ff1660205285604052846060526020806080600060015afa8b3d51146111b05763ddafbaef6000526004601cfd5b0190556303faf4f960a51b88176040526034602c2087905587897f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060608501a360405250506000606052505050505050565b8161122257604051631fe1e13d60e11b815260040160405180910390fd5b61083a8282611954565b600080611237610d8b565b9050670de0b6b3a76400006001600160801b038216101561126d57611267600019826001600160801b03166116b5565b91505090565b670de0b6b3a76400006001600160801b03821611156112a457611267600019670de0b6b3a76400006001600160801b038416611970565b60001991505090565b60006112b8816113e1565b6107af611a44565b600061069f82670de0b6b3a76400006112d7610d8b565b6001600160801b0316611970565b6387a211a2600c908152600082815260209091205461069f565b600080516020612686833981519152546000906000805160206126a6833981519152906001600160a01b03168061133a575060009392505050565b60405163fe575a8760e01b81526001600160a01b03858116600483015282169063fe575a8790602401602060405180830381865afa158015611380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a49190612599565b949350505050565b60006001600160e01b03198216637965db0b60e01b148061069f57506301ffc9a760e01b6001600160e01b031983161461069f565b6107af8133611a4f565b6113f6600080611a88565b565b81602052637f5e9f20600c52826000526034600c2080546001810115611434578083111561142e576313be252b6000526004601cfd5b82810382555b5050505050565b611446838383611b63565b6000611451826112c0565b90508360601b6387a211a28117600c526020600c2080548084111561147e5763f4d678b86000526004601cfd5b83810382555050836000526020600c208281540181555082602052600c5160601c8160601c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a3505b50505050565b6114d9826107f0565b6114e2816113e1565b6114ca8383611bef565b6001600160a01b03811633146115155760405163334bd91960e11b815260040160405180910390fd5b61097f8282611c5e565b61152b60008383611b63565b600061153e6805345cdf77eb68f44c5490565b9050600061154b82610a61565b9050828101818110156115715760405163e5cfe95760e01b815260040160405180910390fd5b61159481670de0b6b3a7640000611586610d8b565b6001600160801b0316611cb7565b156115b25760405163e5cfe95760e01b815260040160405180910390fd5b60006115bd856112c0565b905060008185019050806805345cdf77eb68f44c556387a211a2600c52866000526020600c208281540181555085602052600c5160601c60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602080a350505050505050565b61163082600083611b63565b600061163b826112c0565b90506387a211a2600c52826000526020600c208054808311156116665763f4d678b86000526004601cfd5b82900390556805345cdf77eb68f44c8054829003905560008281526001600160a01b0384167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602083a3505050565b60008080600019848609848602925082811083820303915050806000036116e95750670de0b6b3a76400009004905061069f565b670de0b6b3a7640000811061171b57604051635173648d60e01b81526004810186905260248101859052604401610959565b6000670de0b6b3a764000085870962040000818503049310909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690291505092915050565b611773611cd8565b6000805160206126268339815191526001600160a01b0382166117ac57604051636116401160e11b815260006004820152602401610959565b80546001600160d01b0316600160d01b65ffffffffffff8516021781556114ca600083611bef565b60006117de610f8f565b6117e742611d21565b6117f191906125e7565b90506117fd8282611d58565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b600061185282611de5565b61185b42611d21565b61186591906125e7565b90506118718282611a88565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b910160405180910390a15050565b6000805160206126268339815191526000806118d161104d565b915091506118e68165ffffffffffff16151590565b15806118fa57504265ffffffffffff821610155b15611922576040516319ca5ebb60e01b815265ffffffffffff82166004820152602401610959565b611934600061192f610c7b565b611c5e565b50611940600083611bef565b505081546001600160d01b03191690915550565b61195d826107f0565b611966816113e1565b6114ca8383611c5e565b60008080600019858709858702925082811083820303915050806000036119aa578382816119a0576119a06125bb565b04925050506107e9565b8381106119db57604051630c740aef60e31b8152600481018790526024810186905260448101859052606401610959565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6113f6600080611d58565b611a598282610ca1565b61083a5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610959565b6000805160206126668339815191525460008051602061262683398151915290600160d01b900465ffffffffffff168015611b25574265ffffffffffff82161015611afb57600182015482546001600160d01b0316600160a01b90910465ffffffffffff16600160d01b02178255611b25565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec590600090a15b5060010180546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b600080516020612686833981519152546000805160206126a6833981519152906001600160a01b03168015611434576040516329e019e160e11b81526001600160a01b03868116600483015285811660248301528216906353c033c29060440160006040518083038186803b158015611bdb57600080fd5b505afa158015610beb573d6000803e3d6000fd5b600060008051602061262683398151915283611c54576000611c0f610c7b565b6001600160a01b031614611c3657604051631fe1e13d60e11b815260040160405180910390fd5b6001810180546001600160a01b0319166001600160a01b0385161790555b6113a48484611e2d565b600060008051602061262683398151915283158015611c955750611c80610c7b565b6001600160a01b0316836001600160a01b0316145b15611cad576001810180546001600160a01b03191690555b6113a48484611ed9565b60008080600019858709868602808210910303841115925050509392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166113f657604051631afcd79f60e31b815260040160405180910390fd5b600065ffffffffffff821115611d54576040516306dfcc6560e41b81526030600482015260248101839052604401610959565b5090565b6000805160206126268339815191526000611d7161104d565b835465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b038816171784559150611db190508165ffffffffffff16151590565b156114ca576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a960510990600090a150505050565b600080611df0610f8f565b90508065ffffffffffff168365ffffffffffff1611611e1857611e138382612606565b6107e9565b6107e965ffffffffffff841662069780611f55565b6000600080516020612646833981519152611e488484610ca1565b611ec8576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055611e7e3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061069f565b600091505061069f565b5092915050565b6000600080516020612646833981519152611ef48484610ca1565b15611ec8576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061069f565b6000818310611f6457816107e9565b5090919050565b600060208284031215611f7d57600080fd5b81356001600160e01b0319811681146107e957600080fd5b60006020808352835180602085015260005b81811015611fc357858101830151858201604001528201611fa7565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146107af57600080fd5b6000806040838503121561200c57600080fd5b823561201781611fe4565b946020939093013593505050565b60008060006060848603121561203a57600080fd5b833561204581611fe4565b9250602084013561205581611fe4565b929592945050506040919091013590565b60006020828403121561207857600080fd5b5035919050565b6000806040838503121561209257600080fd5b8235915060208301356120a481611fe4565b809150509250929050565b6000602082840312156120c157600080fd5b81356107e981611fe4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126120f357600080fd5b813567ffffffffffffffff8082111561210e5761210e6120cc565b604051601f8301601f19908116603f01168101908282118183101715612136576121366120cc565b8160405283815286602085880101111561214f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561218557600080fd5b843561219081611fe4565b9350602085013567ffffffffffffffff808211156121ad57600080fd5b6121b9888389016120e2565b945060408701359150808211156121cf57600080fd5b506121dc878288016120e2565b92505060608501356121ed81611fe4565b939692955090935050565b60006020828403121561220a57600080fd5b813565ffffffffffff811681146107e957600080fd5b60006020828403121561223257600080fd5b81356001600160801b03811681146107e957600080fd5b6000806020838503121561225c57600080fd5b823567ffffffffffffffff8082111561227457600080fd5b818501915085601f83011261228857600080fd5b81358181111561229757600080fd5b8660208285010111156122a957600080fd5b60209290920196919550909350505050565b600080600080600080600060e0888a0312156122d657600080fd5b87356122e181611fe4565b965060208801356122f181611fe4565b95506040880135945060608801359350608088013560ff8116811461231557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561234557600080fd5b823561235081611fe4565b915060208301356120a481611fe4565b600181811c9082168061237457607f821691505b60208210810361239457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561097f576000816000526020600020601f850160051c810160208610156123c35750805b601f850160051c820191505b818110156123e2578281556001016123cf565b505050505050565b815167ffffffffffffffff811115612404576124046120cc565b612418816124128454612360565b8461239a565b602080601f83116001811461244d57600084156124355750858301515b600019600386901b1c1916600185901b1785556123e2565b600085815260208120601f198616915b8281101561247c5788860151825594840194600190910190840161245d565b508582101561249a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b67ffffffffffffffff8311156124c2576124c26120cc565b6124d6836124d08354612360565b8361239a565b6000601f84116001811461250a57600085156124f25750838201355b600019600387901b1c1916600186901b178355611434565b600083815260209020601f19861690835b8281101561253b578685013582556020948501946001909201910161251b565b50868210156125585760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000602082840312156125ab57600080fd5b815180151581146107e957600080fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b65ffffffffffff818116838216019080821115611ed257611ed26125d1565b65ffffffffffff828116828216039080821115611ed257611ed26125d156feeef3dac4538c82c8ace4063ab0acd2d15cdb5883aa1dff7c2673abb3d869840002dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800eef3dac4538c82c8ace4063ab0acd2d15cdb5883aa1dff7c2673abb3d86984017315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f1858027315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f185800a26469706673582212204e8ce1572b006aead70d7a2ddf3ce23a02ff147ad6459153c4fd4ef076b5435064736f6c63430008190033",
    "sourceMap": "837:6701:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4005:219:73;;;;;;:::i;:::-;;:::i;:::-;;;470:14:135;;463:22;445:41;;433:2;418:18;4005:219:73;;;;;;;;9880:108;9975:6;9880:108;;;671:14:135;659:27;;;641:46;;629:2;614:18;9880:108:73;497:196:135;3174:147:1;;;:::i;:::-;;;;;;;:::i;7435:573:119:-;;;;;;:::i;:::-;;:::i;13148:126:73:-;;;:::i;:::-;;1473:130:3;;;:::i;:::-;;;1853:25:135;;;1841:2;1826:18;1473:130:3;1707:177:135;2509:219:3;;;;;;:::i;:::-;;:::i;4759:191:70:-;;;;;;:::i;:::-;;:::i;1663:62:1:-;;1701:24;1663:62;;4536:276:73;;;;;;:::i;:::-;;:::i;5860:82:119:-;;;5933:2;3179:36:135;;3167:2;3152:18;5860:82:119;3037:184:135;16620:693:119;;;:::i;5875:682:73:-;;;;;;:::i;:::-;;:::i;5755:105:1:-;;;;;;:::i;:::-;;:::i;5986:101::-;;;;;;:::i;:::-;;:::i;5250:264::-;;;;;;:::i;:::-;;:::i;1102:139:3:-;;;;;;:::i;:::-;;:::i;2499:471:1:-;;;;;;:::i;:::-;;:::i;10182:150:73:-;;;;;;:::i;:::-;;:::i;12517:145::-;;;;;;:::i;:::-;;:::i;2066:148:3:-;;;;;;:::i;:::-;;:::i;6280:172:1:-;;;;;;:::i;:::-;;:::i;12800:340:119:-;;;;;;:::i;:::-;13023:17;13017:4;13010:31;;;12860:14;13054:19;;;;13118:4;13102:21;;13096:28;;12800:340;8393:211:73;;;:::i;:::-;;;-1:-1:-1;;;;;6101:32:135;;;6083:51;;6071:2;6056:18;8393:211:73;5937:203:135;4280:93:73;;;:::i;3732:207:70:-;;;;;;:::i;:::-;;:::i;3356:151:1:-;;;:::i;9439:368:73:-;;;:::i;:::-;;;;6325:14:135;6366:15;;;6348:34;;6418:15;;;;6413:2;6398:18;;6391:43;6288:18;9439:368:73;6145:295:135;2317:49:70;;2362:4;2317:49;;3738:345:1;;;:::i;:::-;;;-1:-1:-1;;;;;6609:47:135;;;6591:66;;6579:2;6564:18;3738:345:1;6445:218:135;4851:308:1;;;;;;:::i;:::-;;:::i;2347:156:3:-;;;;;;:::i;:::-;;:::i;4514:212:1:-;;;;;;:::i;:::-;;:::i;4227:200::-;;;;;;:::i;:::-;;:::i;9028:338:73:-;;;:::i;11260:344::-;;;:::i;8677:278::-;;;:::i;:::-;;;;-1:-1:-1;;;;;7761:32:135;;;7743:51;;7842:14;7830:27;;;7825:2;7810:18;;7803:55;7716:18;8677:278:73;7571:293:135;3560:172:1;-1:-1:-1;;;;;;;;;;;3704:21:1;-1:-1:-1;;;;;3704:21:1;3560:172;;13324:3215:119;;;;;;:::i;:::-;;:::i;1553:62:1:-;;1591:24;1553:62;;4912:278:73;;;;;;:::i;:::-;;:::i;1609:451:3:-;;;:::i;10820:128:73:-;;;:::i;1247:167:3:-;;;;;;:::i;:::-;;:::i;6929:375:119:-;;;;;;:::i;:::-;7144:4;7137:21;7184:20;7178:4;7171:34;;;7041:14;7218:19;;;;7282:4;7266:21;;7260:28;;6929:375;2220:121:3;;;;;;:::i;:::-;;:::i;7203:333:1:-;;;;;;:::i;:::-;;:::i;4005:219:73:-;4090:4;-1:-1:-1;;;;;;4113:64:73;;-1:-1:-1;;;4113:64:73;;:104;;;4181:36;4205:11;4181:23;:36::i;:::-;4106:111;4005:219;-1:-1:-1;;4005:219:73:o;3174:147:1:-;-1:-1:-1;;;;;;;;;;;3300:14:1;;3220:13;;2390:21;;;3300:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3174:147;:::o;7435:573:119:-;7509:4;7668:7;7662:4;7655:21;7702:20;7696:4;7689:34;7749:8;7743:4;7736:22;7801:6;7794:4;7788;7778:21;7771:37;7876:6;7870:4;7863:20;7964:4;7958:11;7954:2;7950:20;7940:8;7913:25;7907:4;7901;7896:75;-1:-1:-1;7997:4:119;7435:573;;;;:::o;13148:126:73:-;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;13239:28:73::1;:26;:28::i;:::-;13148:126:::0;:::o;1473:130:3:-;1534:7;1560:36;1576:19;6447:18:119;6441:25;;6287:195;1560:36:3;1553:43;;1473:130;:::o;2509:219::-;2606:4;2622:41;2638:4;2644:10;2656:6;2622:15;:41::i;:::-;2673:27;2683:4;2689:2;2693:6;2673:9;:27::i;:::-;-1:-1:-1;2717:4:3;2509:219;;;;;;:::o;4759:191:70:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:70;;;;;:24;;;;4759:191::o;4536:276:73:-;4666:4;4662:104;;4715:40;;-1:-1:-1;;;4715:40:73;;;;;;;;;;;4662:104;4775:30;4791:4;4797:7;4775:15;:30::i;:::-;4536:276;;:::o;16620:693:119:-;16677:14;;16900:6;:4;:6::i;:::-;16884:24;;;;;;16873:35;;16999:4;16993:11;17060:16;17057:1;17050:27;17111:8;17104:4;17101:1;17097:12;17090:30;17154:13;17147:4;17144:1;17140:12;17133:35;17202:9;17195:4;17192:1;17188:12;17181:31;17246:9;17239:4;17236:1;17232:12;17225:31;17292:4;17289:1;17279:18;17269:28;;;16970:337;16620:693;:::o;5875:682:73:-;-1:-1:-1;;;;;;;;;;;6111:26:73;;:55;;;;;6152:14;:12;:14::i;:::-;-1:-1:-1;;;;;6141:25:73;:7;-1:-1:-1;;;;;6141:25:73;;6111:55;6107:401;;;6183:23;6208:15;6227:21;:19;:21::i;:::-;6182:66;;-1:-1:-1;6182:66:73;-1:-1:-1;;;;;;6266:29:73;;;;;:58;;-1:-1:-1;16998:13:73;;;;6266:58;:91;;;-1:-1:-1;17226:15:73;17215:26;;;;6328:29;6266:91;6262:185;;;6384:48;;-1:-1:-1;;;6384:48:73;;671:14:135;659:27;;6384:48:73;;;641:46:135;614:18;;6384:48:73;;;;;;;;6262:185;-1:-1:-1;;6460:37:73;;-1:-1:-1;;;;6460:37:73;;;6107:401;6517:33;6536:4;6542:7;6517:18;:33::i;:::-;5994:563;5875:682;;:::o;5755:105:1:-;1591:24;3191:16:70;3202:4;3191:10;:16::i;:::-;5837::1::1;5843:2;5847:5;5837;:16::i;5986:101::-:0;1701:24;3191:16:70;3202:4;3191:10;:16::i;:::-;6056:24:1::1;6062:10;6074:5;6056;:24::i;5250:264::-:0;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;;;;;;;5419:37:1;;-1:-1:-1;;;;;;5419:37:1::1;-1:-1:-1::0;;;;;5419:37:1;::::1;::::0;;::::1;::::0;;;5471:36:::1;::::0;-1:-1:-1;;;;;;;;;;;2390:21:1;5419:37;5471:36:::1;::::0;-1:-1:-1;;5471:36:1::1;5354:160;5250:264:::0;;:::o;1102:139:3:-;1164:7;1190:35;1199:6;1207:17;:15;:17::i;:::-;-1:-1:-1;;;;;1190:35:3;:8;:35::i;2499:471:1:-;8870:21:74;4302:15;;-1:-1:-1;;;4302:15:74;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:74;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:74;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:74;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:74;-1:-1:-1;;;5013:22:74;;;4979:67;2686:57:1::1;2734:1;2737:5;2686:47;:57::i;:::-;-1:-1:-1::0;;;;;;;;;;;2390:21:1;2809:15:::1;2819:5:::0;2390:21;2809:15:::1;:::i;:::-;-1:-1:-1::0;2834:9:1::1;::::0;::::1;:19;2846:7:::0;2834:9;:19:::1;:::i;:::-;-1:-1:-1::0;2863:21:1::1;::::0;::::1;:43:::0;;-1:-1:-1;;;;;2863:43:1;::::1;-1:-1:-1::0;;;;;;2863:43:1;;::::1;;::::0;;2916:18:::1;;:47:::0;;-1:-1:-1;;;;;;2916:47:1::1;833:7:3;2916:47:1;::::0;;5066:101:74;;;;5100:23;;-1:-1:-1;;;;5100:23:74;;;5142:14;;-1:-1:-1;12065:50:135;;5142:14:74;;12053:2:135;12038:18;5142:14:74;;;;;;;5066:101;4092:1081;;;;;2499:471:1;;;;:::o;10182:150:73:-;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;10289:36:73::1;10316:8;10289:26;:36::i;12517:145::-:0;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;12621:34:73::1;12646:8;12621:24;:34::i;2066:148:3:-:0;6716:18:119;6710:4;6703:32;;;2140:7:3;6748:19:119;;;6812:4;6796:21;;;6790:28;2166:41:3;;1102:139;:::i;6280:172:1:-;1701:24;3191:16:70;3202:4;3191:10;:16::i;:::-;6371:43:1::1;6387:7;6396:10;6408:5;6371:15;:43::i;:::-;6424:21;6430:7;6439:5;6424;:21::i;8393:211:73:-:0;-1:-1:-1;;;;;;;;;;;8575:22:73;-1:-1:-1;;;;;8575:22:73;;8393:211::o;4280:93::-;4326:7;4352:14;:12;:14::i;3732:207:70:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:70;;;;;;;;-1:-1:-1;;;;;3901:31:70;;;;;;;;;;;;;;;3732:207::o;3356:151:1:-;3491:9;3484:16;;3404:13;;-1:-1:-1;;;;;;;;;;;2390:21:1;3484:16;;;:::i;9439:368:73:-;-1:-1:-1;;;;;;;;;;;9662:23:73;9504:15;;-1:-1:-1;;;9662:23:73;;;;-1:-1:-1;;;;;;;;;;;16998:13:73;;;;;9703:57;;-1:-1:-1;17226:15:73;17215:26;;;;9731:29;9703:57;9702:98;;9795:1;9798;9702:98;;;9765:15;;;;-1:-1:-1;;;9765:15:73;;;;9782:8;9702:98;9695:105;;;;;9439:368;;:::o;3738:345:1:-;3896:18;;3795:7;;-1:-1:-1;;;;;;;;;;;2390:21:1;-1:-1:-1;;;;;3896:18:1;3987:21;;;3983:60;;833:7:3;4010:33:1;;;;3738:345;:::o;4851:308::-;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;4957::1::1;-1:-1:-1::0;;;;;4957:21:1::1;4977:1;4957:21:::0;4953:45:::1;;4987:11;;-1:-1:-1::0;;;4987:11:1::1;;;;;;;;;;;4953:45;5064:18:::0;:37;;-1:-1:-1;;;;;5064:37:1;::::1;-1:-1:-1::0;;;;;;5064:37:1;;::::1;::::0;::::1;::::0;;;5116:36:::1;::::0;;6591:66:135;;;5116:36:1;-1:-1:-1;;;;;;;;;;;2390:21:1;5116:36:::1;::::0;;;;;6579:2:135;5116:36:1;;::::1;4943:216;4851:308:::0;;:::o;2347:156:3:-;2426:4;2442:33;2452:10;2464:2;2468:6;2442:9;:33::i;:::-;-1:-1:-1;2492:4:3;2347:156;;;;:::o;4514:212:1:-;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;;;;;;;4663:9:1;:21:::1;4675:9:::0;;4663;:21:::1;:::i;:::-;;4699:20;4709:9;;4699:20;;;;;;;:::i;:::-;;;;;;;;4598:128;4514:212:::0;;;:::o;4227:200::-;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;;;;;;;2390:21:1;4372:17:::1;4382:7:::0;;2390:21;4372:17:::1;:::i;:::-;;4404:16;4412:7;;4404:16;;;;;;;:::i;9028:338:73:-:0;-1:-1:-1;;;;;;;;;;;9225:23:73;9086:6;;-1:-1:-1;;;;;;;;;;;3071:45:73;-1:-1:-1;;;9225:23:73;;;;16998:13;;;;;9266:56;;-1:-1:-1;17226:15:73;17215:26;;;;9294:28;9265:94;;9344:15;;-1:-1:-1;;;9344:15:73;;;;9265:94;;;9326:15;;;;-1:-1:-1;;;9326:15:73;;;;9265:94;9258:101;;;;9028:338;:::o;11260:344::-;11324:23;11353:21;:19;:21::i;:::-;-1:-1:-1;11323:51:73;-1:-1:-1;966:10:77;-1:-1:-1;;;;;11388:31:73;;;11384:175;;11502:46;;-1:-1:-1;;;11502:46:73;;966:10:77;11502:46:73;;;6083:51:135;6056:18;;11502:46:73;5937:203:135;11384:175:73;11568:29;:27;:29::i;8677:278::-;-1:-1:-1;;;;;;;;;;;8893:22:73;-1:-1:-1;;;;;8893:22:73;;;-1:-1:-1;;;8917:30:73;;;;;;8677:278::o;13324:3215:119:-;13523:16;13720:6;:4;:6::i;:::-;13704:24;;;;;;13693:35;;13896:8;13883:11;13880:25;13877:142;;;13937:10;13931:4;13924:24;14000:4;13994;13987:18;13877:142;14047:4;14041:11;14163:5;14159:2;14155:14;14151:2;14147:23;14138:32;;14210:7;14206:2;14202:16;14198:2;14194:25;14183:36;;14303:39;14297:4;14290:53;14369:5;14363:4;14356:19;14421:4;14415;14405:21;14463:9;14457:16;14541;14538:1;14531:27;14592:8;14585:4;14582:1;14578:12;14571:30;14635:13;14628:4;14625:1;14621:12;14614:35;14683:9;14676:4;14673:1;14669:12;14662:31;14727:9;14720:4;14717:1;14713:12;14706:31;14776:4;14773:1;14763:18;14757:4;14750:32;14845:16;14842:1;14835:27;14896:5;14889:4;14886:1;14882:12;14875:27;14936:7;14929:4;14926:1;14922:12;14915:29;14978:5;14971:4;14968:1;14964:12;14957:27;15018:10;15011:4;15008:1;15004:12;14997:32;15063:8;15056:4;15053:1;15049:12;15042:30;15111:4;15108:1;15098:18;15092:4;15085:32;15206:4;15200;15190:21;15184:4;15177:35;15248:1;15242:4;15238:12;15232:4;15225:26;15277:1;15271:4;15264:15;15305:1;15299:4;15292:15;15365:4;15359;15353;15350:1;15347;15340:5;15329:41;15786:5;15767:16;15761:23;15758:34;15748:159;;15825:10;15819:4;15812:24;15888:4;15882;15875:18;15748:159;15992:18;15974:37;;-1:-1:-1;;;16187:43:119;;16181:4;16174:57;16267:4;16261;16251:21;16244:36;;;16222:7;16387:5;16360:25;-1:-1:-1;16347:4:119;16340:12;;16335:67;16422:4;16415:15;-1:-1:-1;;16492:1:119;16486:4;16479:15;-1:-1:-1;;;;;;13324:3215:119:o;4912:278:73:-;5043:4;5039:104;;5092:40;;-1:-1:-1;;;5092:40:73;;;;;;;;;;;5039:104;5152:31;5169:4;5175:7;5152:16;:31::i;1609:451:3:-;1659:7;1678:24;1705:17;:15;:17::i;:::-;1678:44;-1:-1:-1;833:7:3;-1:-1:-1;;;;;1736:45:3;;;1732:288;;;1804:45;-1:-1:-1;;1832:16:3;-1:-1:-1;;;;;1804:45:3;:8;:45::i;:::-;1797:52;;;1609:451;:::o;1732:288::-;833:7;-1:-1:-1;;;;;1870:45:3;;;1866:154;;;1938:71;-1:-1:-1;;833:7:3;-1:-1:-1;;;;;1938:71:3;;:6;:71::i;1866:154::-;-1:-1:-1;;2029:24:3;;;1609:451;:::o;10820:128:73:-;2362:4:70;3191:16;2362:4;3191:10;:16::i;:::-;10912:29:73::1;:27;:29::i;1247:167:3:-:0;1310:7;1336:62;1343:7;833;1380:17;:15;:17::i;:::-;-1:-1:-1;;;;;1336:62:3;:6;:62::i;2220:121::-;6716:18:119;6710:4;6703:32;;;2284:7:3;6748:19:119;;;6812:4;6796:21;;;6790:28;2310:24:3;6548:286:119;7203:333:1;-1:-1:-1;;;;;;;;;;;7379:21:1;7266:4;;-1:-1:-1;;;;;;;;;;;2390:21:1;-1:-1:-1;;;;;7379:21:1;;7410:60;;-1:-1:-1;7465:5:1;;7203:333;-1:-1:-1;;;7203:333:1:o;7410:60::-;7487:42;;-1:-1:-1;;;7487:42:1;;-1:-1:-1;;;;;6101:32:135;;;7487:42:1;;;6083:51:135;7487:33:1;;;;;6056:18:135;;7487:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7480:49;7203:333;-1:-1:-1;;;;7203:333:1:o;3443:202:70:-;3528:4;-1:-1:-1;;;;;;3551:47:70;;-1:-1:-1;;;3551:47:70;;:87;;-1:-1:-1;;;;;;;;;;1133:40:82;;;3602:36:70;1034:146:82;4148:103:70;4214:30;4225:4;966:10:77;4214::70;:30::i;13401:94:73:-;13466:22;13483:1;13486;13466:16;:22::i;:::-;13401:94::o;22532:947:119:-;22773:7;22767:4;22760:21;22807:20;22801:4;22794:34;22854:5;22848:4;22841:19;22910:4;22904;22894:21;22952:13;22946:20;23064:1;23052:10;23048:18;23045:418;;;23180:10;23172:6;23169:22;23166:159;;;23227:10;23221:4;23214:24;23302:4;23296;23289:18;23166:159;23441:6;23429:10;23425:23;23410:13;23403:46;23045:418;;;22532:947;;;:::o;2759:1455:3:-;2856:38;2877:4;2883:2;2887:6;2856:20;:38::i;:::-;2904:14;2921:23;2937:6;2921:15;:23::i;:::-;2904:40;;3041:4;3037:2;3033:13;3142:18;3135:5;3132:29;3126:4;3119:43;3214:4;3208;3198:21;3257:15;3251:22;3347:11;3339:6;3336:23;3333:146;;;3391:10;3385:4;3378:24;3460:4;3454;3447:18;3333:146;3588:6;3575:11;3571:24;3554:15;3547:49;;;3671:2;3665:4;3658:16;3724:4;3718;3708:21;3974:6;3958:13;3952:20;3948:33;3933:13;3926:56;;4050:6;4044:4;4037:20;4144:4;4138:11;4134:2;4130:20;4122:5;4118:2;4114:14;4087:25;4081:4;4075;4070:81;;4170:37;2846:1368;2759:1455;;;:::o;5246:136:70:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;6348:245::-:0;-1:-1:-1;;;;;6441:34:70;;966:10:77;6441:34:70;6437:102;;6498:30;;-1:-1:-1;;;6498:30:70;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;4245:1504:3:-;4324:44;4353:1;4357:2;4361:6;4324:20;:44::i;:::-;4378:25;4406:19;6447:18:119;6441:25;;6287:195;4406:19:3;4378:47;;4435:25;4463:34;4479:17;4463:15;:34::i;:::-;4435:62;-1:-1:-1;4588:26:3;;;4632:36;;;4628:70;;;4677:21;;-1:-1:-1;;;4677:21:3;;;;;;;;;;;4628:70;4722:96;4754:16;833:7;4800:17;:15;:17::i;:::-;-1:-1:-1;;;;;4722:96:3;:31;:96::i;:::-;4718:155;;;4841:21;;-1:-1:-1;;;4841:21:3;;;;;;;;;;;4718:155;4882:14;4899:23;4915:6;4899:15;:23::i;:::-;4882:40;;4932:24;5033:6;5013:17;:26;4994:45;;5199:16;5179:18;5172:44;5302:18;5296:4;5289:32;5347:2;5341:4;5334:16;5400:4;5394;5384:21;5516:6;5500:13;5494:20;5490:33;5475:13;5468:56;;5592:6;5586:4;5579:20;5673:4;5667:11;5663:2;5659:20;5656:1;5629:25;5623:4;5617;5612:68;4314:1435;;;;;4245:1504;;:::o;5780:1178::-;5861:46;5882:4;5896:1;5900:6;5861:20;:46::i;:::-;5917:14;5934:23;5950:6;5934:15;:23::i;:::-;5917:40;;6106:18;6100:4;6093:32;6151:4;6145;6138:18;6208:4;6202;6192:21;6251:15;6245:22;6341:11;6333:6;6330:23;6327:146;;;6385:10;6379:4;6372:24;6454:4;6448;6441:18;6327:146;6565:24;;;6541:49;;6700:18;6694:25;;6690:38;;;6663:66;;-1:-1:-1;6784:20:3;;;-1:-1:-1;;;;;6861:22:3;;6834:25;6828:4;-1:-1:-1;6817:70:3;5994:563:73;5875:682;;:::o;19579:819:118:-;19633:14;;;-1:-1:-1;;19748:1:118;19745;19738:20;19783:1;19780;19776:9;19767:18;;19830:5;19826:2;19823:13;19815:5;19811:2;19807:14;19803:34;19794:43;;;19853:5;19862:1;19853:10;19849:86;;-1:-1:-1;1504:4:118;19906:12;;;-1:-1:-1;19899:19:118;;19849:86;1504:4;19945:5;:13;19941:74;;19977:31;;-1:-1:-1;;;19977:31:118;;;;;14543:25:135;;;14584:18;;;14577:34;;;14516:18;;19977:31:118;14369:248:135;19941:74:118;20021:17;20105:4;20102:1;20099;20092:18;20312:10;20190:21;;;20186:38;20261:20;-1:-1:-1;20250:32:118;;;-1:-1:-1;;;20246:82:118;20162:184;;;;20364:12;20141:249;;-1:-1:-1;;19579:819:118;;;;:::o;3470:468:73:-;6931:20:74;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;3720:33:73;::::1;3716:115;;3776:44;::::0;-1:-1:-1;;;3776:44:73;;3817:1:::1;3776:44;::::0;::::1;6083:51:135::0;6056:18;;3776:44:73::1;5937:203:135::0;3716:115:73::1;3840:30:::0;;-1:-1:-1;;;;;3840:30:73::1;-1:-1:-1::0;;;3840:30:73::1;::::0;::::1;;;::::0;;3880:51:::1;-1:-1:-1::0;3911:19:73;3880:10:::1;:51::i;10459:288::-:0;10540:18;10598:19;:17;:19::i;:::-;10561:34;10579:15;10561:17;:34::i;:::-;:56;;;;:::i;:::-;10540:77;;10627:46;10651:8;10661:11;10627:23;:46::i;:::-;10688:52;;671:14:135;659:27;;641:46;;-1:-1:-1;;;;;10688:52:73;;;;;629:2:135;614:18;10688:52:73;;;;;;;10530:217;10459:288;:::o;12787:::-;12865:18;12923:26;12940:8;12923:16;:26::i;:::-;12886:34;12904:15;12886:17;:34::i;:::-;:63;;;;:::i;:::-;12865:84;;12959:39;12976:8;12986:11;12959:16;:39::i;:::-;13013:55;;;6325:14:135;6366:15;;;6348:34;;6418:15;;6413:2;6398:18;;6391:43;13013:55:73;;6288:18:135;13013:55:73;;;;;;;12855:220;12787:288;:::o;11732:581::-;-1:-1:-1;;;;;;;;;;;11798:47:73;;11939:21;:19;:21::i;:::-;11901:59;;;;11975:24;11990:8;16998:13;;;;;16912:106;11975:24;11974:25;:58;;;-1:-1:-1;17226:15:73;17215:26;;;;12003:29;11974:58;11970:144;;;12055:48;;-1:-1:-1;;;12055:48:73;;671:14:135;659:27;;12055:48:73;;;641:46:135;614:18;;12055:48:73;497:196:135;11970:144:73;12123:47;2362:4:70;12155:14:73;:12;:14::i;:::-;12123:11;:47::i;:::-;-1:-1:-1;12180:40:73;2362:4:70;12211:8:73;12180:10;:40::i;:::-;-1:-1:-1;;12230:29:73;;-1:-1:-1;;;;;;12269:37:73;;;;-1:-1:-1;11732:581:73:o;5662:138:70:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;14474:4121:118:-:0;14547:14;;;-1:-1:-1;;15024:1:118;15021;15014:20;15059:1;15056;15052:9;15043:18;;15106:5;15102:2;15099:13;15091:5;15087:2;15083:14;15079:34;15070:43;;;15184:5;15193:1;15184:10;15180:93;;15245:11;15237:5;:19;;;;;:::i;:::-;;15230:26;;;;;;15180:93;15372:11;15363:5;:20;15359:92;;15402:42;;-1:-1:-1;;;15402:42:118;;;;;15137:25:135;;;15178:18;;;15171:34;;;15221:18;;;15214:34;;;15110:18;;15402:42:118;14935:319:135;15359:92:118;15723:17;15870:11;15867:1;15864;15857:25;17576:1;16435;16420:12;;:16;;16405:32;;16590:25;;;;17557:1;:15;;17556:21;;17797;;;17793:25;;17782:36;17862:21;;;17858:25;;17847:36;17928:21;;;17924:25;;17913:36;17994:21;;;17990:25;;17979:36;18060:21;;;18056:25;;18045:36;18127:21;;;18123:25;;;18112:36;;;16387:15;17108;;;17104:29;;;17100:37;;;15968:20;;;15957:32;;;17214:22;;;;16007:21;;16686:19;;;;17205:31;;;;18571:15;;;-1:-1:-1;;;;14474:4121:118:o;11076:111:73:-;11142:38;11174:1;11178;11142:23;:38::i;4381:197:70:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:70;;-1:-1:-1;;;;;15451:32:135;;4514:47:70;;;15433:51:135;15500:18;;;15493:34;;;15406:18;;4514:47:70;15259:274:135;16069:698:73;-1:-1:-1;;;;;;;;;;;16274:23:73;-1:-1:-1;;;;;;;;;;;3071:45:73;-1:-1:-1;;;16274:23:73;;;;16998:13;;16308:369;;17226:15;17215:26;;;;16355:312;;;16475:15;;;;16457:33;;-1:-1:-1;;;;;16457:33:73;-1:-1:-1;;;16475:15:73;;;;;-1:-1:-1;;;16457:33:73;;;;16355:312;;;16619:33;;;;;;;16355:312;-1:-1:-1;16687:15:73;;:26;;-1:-1:-1;;;;;16723:37:73;-1:-1:-1;;;16687:26:73;;;;;-1:-1:-1;;;;;16723:37:73;;-1:-1:-1;;;16723:37:73;;;;;;;;;;;;;;16069:698::o;6519:471:1:-;-1:-1:-1;;;;;;;;;;;6787:21:1;-1:-1:-1;;;;;;;;;;;2390:21:1;-1:-1:-1;;;;;6787:21:1;6822:42;;6818:166;;6923:50;;-1:-1:-1;;;6923:50:1;;-1:-1:-1;;;;;15768:15:135;;;6923:50:1;;;15750:34:135;15820:15;;;15800:18;;;15793:43;6923:40:1;;;;;15685:18:135;;6923:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6985:475:73;7071:4;-1:-1:-1;;;;;;;;;;;7194:4:73;7190:216;;7266:1;7240:14;:12;:14::i;:::-;-1:-1:-1;;;;;7240:28:73;;7236:114;;7295:40;;-1:-1:-1;;;7295:40:73;;;;;;;;;;;7236:114;7363:22;;;:32;;-1:-1:-1;;;;;;7363:32:73;-1:-1:-1;;;;;7363:32:73;;;;;7190:216;7422:31;7439:4;7445:7;7422:16;:31::i;7527:376::-;7614:4;-1:-1:-1;;;;;;;;;;;7737:26:73;;:55;;;;;7778:14;:12;:14::i;:::-;-1:-1:-1;;;;;7767:25:73;:7;-1:-1:-1;;;;;7767:25:73;;7737:55;7733:115;;;7815:22;;;7808:29;;-1:-1:-1;;;;;;7808:29:73;;;7733:115;7864:32;7882:4;7888:7;7864:17;:32::i;551:488:10:-;646:4;;;-1:-1:-1;;889:1:10;886;879:20;921:9;;;972:13;;;956:14;;952:34;1012:20;-1:-1:-1;1012:20:10;;-1:-1:-1;;;551:488:10;;;;;:::o;7084:141:74:-;8870:21;8560:40;-1:-1:-1;;;8560:40:74;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:74;;;;;;;;;;;14291:213:115;14347:6;14377:16;14369:24;;14365:103;;;14416:41;;-1:-1:-1;;;14416:41:115;;14447:2;14416:41;;;16028:36:135;16080:18;;;16073:34;;;16001:18;;14416:41:115;15847:266:135;14365:103:115;-1:-1:-1;14491:5:115;14291:213::o;15283:632:73:-;-1:-1:-1;;;;;;;;;;;15372:47:73;15500:21;:19;:21::i;:::-;15532:33;;15575:44;;;-1:-1:-1;;;15575:44:73;-1:-1:-1;;;;;;15575:44:73;;;-1:-1:-1;;;;;15532:33:73;;15575:44;;;;15475:46;-1:-1:-1;15731:27:73;;-1:-1:-1;15475:46:73;16998:13;;;;;16912:106;15731:27;15727:182;;;15868:30;;;;;;;15362:553;;15283:632;;:::o;13842:1249::-;13916:6;13934:19;13956;:17;:19::i;:::-;13934:41;;14905:12;14894:23;;:8;:23;;;:190;;15061:23;15076:8;15061:12;:23;:::i;:::-;14894:190;;;14943:51;;;;9975:6;14943:8;:51::i;7270:387:70:-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:70;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:70;;;;;;;;;:38;;-1:-1:-1;;7475:38:70;7509:4;7475:38;;;7559:12;966:10:77;;887:96;7559:12:70;-1:-1:-1;;;;;7532:40:70;7550:7;-1:-1:-1;;;;;7532:40:70;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7432:219;7353:304;7270:387;;;;:::o;7892:388::-;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:70;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:70;;;;;;;;;;:39;;-1:-1:-1;;8097:39:70;;;8155:40;966:10:77;;8097:14:70;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;2557:104:114;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;-1:-1:-1;2649:1:114;;2634:20;-1:-1:-1;2557:104:114:o;14:286:135:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:135;;209:43;;199:71;;266:1;263;256:12;698:548;810:4;839:2;868;857:9;850:21;900:6;894:13;943:6;938:2;927:9;923:18;916:34;968:1;978:140;992:6;989:1;986:13;978:140;;;1087:14;;;1083:23;;1077:30;1053:17;;;1072:2;1049:26;1042:66;1007:10;;978:140;;;982:3;1167:1;1162:2;1153:6;1142:9;1138:22;1134:31;1127:42;1237:2;1230;1226:7;1221:2;1213:6;1209:15;1205:29;1194:9;1190:45;1186:54;1178:62;;;;698:548;;;;:::o;1251:131::-;-1:-1:-1;;;;;1326:31:135;;1316:42;;1306:70;;1372:1;1369;1362:12;1387:315;1455:6;1463;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;1571:9;1558:23;1590:31;1615:5;1590:31;:::i;:::-;1640:5;1692:2;1677:18;;;;1664:32;;-1:-1:-1;;;1387:315:135:o;1889:456::-;1966:6;1974;1982;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;2090:9;2077:23;2109:31;2134:5;2109:31;:::i;:::-;2159:5;-1:-1:-1;2216:2:135;2201:18;;2188:32;2229:33;2188:32;2229:33;:::i;:::-;1889:456;;2281:7;;-1:-1:-1;;;2335:2:135;2320:18;;;;2307:32;;1889:456::o;2350:180::-;2409:6;2462:2;2450:9;2441:7;2437:23;2433:32;2430:52;;;2478:1;2475;2468:12;2430:52;-1:-1:-1;2501:23:135;;2350:180;-1:-1:-1;2350:180:135:o;2717:315::-;2785:6;2793;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2898:9;2885:23;2875:33;;2958:2;2947:9;2943:18;2930:32;2971:31;2996:5;2971:31;:::i;:::-;3021:5;3011:15;;;2717:315;;;;;:::o;3411:275::-;3498:6;3551:2;3539:9;3530:7;3526:23;3522:32;3519:52;;;3567:1;3564;3557:12;3519:52;3606:9;3593:23;3625:31;3650:5;3625:31;:::i;3691:127::-;3752:10;3747:3;3743:20;3740:1;3733:31;3783:4;3780:1;3773:15;3807:4;3804:1;3797:15;3823:719;3866:5;3919:3;3912:4;3904:6;3900:17;3896:27;3886:55;;3937:1;3934;3927:12;3886:55;3973:6;3960:20;3999:18;4036:2;4032;4029:10;4026:36;;;4042:18;;:::i;:::-;4117:2;4111:9;4085:2;4171:13;;-1:-1:-1;;4167:22:135;;;4191:2;4163:31;4159:40;4147:53;;;4215:18;;;4235:22;;;4212:46;4209:72;;;4261:18;;:::i;:::-;4301:10;4297:2;4290:22;4336:2;4328:6;4321:18;4382:3;4375:4;4370:2;4362:6;4358:15;4354:26;4351:35;4348:55;;;4399:1;4396;4389:12;4348:55;4463:2;4456:4;4448:6;4444:17;4437:4;4429:6;4425:17;4412:54;4510:1;4503:4;4498:2;4490:6;4486:15;4482:26;4475:37;4530:6;4521:15;;;;;;3823:719;;;;:::o;4547:848::-;4681:6;4689;4697;4705;4758:3;4746:9;4737:7;4733:23;4729:33;4726:53;;;4775:1;4772;4765:12;4726:53;4814:9;4801:23;4833:31;4858:5;4833:31;:::i;:::-;4883:5;-1:-1:-1;4939:2:135;4924:18;;4911:32;4962:18;4992:14;;;4989:34;;;5019:1;5016;5009:12;4989:34;5042:50;5084:7;5075:6;5064:9;5060:22;5042:50;:::i;:::-;5032:60;;5145:2;5134:9;5130:18;5117:32;5101:48;;5174:2;5164:8;5161:16;5158:36;;;5190:1;5187;5180:12;5158:36;;5213:52;5257:7;5246:8;5235:9;5231:24;5213:52;:::i;:::-;5203:62;;;5317:2;5306:9;5302:18;5289:32;5330:33;5355:7;5330:33;:::i;:::-;4547:848;;;;-1:-1:-1;4547:848:135;;-1:-1:-1;;4547:848:135:o;5652:280::-;5710:6;5763:2;5751:9;5742:7;5738:23;5734:32;5731:52;;;5779:1;5776;5769:12;5731:52;5818:9;5805:23;5868:14;5861:5;5857:26;5850:5;5847:37;5837:65;;5898:1;5895;5888:12;6668:301;6727:6;6780:2;6768:9;6759:7;6755:23;6751:32;6748:52;;;6796:1;6793;6786:12;6748:52;6835:9;6822:23;-1:-1:-1;;;;;6878:5:135;6874:46;6867:5;6864:57;6854:85;;6935:1;6932;6925:12;6974:592;7045:6;7053;7106:2;7094:9;7085:7;7081:23;7077:32;7074:52;;;7122:1;7119;7112:12;7074:52;7162:9;7149:23;7191:18;7232:2;7224:6;7221:14;7218:34;;;7248:1;7245;7238:12;7218:34;7286:6;7275:9;7271:22;7261:32;;7331:7;7324:4;7320:2;7316:13;7312:27;7302:55;;7353:1;7350;7343:12;7302:55;7393:2;7380:16;7419:2;7411:6;7408:14;7405:34;;;7435:1;7432;7425:12;7405:34;7480:7;7475:2;7466:6;7462:2;7458:15;7454:24;7451:37;7448:57;;;7501:1;7498;7491:12;7448:57;7532:2;7524:11;;;;;7554:6;;-1:-1:-1;6974:592:135;;-1:-1:-1;;;;6974:592:135:o;8105:829::-;8216:6;8224;8232;8240;8248;8256;8264;8317:3;8305:9;8296:7;8292:23;8288:33;8285:53;;;8334:1;8331;8324:12;8285:53;8373:9;8360:23;8392:31;8417:5;8392:31;:::i;:::-;8442:5;-1:-1:-1;8499:2:135;8484:18;;8471:32;8512:33;8471:32;8512:33;:::i;:::-;8564:7;-1:-1:-1;8618:2:135;8603:18;;8590:32;;-1:-1:-1;8669:2:135;8654:18;;8641:32;;-1:-1:-1;8725:3:135;8710:19;;8697:33;8774:4;8761:18;;8749:31;;8739:59;;8794:1;8791;8784:12;8739:59;8105:829;;;;-1:-1:-1;8105:829:135;;;;8817:7;8871:3;8856:19;;8843:33;;-1:-1:-1;8923:3:135;8908:19;;;8895:33;;8105:829;-1:-1:-1;;8105:829:135:o;8939:388::-;9007:6;9015;9068:2;9056:9;9047:7;9043:23;9039:32;9036:52;;;9084:1;9081;9074:12;9036:52;9123:9;9110:23;9142:31;9167:5;9142:31;:::i;:::-;9192:5;-1:-1:-1;9249:2:135;9234:18;;9221:32;9262:33;9221:32;9262:33;:::i;9332:380::-;9411:1;9407:12;;;;9454;;;9475:61;;9529:4;9521:6;9517:17;9507:27;;9475:61;9582:2;9574:6;9571:14;9551:18;9548:38;9545:161;;9628:10;9623:3;9619:20;9616:1;9609:31;9663:4;9660:1;9653:15;9691:4;9688:1;9681:15;9545:161;;9332:380;;;:::o;9843:543::-;9945:2;9940:3;9937:11;9934:446;;;9981:1;10005:5;10002:1;9995:16;10049:4;10046:1;10036:18;10119:2;10107:10;10103:19;10100:1;10096:27;10090:4;10086:38;10155:4;10143:10;10140:20;10137:47;;;-1:-1:-1;10178:4:135;10137:47;10233:2;10228:3;10224:12;10221:1;10217:20;10211:4;10207:31;10197:41;;10288:82;10306:2;10299:5;10296:13;10288:82;;;10351:17;;;10332:1;10321:13;10288:82;;;10292:3;;;9843:543;;;:::o;10562:1345::-;10688:3;10682:10;10715:18;10707:6;10704:30;10701:56;;;10737:18;;:::i;:::-;10766:97;10856:6;10816:38;10848:4;10842:11;10816:38;:::i;:::-;10810:4;10766:97;:::i;:::-;10918:4;;10975:2;10964:14;;10992:1;10987:663;;;;11694:1;11711:6;11708:89;;;-1:-1:-1;11763:19:135;;;11757:26;11708:89;-1:-1:-1;;10519:1:135;10515:11;;;10511:24;10507:29;10497:40;10543:1;10539:11;;;10494:57;11810:81;;10957:944;;10987:663;9790:1;9783:14;;;9827:4;9814:18;;-1:-1:-1;;11023:20:135;;;11141:236;11155:7;11152:1;11149:14;11141:236;;;11244:19;;;11238:26;11223:42;;11336:27;;;;11304:1;11292:14;;;;11171:19;;11141:236;;;11145:3;11405:6;11396:7;11393:19;11390:201;;;11466:19;;;11460:26;-1:-1:-1;;11549:1:135;11545:14;;;11561:3;11541:24;11537:37;11533:42;11518:58;11503:74;;11390:201;-1:-1:-1;;;;;11637:1:135;11621:14;;;11617:22;11604:36;;-1:-1:-1;10562:1345:135:o;12349:1206::-;12473:18;12468:3;12465:27;12462:53;;;12495:18;;:::i;:::-;12524:94;12614:3;12574:38;12606:4;12600:11;12574:38;:::i;:::-;12568:4;12524:94;:::i;:::-;12644:1;12669:2;12664:3;12661:11;12686:1;12681:616;;;;13341:1;13358:3;13355:93;;;-1:-1:-1;13414:19:135;;;13401:33;13355:93;-1:-1:-1;;10519:1:135;10515:11;;;10511:24;10507:29;10497:40;10543:1;10539:11;;;10494:57;13461:78;;12654:895;;12681:616;9790:1;9783:14;;;9827:4;9814:18;;-1:-1:-1;;12717:17:135;;;12818:9;12840:229;12854:7;12851:1;12848:14;12840:229;;;12943:19;;;12930:33;12915:49;;13050:4;13035:20;;;;13003:1;12991:14;;;;12870:12;12840:229;;;12844:3;13097;13088:7;13085:16;13082:159;;;13221:1;13217:6;13211:3;13205;13202:1;13198:11;13194:21;13190:34;13186:39;13173:9;13168:3;13164:19;13151:33;13147:79;13139:6;13132:95;13082:159;;;13284:1;13278:3;13275:1;13271:11;13267:19;13261:4;13254:33;12654:895;;12349:1206;;;:::o;13560:390::-;13719:2;13708:9;13701:21;13758:6;13753:2;13742:9;13738:18;13731:34;13815:6;13807;13802:2;13791:9;13787:18;13774:48;13871:1;13842:22;;;13866:2;13838:31;;;13831:42;;;;13934:2;13913:15;;;-1:-1:-1;;13909:29:135;13894:45;13890:54;;13560:390;-1:-1:-1;13560:390:135:o;13955:277::-;14022:6;14075:2;14063:9;14054:7;14050:23;14046:32;14043:52;;;14091:1;14088;14081:12;14043:52;14123:9;14117:16;14176:5;14169:13;14162:21;14155:5;14152:32;14142:60;;14198:1;14195;14188:12;14237:127;14298:10;14293:3;14289:20;14286:1;14279:31;14329:4;14326:1;14319:15;14353:4;14350:1;14343:15;14622:127;14683:10;14678:3;14674:20;14671:1;14664:31;14714:4;14711:1;14704:15;14738:4;14735:1;14728:15;14754:176;14821:14;14855:10;;;14867;;;14851:27;;14890:11;;;14887:37;;;14904:18;;:::i;16118:179::-;16186:14;16233:10;;;16221;;;16217:27;;16256:12;;;16253:38;;;16271:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BURNER_ROLE()": "282c51f3",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DOMAIN_SEPARATOR()": "3644e515",
    "MINTER_ROLE()": "d5391393",
    "acceptDefaultAdminTransfer()": "cefc1429",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "balancePerShare()": "a781a3fd",
    "balanceToShares(uint256)": "d8ddf18f",
    "beginDefaultAdminTransfer(address)": "634e93da",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "cancelDefaultAdminTransfer()": "d602b9fd",
    "changeDefaultAdminDelay(uint48)": "649a5ec7",
    "decimals()": "313ce567",
    "defaultAdmin()": "84ef8ffc",
    "defaultAdminDelay()": "cc8463c8",
    "defaultAdminDelayIncreaseWait()": "022d63fb",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,string,string,address)": "613d25bb",
    "isBlacklisted(address)": "fe575a87",
    "maxSupply()": "d5abeb01",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "pendingDefaultAdmin()": "cf6eefb7",
    "pendingDefaultAdminDelay()": "a1eda53c",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rollbackDefaultAdminDelay()": "0aa6220b",
    "setBalancePerShare(uint128)": "a850e024",
    "setName(string)": "c47f0027",
    "setSymbol(string)": "b84c8246",
    "setTransferRestrictor(address)": "4904ac8f",
    "sharesOf(address)": "f5eb42dc",
    "sharesToBalance(uint256)": "53735f37",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferRestrictor()": "d4ec137a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"name\":\"AccessControlEnforcedDefaultAdminDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccessControlEnforcedDefaultAdminRules\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"}],\"name\":\"AccessControlInvalidDefaultAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"PRBMath_MulDiv18_Overflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"PRBMath_MulDiv_Overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermitExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balancePerShare\",\"type\":\"uint256\"}],\"name\":\"BalancePerShareSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminDelayChangeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"effectSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminDelayChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminTransferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"acceptSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminTransferScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NameSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"SymbolSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ITransferRestrictor\",\"name\":\"transferRestrictor\",\"type\":\"address\"}],\"name\":\"TransferRestrictorSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balancePerShare\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"balanceToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"beginDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"}],\"name\":\"changeDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelayIncreaseWait\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"contract ITransferRestrictor\",\"name\":\"_transferRestrictor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollbackDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"balancePerShare_\",\"type\":\"uint128\"}],\"name\":\"setBalancePerShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransferRestrictor\",\"name\":\"newRestrictor\",\"type\":\"address\"}],\"name\":\"setTransferRestrictor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"sharesToBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferRestrictor\",\"outputs\":[{\"internalType\":\"contract ITransferRestrictor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Dinari (https://github.com/dinaricrypto/sbt-contracts/blob/main/src/dShare.sol)\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlEnforcedDefaultAdminDelay(uint48)\":[{\"details\":\"The delay for transferring the default admin delay is enforced and the operation must wait until `schedule`. NOTE: `schedule` can be 0 indicating there's no transfer scheduled.\"}],\"AccessControlEnforcedDefaultAdminRules()\":[{\"details\":\"At least one of the following rules was violated: - The `DEFAULT_ADMIN_ROLE` must only be managed by itself. - The `DEFAULT_ADMIN_ROLE` must only be held by one account at the time. - Any `DEFAULT_ADMIN_ROLE` transfer must be in two delayed steps.\"}],\"AccessControlInvalidDefaultAdmin(address)\":[{\"details\":\"The new default admin is not a valid default admin.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AllowanceOverflow()\":[{\"details\":\"The allowance has overflowed.\"}],\"AllowanceUnderflow()\":[{\"details\":\"The allowance has underflowed.\"}],\"InsufficientAllowance()\":[{\"details\":\"Insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Insufficient balance.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidPermit()\":[{\"details\":\"The permit is invalid.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"PermitExpired()\":[{\"details\":\"The permit has expired.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"The total supply has overflowed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"BalancePerShareSet(uint256)\":{\"details\":\"Emitted when split factor is updated\"},\"DefaultAdminDelayChangeCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdminDelay} is reset if its schedule didn't pass.\"},\"DefaultAdminDelayChangeScheduled(uint48,uint48)\":{\"details\":\"Emitted when a {defaultAdminDelay} change is started, setting `newDelay` as the next delay to be applied between default admin transfer after `effectSchedule` has passed.\"},\"DefaultAdminTransferCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdmin} is reset if it was never accepted, regardless of its schedule.\"},\"DefaultAdminTransferScheduled(address,uint48)\":{\"details\":\"Emitted when a {defaultAdmin} transfer is started, setting `newAdmin` as the next address to become the {defaultAdmin} by calling {acceptDefaultAdminTransfer} only after `acceptSchedule` passes.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"NameSet(string)\":{\"details\":\"Emitted when `name` is set\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"SymbolSet(string)\":{\"details\":\"Emitted when `symbol` is set\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"},\"TransferRestrictorSet(address)\":{\"details\":\"Emitted when transfer restrictor contract is set\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the EIP-712 domain separator for the EIP-2612 permit.\"},\"acceptDefaultAdminTransfer()\":{\"details\":\"Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed.\"},\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balancePerShare()\":{\"details\":\"Returns the number of tokens an internal share amount represents. This amount is assumed to have 18 decimals and is divided by 10 **18 when applied.\"},\"beginDefaultAdminTransfer(address)\":{\"details\":\"Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event.\"},\"burn(uint256)\":{\"details\":\"Only callable by approved burner\",\"params\":{\"value\":\"Amount of tokens to burn\"}},\"burnFrom(address,uint256)\":{\"details\":\"Only callable by approved burner\",\"params\":{\"account\":\"Address to burn tokens from\",\"value\":\"Amount of tokens to burn\"}},\"cancelDefaultAdminTransfer()\":{\"details\":\"Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event.\"},\"changeDefaultAdminDelay(uint48)\":{\"details\":\"Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"defaultAdmin()\":{\"details\":\"Returns the address of the current `DEFAULT_ADMIN_ROLE` holder.\"},\"defaultAdminDelay()\":{\"details\":\"Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}.\"},\"defaultAdminDelayIncreaseWait()\":{\"details\":\"Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds).\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isBlacklisted(address)\":{\"details\":\"Returns true if the account is blacklisted , if the account is the zero address\",\"params\":{\"account\":\"The address of the account\"},\"returns\":{\"_0\":\"Whether the account is blacklisted\"}},\"mint(address,uint256)\":{\"details\":\"Only callable by approved minter\",\"params\":{\"to\":\"Address to mint tokens to\",\"value\":\"Amount of tokens to mint\"}},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit.\"},\"owner()\":{\"details\":\"See {IERC5313-owner}.\"},\"pendingDefaultAdmin()\":{\"details\":\"Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced.\"},\"pendingDefaultAdminDelay()\":{\"details\":\"Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event.\"},\"renounceRole(bytes32,address)\":{\"details\":\"See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role.\"},\"revokeRole(bytes32,address)\":{\"details\":\"See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"rollbackDefaultAdminDelay()\":{\"details\":\"Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event.\"},\"setBalancePerShare(uint128)\":{\"details\":\"Relies on offchain computation of aggregate splits and reverse splits\"},\"setName(string)\":{\"details\":\"Only callable by owner or deployer\"},\"setSymbol(string)\":{\"details\":\"Only callable by owner or deployer\"},\"setTransferRestrictor(address)\":{\"details\":\"Only callable by owner\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"PRBMath_MulDiv18_Overflow(uint256,uint256)\":[{\"notice\":\"Thrown when the resultant value in {mulDiv18} overflows uint256.\"}],\"PRBMath_MulDiv_Overflow(uint256,uint256,uint256)\":[{\"notice\":\"Thrown when the resultant value in {mulDiv} overflows uint256.\"}],\"Unauthorized()\":[{\"notice\":\"------------------ Types ------------------ ///\"}]},\"kind\":\"user\",\"methods\":{\"BURNER_ROLE()\":{\"notice\":\"Role for approved burners\"},\"MINTER_ROLE()\":{\"notice\":\"Role for approved minters\"},\"burn(uint256)\":{\"notice\":\"Burn tokens\"},\"burnFrom(address,uint256)\":{\"notice\":\"Burn tokens from an account\"},\"initialize(address,string,string,address)\":{\"notice\":\"------------------ Initialization ------------------ ///\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens\"},\"name()\":{\"notice\":\"Token name\"},\"setBalancePerShare(uint128)\":{\"notice\":\"Update split factor\"},\"setName(string)\":{\"notice\":\"Set token name\"},\"setSymbol(string)\":{\"notice\":\"Set token symbol\"},\"setTransferRestrictor(address)\":{\"notice\":\"Set transfer restrictor contract\"},\"symbol()\":{\"notice\":\"Token symbol\"},\"totalSupply()\":{\"notice\":\"------------------ ERC20 ------------------\"},\"transferRestrictor()\":{\"notice\":\"Contract to restrict transfers\"}},\"notice\":\"Core token contract for bridged assets. Rebases on stock splits. ERC20 with minter, burner, and blacklist Uses solady ERC20 which allows EIP-2612 domain separator with `name` changes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dinary/DShare.sol\":\"DShare\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-math/=node_modules/prb-math/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/dinary/DShare.sol\":{\"keccak256\":\"0x2b1090ab45e429efbfeb4f2815eeae8dc60129b7d4451f4c1c09a229673872c0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8ef001a18ad1612c167ea6dba3a03233620f85ea81e25ae103af4c6252b7f312\",\"dweb:/ipfs/QmTkPPkWXtrGvemuL2jLehUQdA4dbrkcENRcAVGhjG95Vm\"]},\"contracts/dinary/ERC20Rebasing.sol\":{\"keccak256\":\"0x0e62698f33393dd61126e373e178ff33ce2167139040d6ef7fd2be5d9b5dcd6a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1828348284ef3c63c1f87af3136c936b51a04c28a81e5f63966a04e30609ee45\",\"dweb:/ipfs/QmPJhkyF71q4DX8ArC2jxmCQVGE9ikcjvyYxoJuPtyNWNm\"]},\"contracts/dinary/IDShare.sol\":{\"keccak256\":\"0x376e4b9abec934b1f7fab6d185a6053a7204f2dda78732457e400bba1f066564\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4399f5a0b1947b8852e342d3c93f26e60310ada2bd1a6bb5d207e8d3a2c3e476\",\"dweb:/ipfs/QmX7KmTubWH7bVcQ1Un73LgdRUGLyim49TWegFHLN8BvfW\"]},\"contracts/dinary/ITransferRestrictor.sol\":{\"keccak256\":\"0xfa53c6ef18fde050f0b65a9bbb318817a933d656ce560e0eed15f4e9619050fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82b30b78bf22b31fa54f0c55bf4346aa73abfca2d0938f679cbd1b78206bde10\",\"dweb:/ipfs/QmUyNdo2EXaXsZURBDVbwnyMFW15jEzCeSsVQU6WPqqeFV\"]},\"contracts/dinary/common/NumberUtils.sol\":{\"keccak256\":\"0xe31c02e22f41db2ee2f05f982217ec68cc4eeb3c9ea3b0b73f7f14f3d6a3ff87\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://03099d54d1d3cbc87a0e49c1d7b83923fd57f2101cfc915af174b37cc7fd7a6f\",\"dweb:/ipfs/QmZ2gWJxo1d4ZK8mA3xytsXjapDUDM3EeHTW8KBPHCcE8R\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol\":{\"keccak256\":\"0x956cbd3e346c8ff9b9e51b6e414f23b056198016f805eb04c6634946a10760af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b6578d7ddfb0bf8c00edf3d21fa1f8063c41a2d478eef2a0f04ee0900e9c5e\",\"dweb:/ipfs/QmahbtHqGXJxthFT7oiZCkQfw7cezVAZpkWdrhS9xWZ9xy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"node_modules/@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol\":{\"keccak256\":\"0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea\",\"dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC5313.sol\":{\"keccak256\":\"0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559\",\"dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9\",\"dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH\"]},\"node_modules/solady/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb4a3f9ba8a05107f7370de42cff57f3ad26dafd438712c11531a5892de2f59e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a9ca06e3cf6dea1f9a4c5599581573b7d81cd64dc3afb582f325ccf5fdd6dc\",\"dweb:/ipfs/Qmb9r5dDceNF4W8S5u6i85RsNTgE5XG9HbTXkyS25ad3C6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "AccessControlEnforcedDefaultAdminDelay"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlEnforcedDefaultAdminRules"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "defaultAdmin",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AccessControlInvalidDefaultAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AllowanceOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AllowanceUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidInitialization"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInitializing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PRBMath_MulDiv18_Overflow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "denominator",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "PRBMath_MulDiv_Overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PermitExpired"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "bits",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SafeCastOverflowedUintDowncast"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TotalSupplyOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "balancePerShare",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BalancePerShareSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminDelayChangeCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "effectSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminDelayChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminTransferCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "acceptSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminTransferScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NameSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SymbolSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract ITransferRestrictor",
              "name": "transferRestrictor",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferRestrictorSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BURNER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "result",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptDefaultAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "balancePerShare",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beginDefaultAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelDefaultAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeDefaultAdminDelay"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelayIncreaseWait",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "contract ITransferRestrictor",
              "name": "_transferRestrictor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBlacklisted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rollbackDefaultAdminDelay"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "balancePerShare_",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBalancePerShare"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setName"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newSymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSymbol"
        },
        {
          "inputs": [
            {
              "internalType": "contract ITransferRestrictor",
              "name": "newRestrictor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTransferRestrictor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferRestrictor",
          "outputs": [
            {
              "internalType": "contract ITransferRestrictor",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "Returns the EIP-712 domain separator for the EIP-2612 permit."
          },
          "acceptDefaultAdminTransfer()": {
            "details": "Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed."
          },
          "allowance(address,address)": {
            "details": "Returns the amount of tokens that `spender` can spend on behalf of `owner`."
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."
          },
          "balancePerShare()": {
            "details": "Returns the number of tokens an internal share amount represents. This amount is assumed to have 18 decimals and is divided by 10 **18 when applied."
          },
          "beginDefaultAdminTransfer(address)": {
            "details": "Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event."
          },
          "burn(uint256)": {
            "details": "Only callable by approved burner",
            "params": {
              "value": "Amount of tokens to burn"
            }
          },
          "burnFrom(address,uint256)": {
            "details": "Only callable by approved burner",
            "params": {
              "account": "Address to burn tokens from",
              "value": "Amount of tokens to burn"
            }
          },
          "cancelDefaultAdminTransfer()": {
            "details": "Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event."
          },
          "changeDefaultAdminDelay(uint48)": {
            "details": "Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event."
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor"
          },
          "decimals()": {
            "details": "Returns the decimals places of the token."
          },
          "defaultAdmin()": {
            "details": "Returns the address of the current `DEFAULT_ADMIN_ROLE` holder."
          },
          "defaultAdminDelay()": {
            "details": "Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}."
          },
          "defaultAdminDelayIncreaseWait()": {
            "details": "Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds)."
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isBlacklisted(address)": {
            "details": "Returns true if the account is blacklisted , if the account is the zero address",
            "params": {
              "account": "The address of the account"
            },
            "returns": {
              "_0": "Whether the account is blacklisted"
            }
          },
          "mint(address,uint256)": {
            "details": "Only callable by approved minter",
            "params": {
              "to": "Address to mint tokens to",
              "value": "Amount of tokens to mint"
            }
          },
          "nonces(address)": {
            "details": "Returns the current nonce for `owner`. This value is used to compute the signature for EIP-2612 permit."
          },
          "owner()": {
            "details": "See {IERC5313-owner}."
          },
          "pendingDefaultAdmin()": {
            "details": "Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced."
          },
          "pendingDefaultAdminDelay()": {
            "details": "Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Sets `value` as the allowance of `spender` over the tokens of `owner`, authorized by a signed approval by `owner`. Emits a {Approval} event."
          },
          "renounceRole(bytes32,address)": {
            "details": "See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role."
          },
          "revokeRole(bytes32,address)": {
            "details": "See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "rollbackDefaultAdminDelay()": {
            "details": "Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event."
          },
          "setBalancePerShare(uint128)": {
            "details": "Relies on offchain computation of aggregate splits and reverse splits"
          },
          "setName(string)": {
            "details": "Only callable by owner or deployer"
          },
          "setSymbol(string)": {
            "details": "Only callable by owner or deployer"
          },
          "setTransferRestrictor(address)": {
            "details": "Only callable by owner"
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transfer(address,uint256)": {
            "details": "Transfer `amount` tokens from the caller to `to`. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BURNER_ROLE()": {
            "notice": "Role for approved burners"
          },
          "MINTER_ROLE()": {
            "notice": "Role for approved minters"
          },
          "burn(uint256)": {
            "notice": "Burn tokens"
          },
          "burnFrom(address,uint256)": {
            "notice": "Burn tokens from an account"
          },
          "initialize(address,string,string,address)": {
            "notice": "------------------ Initialization ------------------ ///"
          },
          "mint(address,uint256)": {
            "notice": "Mint tokens"
          },
          "name()": {
            "notice": "Token name"
          },
          "setBalancePerShare(uint128)": {
            "notice": "Update split factor"
          },
          "setName(string)": {
            "notice": "Set token name"
          },
          "setSymbol(string)": {
            "notice": "Set token symbol"
          },
          "setTransferRestrictor(address)": {
            "notice": "Set transfer restrictor contract"
          },
          "symbol()": {
            "notice": "Token symbol"
          },
          "totalSupply()": {
            "notice": "------------------ ERC20 ------------------"
          },
          "transferRestrictor()": {
            "notice": "Contract to restrict transfers"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@prb/=node_modules/@prb/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":prb-math/=node_modules/prb-math/",
        ":solady/=node_modules/solady/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dinary/DShare.sol": "DShare"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dinary/DShare.sol": {
        "keccak256": "0x2b1090ab45e429efbfeb4f2815eeae8dc60129b7d4451f4c1c09a229673872c0",
        "urls": [
          "bzz-raw://8ef001a18ad1612c167ea6dba3a03233620f85ea81e25ae103af4c6252b7f312",
          "dweb:/ipfs/QmTkPPkWXtrGvemuL2jLehUQdA4dbrkcENRcAVGhjG95Vm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/dinary/ERC20Rebasing.sol": {
        "keccak256": "0x0e62698f33393dd61126e373e178ff33ce2167139040d6ef7fd2be5d9b5dcd6a",
        "urls": [
          "bzz-raw://1828348284ef3c63c1f87af3136c936b51a04c28a81e5f63966a04e30609ee45",
          "dweb:/ipfs/QmPJhkyF71q4DX8ArC2jxmCQVGE9ikcjvyYxoJuPtyNWNm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/dinary/IDShare.sol": {
        "keccak256": "0x376e4b9abec934b1f7fab6d185a6053a7204f2dda78732457e400bba1f066564",
        "urls": [
          "bzz-raw://4399f5a0b1947b8852e342d3c93f26e60310ada2bd1a6bb5d207e8d3a2c3e476",
          "dweb:/ipfs/QmX7KmTubWH7bVcQ1Un73LgdRUGLyim49TWegFHLN8BvfW"
        ],
        "license": "MIT"
      },
      "contracts/dinary/ITransferRestrictor.sol": {
        "keccak256": "0xfa53c6ef18fde050f0b65a9bbb318817a933d656ce560e0eed15f4e9619050fb",
        "urls": [
          "bzz-raw://82b30b78bf22b31fa54f0c55bf4346aa73abfca2d0938f679cbd1b78206bde10",
          "dweb:/ipfs/QmUyNdo2EXaXsZURBDVbwnyMFW15jEzCeSsVQU6WPqqeFV"
        ],
        "license": "MIT"
      },
      "contracts/dinary/common/NumberUtils.sol": {
        "keccak256": "0xe31c02e22f41db2ee2f05f982217ec68cc4eeb3c9ea3b0b73f7f14f3d6a3ff87",
        "urls": [
          "bzz-raw://03099d54d1d3cbc87a0e49c1d7b83923fd57f2101cfc915af174b37cc7fd7a6f",
          "dweb:/ipfs/QmZ2gWJxo1d4ZK8mA3xytsXjapDUDM3EeHTW8KBPHCcE8R"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol": {
        "keccak256": "0x956cbd3e346c8ff9b9e51b6e414f23b056198016f805eb04c6634946a10760af",
        "urls": [
          "bzz-raw://d2b6578d7ddfb0bf8c00edf3d21fa1f8063c41a2d478eef2a0f04ee0900e9c5e",
          "dweb:/ipfs/QmahbtHqGXJxthFT7oiZCkQfw7cezVAZpkWdrhS9xWZ9xy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
        "urls": [
          "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
          "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol": {
        "keccak256": "0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203",
        "urls": [
          "bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea",
          "dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC5313.sol": {
        "keccak256": "0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621",
        "urls": [
          "bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559",
          "dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0xaa374e2c26cc93e8c22a6953804ee05f811597ef5fa82f76824378b22944778b",
        "urls": [
          "bzz-raw://279c732e161d623cf4d8a9519ca4c42c0c2db99842d0eb2a20c10fde3fa722c9",
          "dweb:/ipfs/QmVViuUXbinQGqtG5M21SgVzKihiCbFUChd4tDhtvwRmxH"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/tokens/ERC20.sol": {
        "keccak256": "0xb4a3f9ba8a05107f7370de42cff57f3ad26dafd438712c11531a5892de2f59e0",
        "urls": [
          "bzz-raw://f0a9ca06e3cf6dea1f9a4c5599581573b7d81cd64dc3afb582f325ccf5fdd6dc",
          "dweb:/ipfs/Qmb9r5dDceNF4W8S5u6i85RsNTgE5XG9HbTXkyS25ad3C6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dinary/DShare.sol",
    "id": 1059,
    "exportedSymbols": {
      "AccessControlDefaultAdminRulesUpgradeable": [
        59967
      ],
      "DShare": [
        1058
      ],
      "ERC20Rebasing": [
        2001
      ],
      "IDShare": [
        2043
      ],
      "ITransferRestrictor": [
        2107
      ],
      "Initializable": [
        60221
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:7494:1",
    "nodes": [
      {
        "id": 593,
        "nodeType": "PragmaDirective",
        "src": "45:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".25"
        ]
      },
      {
        "id": 595,
        "nodeType": "ImportDirective",
        "src": "170:96:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1059,
        "sourceUnit": 60222,
        "symbolAliases": [
          {
            "foreign": {
              "id": 594,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60221,
              "src": "178:13:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 597,
        "nodeType": "ImportDirective",
        "src": "267:162:1",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1059,
        "sourceUnit": 59968,
        "symbolAliases": [
          {
            "foreign": {
              "id": 596,
              "name": "AccessControlDefaultAdminRulesUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59967,
              "src": "275:41:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 600,
        "nodeType": "ImportDirective",
        "src": "430:59:1",
        "nodes": [],
        "absolutePath": "contracts/dinary/IDShare.sol",
        "file": "./IDShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1059,
        "sourceUnit": 2044,
        "symbolAliases": [
          {
            "foreign": {
              "id": 598,
              "name": "IDShare",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2043,
              "src": "438:7:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 599,
              "name": "ITransferRestrictor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2107,
              "src": "447:19:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 602,
        "nodeType": "ImportDirective",
        "src": "490:50:1",
        "nodes": [],
        "absolutePath": "contracts/dinary/ERC20Rebasing.sol",
        "file": "./ERC20Rebasing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1059,
        "sourceUnit": 2002,
        "symbolAliases": [
          {
            "foreign": {
              "id": 601,
              "name": "ERC20Rebasing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2001,
              "src": "498:13:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1058,
        "nodeType": "ContractDefinition",
        "src": "837:6701:1",
        "nodes": [
          {
            "id": 614,
            "nodeType": "ErrorDefinition",
            "src": "1000:21:1",
            "nodes": [],
            "documentation": {
              "id": 612,
              "nodeType": "StructuredDocumentation",
              "src": "943:52:1",
              "text": "------------------ Types ------------------ ///"
            },
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "1006:12:1",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1018:2:1"
            }
          },
          {
            "id": 616,
            "nodeType": "ErrorDefinition",
            "src": "1026:18:1",
            "nodes": [],
            "errorSelector": "7c946ed7",
            "name": "ZeroValue",
            "nameLocation": "1032:9:1",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:2:1"
            }
          },
          {
            "id": 621,
            "nodeType": "EventDefinition",
            "src": "1090:27:1",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 617,
              "nodeType": "StructuredDocumentation",
              "src": "1050:35:1",
              "text": "@dev Emitted when `name` is set"
            },
            "eventSelector": "13c98778b0c1a086bb98d7f1986e15788b5d3a1ad4c492e1d78f1c4cc51c20cf",
            "name": "NameSet",
            "nameLocation": "1096:7:1",
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1111:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "1104:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:13:1"
            }
          },
          {
            "id": 626,
            "nodeType": "EventDefinition",
            "src": "1164:31:1",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 622,
              "nodeType": "StructuredDocumentation",
              "src": "1122:37:1",
              "text": "@dev Emitted when `symbol` is set"
            },
            "eventSelector": "3e46ff90086ee29856e77591e82c82ff8ed513379b0fd82e84fc5290dd633c99",
            "name": "SymbolSet",
            "nameLocation": "1170:9:1",
            "parameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1187:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "1180:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:15:1"
            }
          },
          {
            "id": 632,
            "nodeType": "EventDefinition",
            "src": "1262:76:1",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 627,
              "nodeType": "StructuredDocumentation",
              "src": "1200:57:1",
              "text": "@dev Emitted when transfer restrictor contract is set"
            },
            "eventSelector": "c2315c0e6785ae744f588d76c3aa8b08329e38dc33e849116b425556ef076ea4",
            "name": "TransferRestrictorSet",
            "nameLocation": "1268:21:1",
            "parameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "transferRestrictor",
                  "nameLocation": "1318:18:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "1290:46:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                    "typeString": "contract ITransferRestrictor"
                  },
                  "typeName": {
                    "id": 629,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 628,
                      "name": "ITransferRestrictor",
                      "nameLocations": [
                        "1290:19:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2107,
                      "src": "1290:19:1"
                    },
                    "referencedDeclaration": 2107,
                    "src": "1290:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1289:48:1"
            }
          },
          {
            "id": 637,
            "nodeType": "EventDefinition",
            "src": "1393:50:1",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 633,
              "nodeType": "StructuredDocumentation",
              "src": "1343:45:1",
              "text": "@dev Emitted when split factor is updated"
            },
            "eventSelector": "7d1fa2fe734d16276290c7f8713b6aac4d03f2ef2a604f4ef62525ccead2cf13",
            "name": "BalancePerShareSet",
            "nameLocation": "1399:18:1",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balancePerShare",
                  "nameLocation": "1426:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "1418:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:25:1"
            }
          },
          {
            "id": 643,
            "nodeType": "VariableDeclaration",
            "src": "1553:62:1",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "1511:37:1",
              "text": "@notice Role for approved minters"
            },
            "functionSelector": "d5391393",
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "1577:11:1",
            "scope": 1058,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 639,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1553:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 641,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1601:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 640,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1591:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 642,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1591:24:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 649,
            "nodeType": "VariableDeclaration",
            "src": "1663:62:1",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 644,
              "nodeType": "StructuredDocumentation",
              "src": "1621:37:1",
              "text": "@notice Role for approved burners"
            },
            "functionSelector": "282c51f3",
            "mutability": "constant",
            "name": "BURNER_ROLE",
            "nameLocation": "1687:11:1",
            "scope": 1058,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 645,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1663:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4255524e45525f524f4c45",
                  "id": 647,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1711:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  },
                  "value": "BURNER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
                    "typeString": "literal_string \"BURNER_ROLE\""
                  }
                ],
                "id": 646,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1701:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 648,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1701:24:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 661,
            "nodeType": "StructDefinition",
            "src": "1789:244:1",
            "nodes": [],
            "canonicalName": "DShare.dShareStorage",
            "documentation": {
              "id": 650,
              "nodeType": "StructuredDocumentation",
              "src": "1732:52:1",
              "text": "------------------ State ------------------ ///"
            },
            "members": [
              {
                "constant": false,
                "id": 652,
                "mutability": "mutable",
                "name": "_name",
                "nameLocation": "1827:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 661,
                "src": "1820:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 651,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1820:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 654,
                "mutability": "mutable",
                "name": "_symbol",
                "nameLocation": "1849:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 661,
                "src": "1842:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 653,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1842:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 657,
                "mutability": "mutable",
                "name": "_transferRestrictor",
                "nameLocation": "1886:19:1",
                "nodeType": "VariableDeclaration",
                "scope": 661,
                "src": "1866:39:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                  "typeString": "contract ITransferRestrictor"
                },
                "typeName": {
                  "id": 656,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 655,
                    "name": "ITransferRestrictor",
                    "nameLocations": [
                      "1866:19:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2107,
                    "src": "1866:19:1"
                  },
                  "referencedDeclaration": 2107,
                  "src": "1866:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                    "typeString": "contract ITransferRestrictor"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 660,
                "mutability": "mutable",
                "name": "_balancePerShare",
                "nameLocation": "2010:16:1",
                "nodeType": "VariableDeclaration",
                "scope": 661,
                "src": "2002:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 659,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2002:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "dShareStorage",
            "nameLocation": "1796:13:1",
            "scope": 1058,
            "visibility": "public"
          },
          {
            "id": 664,
            "nodeType": "VariableDeclaration",
            "src": "2149:115:1",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "dShareStorageLocation",
            "nameLocation": "2174:21:1",
            "scope": 1058,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 662,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2149:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307837333135626562323338313637393739356530363837303032316330666361356465623835363136653239653039386332653762376534383866313835383030",
              "id": 663,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2198:66:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_52054397512019111503629656620636023556008718931990638603941862601659944294400_by_1",
                "typeString": "int_const 5205...(69 digits omitted)...4400"
              },
              "value": "0x7315beb2381679795e06870021c0fca5deb85616e29e098c2e7b7e488f185800"
            },
            "visibility": "private"
          },
          {
            "id": 672,
            "nodeType": "FunctionDefinition",
            "src": "2271:156:1",
            "nodes": [],
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "2347:80:1",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "2366:55:1",
                    "nodeType": "YulBlock",
                    "src": "2366:55:1",
                    "statements": [
                      {
                        "nativeSrc": "2380:31:1",
                        "nodeType": "YulAssignment",
                        "src": "2380:31:1",
                        "value": {
                          "name": "dShareStorageLocation",
                          "nativeSrc": "2390:21:1",
                          "nodeType": "YulIdentifier",
                          "src": "2390:21:1"
                        },
                        "variableNames": [
                          {
                            "name": "$.slot",
                            "nativeSrc": "2380:6:1",
                            "nodeType": "YulIdentifier",
                            "src": "2380:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 668,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "2380:6:1",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 664,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2390:21:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 670,
                  "nodeType": "InlineAssembly",
                  "src": "2357:64:1"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getdShareStorage",
            "nameLocation": "2280:17:1",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2297:2:1"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "$",
                  "nameLocation": "2344:1:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "2322:23:1",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                    "typeString": "struct DShare.dShareStorage"
                  },
                  "typeName": {
                    "id": 667,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 666,
                      "name": "dShareStorage",
                      "nameLocations": [
                        "2322:13:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 661,
                      "src": "2322:13:1"
                    },
                    "referencedDeclaration": 661,
                    "src": "2322:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2321:25:1"
            },
            "scope": 1058,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 723,
            "nodeType": "FunctionDefinition",
            "src": "2499:471:1",
            "nodes": [],
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "2676:294:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2734:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 689,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2737:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 687,
                      "name": "__AccessControlDefaultAdminRules_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59229,
                      "src": "2686:47:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint48_$_t_address_$returns$__$",
                        "typeString": "function (uint48,address)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2686:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:57:1"
                },
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "2776:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 722,
                      "src": "2754:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 693,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 692,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "2754:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "2754:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "2754:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 695,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "2780:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2780:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2754:45:1"
                },
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 698,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "2809:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2811:5:1",
                      "memberName": "_name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 652,
                      "src": "2809:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 701,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "2819:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2809:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:15:1"
                },
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 704,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "2834:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2836:7:1",
                      "memberName": "_symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 654,
                      "src": "2834:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 707,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "2846:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2834:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "2834:19:1"
                },
                {
                  "expression": {
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 710,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "2863:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2865:19:1",
                      "memberName": "_transferRestrictor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 657,
                      "src": "2863:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                        "typeString": "contract ITransferRestrictor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 713,
                      "name": "_transferRestrictor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "2887:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                        "typeString": "contract ITransferRestrictor"
                      }
                    },
                    "src": "2863:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:43:1"
                },
                {
                  "expression": {
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 716,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "2916:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2918:16:1",
                      "memberName": "_balancePerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 660,
                      "src": "2916:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 719,
                      "name": "_INITIAL_BALANCE_PER_SHARE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1677,
                      "src": "2937:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2916:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:47:1"
                }
              ]
            },
            "documentation": {
              "id": 673,
              "nodeType": "StructuredDocumentation",
              "src": "2433:61:1",
              "text": "------------------ Initialization ------------------ ///"
            },
            "functionSelector": "613d25bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 685,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 684,
                  "name": "initializer",
                  "nameLocations": [
                    "2664:11:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60075,
                  "src": "2664:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2664:11:1"
              }
            ],
            "name": "initialize",
            "nameLocation": "2508:10:1",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2536:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "2528:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2565:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "2551:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2594:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "2580:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "_transferRestrictor",
                  "nameLocation": "2631:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "2611:39:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                    "typeString": "contract ITransferRestrictor"
                  },
                  "typeName": {
                    "id": 681,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 680,
                      "name": "ITransferRestrictor",
                      "nameLocations": [
                        "2611:19:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2107,
                      "src": "2611:19:1"
                    },
                    "referencedDeclaration": 2107,
                    "src": "2611:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2518:138:1"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2676:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 731,
            "nodeType": "FunctionDefinition",
            "src": "3029:53:1",
            "nodes": [],
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "3043:39:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 727,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60189,
                      "src": "3053:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:22:1"
                }
              ]
            },
            "documentation": {
              "id": 724,
              "nodeType": "StructuredDocumentation",
              "src": "2976:48:1",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3040:2:1"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3043:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 748,
            "nodeType": "FunctionDefinition",
            "src": "3174:147:1",
            "nodes": [],
            "body": {
              "id": 747,
              "nodeType": "Block",
              "src": "3235:86:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "3267:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "3245:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 739,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 738,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "3245:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "3245:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "3245:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 743,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 741,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "3271:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3245:45:1"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 744,
                      "name": "$",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 740,
                      "src": "3307:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage storage pointer"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3309:5:1",
                    "memberName": "_name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 652,
                    "src": "3307:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 737,
                  "id": 746,
                  "nodeType": "Return",
                  "src": "3300:14:1"
                }
              ]
            },
            "baseFunctions": [
              71841
            ],
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "3147:22:1",
              "text": "@notice Token name"
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "3183:4:1",
            "overrides": {
              "id": 734,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3202:8:1"
            },
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3187:2:1"
            },
            "returnParameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "3220:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3220:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3219:15:1"
            },
            "scope": 1058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 765,
            "nodeType": "FunctionDefinition",
            "src": "3356:151:1",
            "nodes": [],
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "3419:88:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "3451:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 764,
                      "src": "3429:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 756,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 755,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "3429:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "3429:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "3429:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 760,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 758,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "3455:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3455:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3429:45:1"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 761,
                      "name": "$",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "3491:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage storage pointer"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3493:7:1",
                    "memberName": "_symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 654,
                    "src": "3491:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 754,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "3484:16:1"
                }
              ]
            },
            "baseFunctions": [
              71847
            ],
            "documentation": {
              "id": 749,
              "nodeType": "StructuredDocumentation",
              "src": "3327:24:1",
              "text": "@notice Token symbol"
            },
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3365:6:1",
            "overrides": {
              "id": 751,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3386:8:1"
            },
            "parameters": {
              "id": 750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3371:2:1"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 765,
                  "src": "3404:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3403:15:1"
            },
            "scope": 1058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 782,
            "nodeType": "FunctionDefinition",
            "src": "3560:172:1",
            "nodes": [],
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "3632:100:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 774,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "3664:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 781,
                      "src": "3642:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 773,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 772,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "3642:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "3642:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "3642:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 777,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 775,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "3668:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3668:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3642:45:1"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 778,
                      "name": "$",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "3704:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage storage pointer"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3706:19:1",
                    "memberName": "_transferRestrictor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 657,
                    "src": "3704:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "functionReturnParameters": 771,
                  "id": 780,
                  "nodeType": "Return",
                  "src": "3697:28:1"
                }
              ]
            },
            "baseFunctions": [
              2013
            ],
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "3513:42:1",
              "text": "@notice Contract to restrict transfers"
            },
            "functionSelector": "d4ec137a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferRestrictor",
            "nameLocation": "3569:18:1",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3587:2:1"
            },
            "returnParameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "3611:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                    "typeString": "contract ITransferRestrictor"
                  },
                  "typeName": {
                    "id": 769,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 768,
                      "name": "ITransferRestrictor",
                      "nameLocations": [
                        "3611:19:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2107,
                      "src": "3611:19:1"
                    },
                    "referencedDeclaration": 2107,
                    "src": "3611:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3610:21:1"
            },
            "scope": 1058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 808,
            "nodeType": "FunctionDefinition",
            "src": "3738:345:1",
            "nodes": [],
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "3804:279:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "3836:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 807,
                      "src": "3814:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 789,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 788,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "3814:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "3814:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "3814:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 793,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 791,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "3840:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3840:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3814:45:1"
                },
                {
                  "assignments": [
                    795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 795,
                      "mutability": "mutable",
                      "name": "_balancePerShare",
                      "nameLocation": "3877:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 807,
                      "src": "3869:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 794,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3869:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "expression": {
                      "id": 796,
                      "name": "$",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "3896:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage storage pointer"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3898:16:1",
                    "memberName": "_balancePerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 660,
                    "src": "3896:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3869:45:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 799,
                      "name": "_balancePerShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "3987:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4007:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3987:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 804,
                  "nodeType": "IfStatement",
                  "src": "3983:60:1",
                  "trueBody": {
                    "expression": {
                      "id": 802,
                      "name": "_INITIAL_BALANCE_PER_SHARE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1677,
                      "src": "4017:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "functionReturnParameters": 787,
                    "id": 803,
                    "nodeType": "Return",
                    "src": "4010:33:1"
                  }
                },
                {
                  "expression": {
                    "id": 805,
                    "name": "_balancePerShare",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 795,
                    "src": "4060:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 787,
                  "id": 806,
                  "nodeType": "Return",
                  "src": "4053:23:1"
                }
              ]
            },
            "baseFunctions": [
              1683
            ],
            "functionSelector": "a781a3fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balancePerShare",
            "nameLocation": "3747:15:1",
            "overrides": {
              "id": 784,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3777:8:1"
            },
            "parameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3762:2:1"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "3795:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3795:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3794:9:1"
            },
            "scope": 1058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 834,
            "nodeType": "FunctionDefinition",
            "src": "4227:200:1",
            "nodes": [],
            "body": {
              "id": 833,
              "nodeType": "Block",
              "src": "4307:120:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 819,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "4339:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 833,
                      "src": "4317:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 818,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 817,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "4317:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "4317:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "4317:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 822,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 820,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "4343:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4343:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4317:45:1"
                },
                {
                  "expression": {
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 823,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "4372:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4374:5:1",
                      "memberName": "_name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 652,
                      "src": "4372:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 826,
                      "name": "newName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "4382:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4372:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "4372:17:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 830,
                        "name": "newName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "4412:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 829,
                      "name": "NameSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "4404:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4404:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 832,
                  "nodeType": "EmitStatement",
                  "src": "4399:21:1"
                }
              ]
            },
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "4148:74:1",
              "text": "@notice Set token name\n @dev Only callable by owner or deployer"
            },
            "functionSelector": "c47f0027",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 814,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58455,
                    "src": "4287:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 815,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 813,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4278:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58484,
                  "src": "4278:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4278:28:1"
              }
            ],
            "name": "setName",
            "nameLocation": "4236:7:1",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "newName",
                  "nameLocation": "4260:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "4244:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4244:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4243:25:1"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4307:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 860,
            "nodeType": "FunctionDefinition",
            "src": "4514:212:1",
            "nodes": [],
            "body": {
              "id": 859,
              "nodeType": "Block",
              "src": "4598:128:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "4630:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 859,
                      "src": "4608:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 844,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 843,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "4608:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "4608:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "4608:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 848,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 846,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "4634:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4634:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4608:45:1"
                },
                {
                  "expression": {
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 849,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "4663:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4665:7:1",
                      "memberName": "_symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 654,
                      "src": "4663:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 852,
                      "name": "newSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "4675:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "4663:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 856,
                        "name": "newSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 837,
                        "src": "4709:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 855,
                      "name": "SymbolSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "4699:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4699:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 858,
                  "nodeType": "EmitStatement",
                  "src": "4694:25:1"
                }
              ]
            },
            "documentation": {
              "id": 835,
              "nodeType": "StructuredDocumentation",
              "src": "4433:76:1",
              "text": "@notice Set token symbol\n @dev Only callable by owner or deployer"
            },
            "functionSelector": "b84c8246",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 840,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58455,
                    "src": "4578:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 841,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 839,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4569:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58484,
                  "src": "4569:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4569:28:1"
              }
            ],
            "name": "setSymbol",
            "nameLocation": "4523:9:1",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "newSymbol",
                  "nameLocation": "4549:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "4533:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4533:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4532:27:1"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4598:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 893,
            "nodeType": "FunctionDefinition",
            "src": "4851:308:1",
            "nodes": [],
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "4943:216:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 869,
                      "name": "balancePerShare_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "4957:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4977:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4957:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 875,
                  "nodeType": "IfStatement",
                  "src": "4953:45:1",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 872,
                        "name": "ZeroValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "4987:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4987:11:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 874,
                    "nodeType": "RevertStatement",
                    "src": "4980:18:1"
                  }
                },
                {
                  "assignments": [
                    878
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 878,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "5031:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "5009:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 877,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 876,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "5009:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "5009:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "5009:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 881,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 879,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "5035:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5035:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5009:45:1"
                },
                {
                  "expression": {
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 882,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "5064:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5066:16:1",
                      "memberName": "_balancePerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 660,
                      "src": "5064:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 885,
                      "name": "balancePerShare_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 863,
                      "src": "5085:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "5064:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "5064:37:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 889,
                        "name": "balancePerShare_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "5135:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 888,
                      "name": "BalancePerShareSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "5116:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5116:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 891,
                  "nodeType": "EmitStatement",
                  "src": "5111:41:1"
                }
              ]
            },
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "4732:114:1",
              "text": "@notice Update split factor\n @dev Relies on offchain computation of aggregate splits and reverse splits"
            },
            "functionSelector": "a850e024",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 866,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58455,
                    "src": "4923:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 867,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 865,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4914:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58484,
                  "src": "4914:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4914:28:1"
              }
            ],
            "name": "setBalancePerShare",
            "nameLocation": "4860:18:1",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "balancePerShare_",
                  "nameLocation": "4887:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "4879:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4879:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4878:26:1"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4943:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 920,
            "nodeType": "FunctionDefinition",
            "src": "5250:264:1",
            "nodes": [],
            "body": {
              "id": 919,
              "nodeType": "Block",
              "src": "5354:160:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 905,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "5386:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 919,
                      "src": "5364:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 904,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 903,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "5364:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "5364:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "5364:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 908,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 906,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "5390:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5390:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5364:45:1"
                },
                {
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 909,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 905,
                        "src": "5419:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage storage pointer"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5421:19:1",
                      "memberName": "_transferRestrictor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 657,
                      "src": "5419:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                        "typeString": "contract ITransferRestrictor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 912,
                      "name": "newRestrictor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "5443:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                        "typeString": "contract ITransferRestrictor"
                      }
                    },
                    "src": "5419:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "5419:37:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 916,
                        "name": "newRestrictor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 897,
                        "src": "5493:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                          "typeString": "contract ITransferRestrictor"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                          "typeString": "contract ITransferRestrictor"
                        }
                      ],
                      "id": 915,
                      "name": "TransferRestrictorSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 632,
                      "src": "5471:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ITransferRestrictor_$2107_$returns$__$",
                        "typeString": "function (contract ITransferRestrictor)"
                      }
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5471:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 918,
                  "nodeType": "EmitStatement",
                  "src": "5466:41:1"
                }
              ]
            },
            "documentation": {
              "id": 894,
              "nodeType": "StructuredDocumentation",
              "src": "5165:80:1",
              "text": "@notice Set transfer restrictor contract\n @dev Only callable by owner"
            },
            "functionSelector": "4904ac8f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 900,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58455,
                    "src": "5334:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 901,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 899,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5325:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58484,
                  "src": "5325:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5325:28:1"
              }
            ],
            "name": "setTransferRestrictor",
            "nameLocation": "5259:21:1",
            "parameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "newRestrictor",
                  "nameLocation": "5301:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 920,
                  "src": "5281:33:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                    "typeString": "contract ITransferRestrictor"
                  },
                  "typeName": {
                    "id": 896,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 895,
                      "name": "ITransferRestrictor",
                      "nameLocations": [
                        "5281:19:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2107,
                      "src": "5281:19:1"
                    },
                    "referencedDeclaration": 2107,
                    "src": "5281:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5280:35:1"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5354:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 937,
            "nodeType": "FunctionDefinition",
            "src": "5755:105:1",
            "nodes": [],
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "5827:33:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 932,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "5843:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 933,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "5847:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 931,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1966
                      ],
                      "referencedDeclaration": 1966,
                      "src": "5837:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5837:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "5837:16:1"
                }
              ]
            },
            "baseFunctions": [
              2021
            ],
            "documentation": {
              "id": 921,
              "nodeType": "StructuredDocumentation",
              "src": "5591:159:1",
              "text": "@notice Mint tokens\n @param to Address to mint tokens to\n @param value Amount of tokens to mint\n @dev Only callable by approved minter"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 928,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 643,
                    "src": "5814:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 929,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 927,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5805:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58484,
                  "src": "5805:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5805:21:1"
              }
            ],
            "name": "mint",
            "nameLocation": "5764:4:1",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5777:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "5769:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5769:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5789:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "5781:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5768:27:1"
            },
            "returnParameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5827:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 953,
            "nodeType": "FunctionDefinition",
            "src": "5986:101:1",
            "nodes": [],
            "body": {
              "id": 952,
              "nodeType": "Block",
              "src": "6046:41:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6062:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6066:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6062:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 949,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "6074:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 946,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2000
                      ],
                      "referencedDeclaration": 2000,
                      "src": "6056:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6056:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "6056:24:1"
                }
              ]
            },
            "baseFunctions": [
              2027
            ],
            "documentation": {
              "id": 938,
              "nodeType": "StructuredDocumentation",
              "src": "5866:115:1",
              "text": "@notice Burn tokens\n @param value Amount of tokens to burn\n @dev Only callable by approved burner"
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 943,
                    "name": "BURNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 649,
                    "src": "6033:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 944,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 942,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6024:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58484,
                  "src": "6024:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6024:21:1"
              }
            ],
            "name": "burn",
            "nameLocation": "5995:4:1",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6008:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "6000:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5999:15:1"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6046:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 977,
            "nodeType": "FunctionDefinition",
            "src": "6280:172:1",
            "nodes": [],
            "body": {
              "id": 976,
              "nodeType": "Block",
              "src": "6361:91:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 965,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "6387:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 966,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6396:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6400:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6396:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 968,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "6408:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 964,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72137,
                      "src": "6371:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6371:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 972,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "6430:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 973,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "6439:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 971,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2000
                      ],
                      "referencedDeclaration": 2000,
                      "src": "6424:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6424:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "6424:21:1"
                }
              ]
            },
            "baseFunctions": [
              2034
            ],
            "documentation": {
              "id": 954,
              "nodeType": "StructuredDocumentation",
              "src": "6093:182:1",
              "text": "@notice Burn tokens from an account\n @param account Address to burn tokens from\n @param value Amount of tokens to burn\n @dev Only callable by approved burner"
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 961,
                    "name": "BURNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 649,
                    "src": "6348:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 962,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 960,
                  "name": "onlyRole",
                  "nameLocations": [
                    "6339:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58484,
                  "src": "6339:8:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6339:21:1"
              }
            ],
            "name": "burnFrom",
            "nameLocation": "6289:8:1",
            "parameters": {
              "id": 959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6306:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 977,
                  "src": "6298:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6298:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 958,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6323:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 977,
                  "src": "6315:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6297:32:1"
            },
            "returnParameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6361:0:1"
            },
            "scope": 1058,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1019,
            "nodeType": "FunctionDefinition",
            "src": "6519:471:1",
            "nodes": [],
            "body": {
              "id": 1018,
              "nodeType": "Block",
              "src": "6607:383:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 990,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "6712:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1018,
                      "src": "6690:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 989,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 988,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "6690:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "6690:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "6690:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 993,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 991,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "6716:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6716:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6690:45:1"
                },
                {
                  "assignments": [
                    996
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 996,
                      "mutability": "mutable",
                      "name": "_transferRestrictor",
                      "nameLocation": "6765:19:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1018,
                      "src": "6745:39:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                        "typeString": "contract ITransferRestrictor"
                      },
                      "typeName": {
                        "id": 995,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 994,
                          "name": "ITransferRestrictor",
                          "nameLocations": [
                            "6745:19:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2107,
                          "src": "6745:19:1"
                        },
                        "referencedDeclaration": 2107,
                        "src": "6745:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                          "typeString": "contract ITransferRestrictor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 999,
                  "initialValue": {
                    "expression": {
                      "id": 997,
                      "name": "$",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "6787:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage storage pointer"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6789:19:1",
                    "memberName": "_transferRestrictor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 657,
                    "src": "6787:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6745:63:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1002,
                          "name": "_transferRestrictor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "6830:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                            "typeString": "contract ITransferRestrictor"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                            "typeString": "contract ITransferRestrictor"
                          }
                        ],
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6822:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6822:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6822:28:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6862:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6854:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6854:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6854:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6822:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1017,
                  "nodeType": "IfStatement",
                  "src": "6818:166:1",
                  "trueBody": {
                    "id": 1016,
                    "nodeType": "Block",
                    "src": "6866:118:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1012,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "6964:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1013,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 982,
                              "src": "6970:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1009,
                              "name": "_transferRestrictor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "6923:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                                "typeString": "contract ITransferRestrictor"
                              }
                            },
                            "id": 1011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6943:20:1",
                            "memberName": "requireNotRestricted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2098,
                            "src": "6923:40:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) view external"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6923:50:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1015,
                        "nodeType": "ExpressionStatement",
                        "src": "6923:50:1"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              72160
            ],
            "documentation": {
              "id": 978,
              "nodeType": "StructuredDocumentation",
              "src": "6458:56:1",
              "text": "------------------ Transfers ------------------ ///"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "6528:20:1",
            "overrides": {
              "id": 986,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6598:8:1"
            },
            "parameters": {
              "id": 985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6557:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "6549:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6549:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6571:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "6563:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "6575:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6575:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6548:35:1"
            },
            "returnParameters": {
              "id": 987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6607:0:1"
            },
            "scope": 1058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1057,
            "nodeType": "FunctionDefinition",
            "src": "7203:333:1",
            "nodes": [],
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "7272:264:1",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1029,
                      "mutability": "mutable",
                      "name": "$",
                      "nameLocation": "7304:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1056,
                      "src": "7282:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage"
                      },
                      "typeName": {
                        "id": 1028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1027,
                          "name": "dShareStorage",
                          "nameLocations": [
                            "7282:13:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 661,
                          "src": "7282:13:1"
                        },
                        "referencedDeclaration": 661,
                        "src": "7282:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                          "typeString": "struct DShare.dShareStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1032,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1030,
                      "name": "_getdShareStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 672,
                      "src": "7308:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_dShareStorage_$661_storage_ptr_$",
                        "typeString": "function () pure returns (struct DShare.dShareStorage storage pointer)"
                      }
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7308:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                      "typeString": "struct DShare.dShareStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7282:45:1"
                },
                {
                  "assignments": [
                    1035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1035,
                      "mutability": "mutable",
                      "name": "_transferRestrictor",
                      "nameLocation": "7357:19:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1056,
                      "src": "7337:39:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                        "typeString": "contract ITransferRestrictor"
                      },
                      "typeName": {
                        "id": 1034,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1033,
                          "name": "ITransferRestrictor",
                          "nameLocations": [
                            "7337:19:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2107,
                          "src": "7337:19:1"
                        },
                        "referencedDeclaration": 2107,
                        "src": "7337:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                          "typeString": "contract ITransferRestrictor"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1038,
                  "initialValue": {
                    "expression": {
                      "id": 1036,
                      "name": "$",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "7379:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_dShareStorage_$661_storage_ptr",
                        "typeString": "struct DShare.dShareStorage storage pointer"
                      }
                    },
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7381:19:1",
                    "memberName": "_transferRestrictor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 657,
                    "src": "7379:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                      "typeString": "contract ITransferRestrictor"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7337:63:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1041,
                          "name": "_transferRestrictor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1035,
                          "src": "7422:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                            "typeString": "contract ITransferRestrictor"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                            "typeString": "contract ITransferRestrictor"
                          }
                        ],
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7414:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7414:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7414:28:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7454:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7446:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7446:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7446:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7414:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1050,
                  "nodeType": "IfStatement",
                  "src": "7410:60:1",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7465:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 1026,
                    "id": 1049,
                    "nodeType": "Return",
                    "src": "7458:12:1"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1053,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1022,
                        "src": "7521:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1051,
                        "name": "_transferRestrictor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "7487:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransferRestrictor_$2107",
                          "typeString": "contract ITransferRestrictor"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7507:13:1",
                      "memberName": "isBlacklisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "7487:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7487:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1026,
                  "id": 1055,
                  "nodeType": "Return",
                  "src": "7480:49:1"
                }
              ]
            },
            "baseFunctions": [
              2042
            ],
            "documentation": {
              "id": 1020,
              "nodeType": "StructuredDocumentation",
              "src": "6996:202:1",
              "text": " @param account The address of the account\n @return Whether the account is blacklisted\n @dev Returns true if the account is blacklisted , if the account is the zero address"
            },
            "functionSelector": "fe575a87",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBlacklisted",
            "nameLocation": "7212:13:1",
            "parameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7234:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "7226:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7226:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7225:17:1"
            },
            "returnParameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "7266:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7266:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7265:6:1"
            },
            "scope": 1058,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 604,
              "name": "IDShare",
              "nameLocations": [
                "856:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2043,
              "src": "856:7:1"
            },
            "id": 605,
            "nodeType": "InheritanceSpecifier",
            "src": "856:7:1"
          },
          {
            "baseName": {
              "id": 606,
              "name": "Initializable",
              "nameLocations": [
                "865:13:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60221,
              "src": "865:13:1"
            },
            "id": 607,
            "nodeType": "InheritanceSpecifier",
            "src": "865:13:1"
          },
          {
            "baseName": {
              "id": 608,
              "name": "ERC20Rebasing",
              "nameLocations": [
                "880:13:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2001,
              "src": "880:13:1"
            },
            "id": 609,
            "nodeType": "InheritanceSpecifier",
            "src": "880:13:1"
          },
          {
            "baseName": {
              "id": 610,
              "name": "AccessControlDefaultAdminRulesUpgradeable",
              "nameLocations": [
                "895:41:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59967,
              "src": "895:41:1"
            },
            "id": 611,
            "nodeType": "InheritanceSpecifier",
            "src": "895:41:1"
          }
        ],
        "canonicalName": "DShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 603,
          "nodeType": "StructuredDocumentation",
          "src": "542:295:1",
          "text": "@notice Core token contract for bridged assets. Rebases on stock splits.\n ERC20 with minter, burner, and blacklist\n Uses solady ERC20 which allows EIP-2612 domain separator with `name` changes\n @author Dinari (https://github.com/dinaricrypto/sbt-contracts/blob/main/src/dShare.sol)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1058,
          59967,
          58789,
          61858,
          66498,
          63236,
          63201,
          62237,
          61066,
          2001,
          60221,
          72172,
          2043
        ],
        "name": "DShare",
        "nameLocation": "846:6:1",
        "scope": 1059,
        "usedErrors": [
          614,
          616,
          59984,
          59987,
          62164,
          62167,
          63114,
          63117,
          63122,
          67562,
          70036,
          70043,
          71759,
          71762,
          71765,
          71768,
          71771,
          71774,
          71777
        ],
        "usedEvents": [
          621,
          626,
          632,
          637,
          59992,
          62176,
          62185,
          62194,
          63129,
          63132,
          63139,
          63142,
          71786,
          71795
        ]
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 1
}
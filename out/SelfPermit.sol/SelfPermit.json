{"abi":[{"type":"function","name":"selfPermit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"selfPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"f64f67de"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Dinari (https://github.com/dinaricrypto/sbt-peripheral/blob/main/src/common/SelfPermit.sol)Modified from Uniswap (https://github.com/Uniswap/v3-periphery/blob/master/contracts/base/SelfPermit.sol) This function is expected to be embedded in multicalls to allow EOAs to approve a contract and call a function that requires an approval in a single transaction.\",\"kind\":\"dev\",\"methods\":{\"selfPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"owner\":\"The address of the holder of the token\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"selfPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"}},\"notice\":\"Functionality to call permit on any EIP-2612-compliant token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dinary/common/SelfPermit.sol\":\"SelfPermit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-math/=node_modules/prb-math/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/dinary/common/SelfPermit.sol\":{\"keccak256\":\"0xe9e8be0bf67a3c7cddba761c03ecc9cd0fc8668d898586ea3726ea8fc8966556\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://865034b010e9c5b65af75f988c7621b9918f47132fc8b6706641af959a9a5a9f\",\"dweb:/ipfs/QmbSn2bPis1re2dBurHurtJfwbTGVZvN6gVqrQZXaF2JzW\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"selfPermit"}],"devdoc":{"kind":"dev","methods":{"selfPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The `spender` is always address(this).","params":{"deadline":"A timestamp, the current blocktime must be less than or equal to this timestamp","owner":"The address of the holder of the token","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","token":"The address of the token spent","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`","value":"The amount that can be spent of token"}}},"version":1},"userdoc":{"kind":"user","methods":{"selfPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Permits this contract to spend a given token from `msg.sender`"}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@thirdweb-dev/=node_modules/@thirdweb-dev/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","prb-math/=node_modules/prb-math/","solady/=node_modules/solady/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/dinary/common/SelfPermit.sol":"SelfPermit"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/dinary/common/SelfPermit.sol":{"keccak256":"0xe9e8be0bf67a3c7cddba761c03ecc9cd0fc8668d898586ea3726ea8fc8966556","urls":["bzz-raw://865034b010e9c5b65af75f988c7621b9918f47132fc8b6706641af959a9a5a9f","dweb:/ipfs/QmbSn2bPis1re2dBurHurtJfwbTGVZvN6gVqrQZXaF2JzW"],"license":"GPL-3.0-or-later"},"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff","urls":["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d","dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/dinary/common/SelfPermit.sol","id":2912,"exportedSymbols":{"IERC20Permit":[71930],"SelfPermit":[2911]},"nodeType":"SourceUnit","src":"45:1645:13","nodes":[{"id":2872,"nodeType":"PragmaDirective","src":"45:24:13","nodes":[],"literals":["solidity","^","0.8",".23"]},{"id":2874,"nodeType":"ImportDirective","src":"71:93:13","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","nameLocation":"-1:-1:-1","scope":2912,"sourceUnit":71931,"symbolAliases":[{"foreign":{"id":2873,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71930,"src":"79:12:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":2911,"nodeType":"ContractDefinition","src":"737:952:13","nodes":[{"id":2910,"nodeType":"FunctionDefinition","src":"1463:224:13","nodes":[],"body":{"id":2909,"nodeType":"Block","src":"1596:91:13","nodes":[],"statements":[{"expression":{"arguments":[{"id":2897,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"1633:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2900,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1648:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_SelfPermit_$2911","typeString":"contract SelfPermit"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SelfPermit_$2911","typeString":"contract SelfPermit"}],"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1640:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:13","typeDescriptions":{}}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"1655:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2903,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"1662:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2904,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"1672:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2905,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"1675:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2906,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"1678:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":2894,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"1619:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2893,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71930,"src":"1606:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$71930_$","typeString":"type(contract IERC20Permit)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$71930","typeString":"contract IERC20Permit"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:13","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":71915,"src":"1606:26:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:74:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"ExpressionStatement","src":"1606:74:13"}]},"documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"772:686:13","text":"@notice Permits this contract to spend a given token from `msg.sender`\n @dev The `spender` is always address(this).\n @param token The address of the token spent\n @param owner The address of the holder of the token\n @param value The amount that can be spent of token\n @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"},"functionSelector":"f64f67de","implemented":true,"kind":"function","modifiers":[],"name":"selfPermit","nameLocation":"1472:10:13","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"token","nameLocation":"1491:5:13","nodeType":"VariableDeclaration","scope":2910,"src":"1483:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"1483:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"owner","nameLocation":"1506:5:13","nodeType":"VariableDeclaration","scope":2910,"src":"1498:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2879,"name":"address","nodeType":"ElementaryTypeName","src":"1498:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"value","nameLocation":"1521:5:13","nodeType":"VariableDeclaration","scope":2910,"src":"1513:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1513:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"deadline","nameLocation":"1536:8:13","nodeType":"VariableDeclaration","scope":2910,"src":"1528:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"v","nameLocation":"1552:1:13","nodeType":"VariableDeclaration","scope":2910,"src":"1546:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2885,"name":"uint8","nodeType":"ElementaryTypeName","src":"1546:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"r","nameLocation":"1563:1:13","nodeType":"VariableDeclaration","scope":2910,"src":"1555:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1555:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2890,"mutability":"mutable","name":"s","nameLocation":"1574:1:13","nodeType":"VariableDeclaration","scope":2910,"src":"1566:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1566:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1482:94:13"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[],"src":"1596:0:13"},"scope":2911,"stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"abstract":true,"baseContracts":[],"canonicalName":"SelfPermit","contractDependencies":[],"contractKind":"contract","documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"272:465:13","text":"@notice Functionality to call permit on any EIP-2612-compliant token\n @author Dinari (https://github.com/dinaricrypto/sbt-peripheral/blob/main/src/common/SelfPermit.sol)\n @author Modified from Uniswap (https://github.com/Uniswap/v3-periphery/blob/master/contracts/base/SelfPermit.sol)\n This function is expected to be embedded in multicalls to allow EOAs to approve a contract and call a function\n that requires an approval in a single transaction."},"fullyImplemented":true,"linearizedBaseContracts":[2911],"name":"SelfPermit","nameLocation":"755:10:13","scope":2912,"usedErrors":[],"usedEvents":[]}],"license":"GPL-3.0-or-later"},"id":13}
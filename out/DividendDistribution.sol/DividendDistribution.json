{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "name": "AccessControlEnforcedDefaultAdminDelay",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AccessControlEnforcedDefaultAdminRules",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "defaultAdmin",
          "type": "address"
        }
      ],
      "name": "AccessControlInvalidDefaultAdmin",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DistributionEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DistributionRunning",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EndTimeBeforeMin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotReclaimable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "bits",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SafeCastOverflowedUintDowncast",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminDelayChangeCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "effectSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminDelayChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DefaultAdminTransferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint48",
          "name": "acceptSchedule",
          "type": "uint48"
        }
      ],
      "name": "DefaultAdminTransferScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "distributionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Distributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "distributionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalReclaimed",
          "type": "uint256"
        }
      ],
      "name": "DistributionReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "minDistributionTime",
          "type": "uint64"
        }
      ],
      "name": "MinDistributionTimeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "distributionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalDistribution",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        }
      ],
      "name": "NewDistributionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DISTRIBUTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "beginDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelDefaultAdminTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        }
      ],
      "name": "changeDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalDistribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "createDistribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "distributionId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultAdminDelayIncreaseWait",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_distributionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "distributions",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "remainingDistribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minDistributionTime",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextDistributionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingDefaultAdminDelay",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "newDelay",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "schedule",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_distributionId",
          "type": "uint256"
        }
      ],
      "name": "reclaimDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rollbackDefaultAdminDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_minDistributionTime",
          "type": "uint64"
        }
      ],
      "name": "setMinDistributionTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1164:5062:13:-:0;;;3176:42;;;-1:-1:-1;;;;;;3176:42:13;3212:6;3176:42;;;3293:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3351:1;3354:5;-1:-1:-1;;;;;2384:33:86;;2380:115;;2440:44;;-1:-1:-1;;;2440:44:86;;2481:1;2440:44;;;455:51:135;428:18;;2440:44:86;;;;;;;2380:115;2504:13;:28;;-1:-1:-1;;;;;2504:28:86;-1:-1:-1;;;2504:28:86;;;;;;;2542:51;-1:-1:-1;2573:19:86;2542:10;:51::i;:::-;;2308:292;;3293:70:13;1164:5062;;5509:370:86;5595:4;5615;5611:214;;5687:1;5661:14;6786:20;;-1:-1:-1;;;;;6786:20:86;;6707:106;5661:14;-1:-1:-1;;;;;5661:28:86;;5657:114;;5716:40;;-1:-1:-1;;;5716:40:86;;;;;;;;;;;5657:114;5784:20;:30;;-1:-1:-1;;;;;;5784:30:86;-1:-1:-1;;;;;5784:30:86;;;;;5611:214;5841:31;5858:4;5864:7;5841:16;:31::i;:::-;5834:38;;5509:370;;;;;:::o;6179:316:83:-;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:83;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:83;;;;;;;;;:36;;-1:-1:-1;;6315:36:83;6347:4;6315:36;;;6397:12;735:10:104;;656:96;6397:12:83;-1:-1:-1;;;;;6370:40:83;6388:7;-1:-1:-1;;;;;6370:40:83;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:83;6424:11;;6272:217;-1:-1:-1;6473:5:83;6466:12;;14:290:135;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:135;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:135:o;309:203::-;1164:5062:13;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c8063795be4b9116100de578063a217fddf11610097578063cf6eefb711610071578063cf6eefb7146103bd578063d547741f146103eb578063d602b9fd146103fe578063f0bd87cc1461040657600080fd5b8063a217fddf146103a5578063cc8463c8146103ad578063cefc1429146103b557600080fd5b8063795be4b91461032257806384ef8ffc1461032b57806389217e6f146103505780638da5cb5b1461036357806391d148541461036b578063a1eda53c1461037e57600080fd5b806335f86a361161014b578063477f655511610125578063477f6555146102d6578063634e93da146102e9578063649a5ec7146102fc578063775520a41461030f57600080fd5b806335f86a361461025257806336568abe146102655780634487d3df1461027857600080fd5b806301ffc9a714610193578063022d63fb146101bb5780630aa6220b146101d75780631d367032146101e1578063248a9ca31461020e5780632f2ff15d1461023f575b600080fd5b6101a66101a1366004611268565b61041b565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff90911681526020016101b2565b6101df610446565b005b6005546101f59067ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101b2565b61023161021c366004611292565b60009081526020819052604090206001015490565b6040519081526020016101b2565b6101df61024d3660046112c7565b61045c565b6102316102603660046112f3565b610488565b6101df6102733660046112c7565b6105a5565b6102b1610286366004611292565b6003602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060016101b2565b6101df6102e4366004611326565b610651565b6101df6102f7366004611350565b6106b4565b6101df61030a36600461136b565b6106c8565b6101df61031d366004611393565b6106dc565b61023160045481565b6002546001600160a01b03165b6040516001600160a01b0390911681526020016101b2565b6101df61035e366004611292565b6107b5565b6103386108ad565b6101a66103793660046112c7565b6108c6565b6103866108ef565b6040805165ffffffffffff9384168152929091166020830152016101b2565b610231600081565b6101c0610943565b6101df6109a2565b6103c56109e2565b604080516001600160a01b03909316835265ffffffffffff9091166020830152016101b2565b6101df6103f93660046112c7565b610a03565b6101df610a2b565b6102316000805160206114b483398151915281565b60006001600160e01b031982166318a4c3c360e11b1480610440575061044082610a3e565b92915050565b600061045181610a73565b610459610a7d565b50565b8161047a57604051631fe1e13d60e11b815260040160405180910390fd5b6104848282610a8a565b5050565b60006000805160206114b48339815191526104a281610a73565b6005546104b99067ffffffffffffffff16426113de565b83116104d857604051632d731b8360e21b815260040160405180910390fd5b600480549060006104e8836113f1565b9091555060408051606080820183526001600160a01b03898116835260208084018a81528486018a8152600088815260038452879020955186546001600160a01b031916941693909317855551600185015590516002909301929092558251888152429281019290925291810186905291935083917f10496c360af0bb8491b9e0540332d53535a9ffd302449e93f0f749385b4261bb910160405180910390a261059d6001600160a01b038616333087610aaf565b509392505050565b811580156105c057506002546001600160a01b038281169116145b15610647576000806105d06109e2565b90925090506001600160a01b0382161515806105f2575065ffffffffffff8116155b8061060557504265ffffffffffff821610155b15610632576040516319ca5ebb60e01b815265ffffffffffff821660048201526024015b60405180910390fd5b50506001805465ffffffffffff60a01b191690555b6104848282610b16565b600061065c81610a73565b6005805467ffffffffffffffff191667ffffffffffffffff84169081179091556040519081527f414d7f9dac21592ba21279947bff9d47cd9e9f09a573dd27a09f47e51aca6036906020015b60405180910390a15050565b60006106bf81610a73565b61048482610b4e565b60006106d381610a73565b61048482610bc1565b6000805160206114b48339815191526106f481610a73565b60008481526003602052604090206002015442111561072657604051639856227d60e01b815260040160405180910390fd5b6000848152600360205260408120600101805484929061074790849061140a565b90915550506040518281526001600160a01b0384169085907fa7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f358479060200160405180910390a36000848152600360205260409020546107af906001600160a01b03168484610c2a565b50505050565b6000805160206114b48339815191526107cd81610a73565b6000828152600360205260408120600201549081900361080057604051632209347960e01b815260040160405180910390fd5b804210156108215760405163885ed36360e01b815260040160405180910390fd5b600083815260036020908152604080832060018101805482546001600160a01b03198116845591869055600290920194909455905181815290926001600160a01b03169186917ff6acdc7488f8ea3bb0494d61a518623d0044b132a007383e0bff5d175596cd44910160405180910390a26108a66001600160a01b0382163384610c2a565b5050505050565b60006108c16002546001600160a01b031690565b905090565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600254600090600160d01b900465ffffffffffff16801515801561091b57504265ffffffffffff821610155b6109275760008061093b565b600254600160a01b900465ffffffffffff16815b915091509091565b600254600090600160d01b900465ffffffffffff16801515801561096e57504265ffffffffffff8216105b61098957600154600160d01b900465ffffffffffff1661099c565b600254600160a01b900465ffffffffffff165b91505090565b60006109ac6109e2565b509050336001600160a01b038216146109da57604051636116401160e11b8152336004820152602401610629565b610459610c5b565b6001546001600160a01b03811691600160a01b90910465ffffffffffff1690565b81610a2157604051631fe1e13d60e11b815260040160405180910390fd5b6104848282610cf4565b6000610a3681610a73565b610459610d19565b60006001600160e01b03198216637965db0b60e01b148061044057506301ffc9a760e01b6001600160e01b0319831614610440565b6104598133610d24565b610a88600080610d5d565b565b600082815260208190526040902060010154610aa581610a73565b6107af8383610e1d565b6040516001600160a01b0384811660248301528381166044830152606482018390526107af9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610e8c565b6001600160a01b0381163314610b3f5760405163334bd91960e11b815260040160405180910390fd5b610b498282610eef565b505050565b6000610b58610943565b610b6142610f2c565b610b6b919061141d565b9050610b778282610f63565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b6000610bcc82610fe2565b610bd542610f2c565b610bdf919061141d565b9050610beb8282610d5d565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b91016106a8565b6040516001600160a01b03838116602483015260448201839052610b4991859182169063a9059cbb90606401610ae4565b600080610c666109e2565b91509150610c7b8165ffffffffffff16151590565b1580610c8f57504265ffffffffffff821610155b15610cb7576040516319ca5ebb60e01b815265ffffffffffff82166004820152602401610629565b610cd36000610cce6002546001600160a01b031690565b610eef565b50610cdf600083610e1d565b5050600180546001600160d01b031916905550565b600082815260208190526040902060010154610d0f81610a73565b6107af8383610eef565b610a88600080610f63565b610d2e82826108c6565b6104845760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610629565b600254600160d01b900465ffffffffffff168015610de0574265ffffffffffff82161015610db657600254600180546001600160d01b0316600160a01b90920465ffffffffffff16600160d01b02919091179055610de0565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec590600090a15b50600280546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b600082610e7b576000610e386002546001600160a01b031690565b6001600160a01b031614610e5f57604051631fe1e13d60e11b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0384161790555b610e85838361102a565b9392505050565b6000610ea16001600160a01b038416836110bc565b90508051600014158015610ec6575080806020019051810190610ec49190611443565b155b15610b4957604051635274afe760e01b81526001600160a01b0384166004820152602401610629565b600082158015610f0c57506002546001600160a01b038381169116145b15610f2257600280546001600160a01b03191690555b610e8583836110ca565b600065ffffffffffff821115610f5f576040516306dfcc6560e41b81526030600482015260248101839052604401610629565b5090565b6000610f6d6109e2565b6001805465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b038816171790559150610faf90508165ffffffffffff16151590565b15610b49576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a960510990600090a1505050565b600080610fed610943565b90508065ffffffffffff168365ffffffffffff1611611015576110108382611465565b610e85565b610e8565ffffffffffff841662069780611135565b600061103683836108c6565b6110b4576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561106c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610440565b506000610440565b6060610e858383600061114b565b60006110d683836108c6565b156110b4576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610440565b60008183106111445781610e85565b5090919050565b6060814710156111705760405163cd78605960e01b8152306004820152602401610629565b600080856001600160a01b0316848660405161118c9190611484565b60006040518083038185875af1925050503d80600081146111c9576040519150601f19603f3d011682016040523d82523d6000602084013e6111ce565b606091505b50915091506111de8683836111e8565b9695505050505050565b6060826111f8576110108261123f565b815115801561120f57506001600160a01b0384163b155b1561123857604051639996b31560e01b81526001600160a01b0385166004820152602401610629565b5080610e85565b80511561124f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561127a57600080fd5b81356001600160e01b031981168114610e8557600080fd5b6000602082840312156112a457600080fd5b5035919050565b80356001600160a01b03811681146112c257600080fd5b919050565b600080604083850312156112da57600080fd5b823591506112ea602084016112ab565b90509250929050565b60008060006060848603121561130857600080fd5b611311846112ab565b95602085013595506040909401359392505050565b60006020828403121561133857600080fd5b813567ffffffffffffffff81168114610e8557600080fd5b60006020828403121561136257600080fd5b610e85826112ab565b60006020828403121561137d57600080fd5b813565ffffffffffff81168114610e8557600080fd5b6000806000606084860312156113a857600080fd5b833592506113b8602085016112ab565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b80820180821115610440576104406113c8565b600060018201611403576114036113c8565b5060010190565b81810381811115610440576104406113c8565b65ffffffffffff81811683821601908082111561143c5761143c6113c8565b5092915050565b60006020828403121561145557600080fd5b81518015158114610e8557600080fd5b65ffffffffffff82811682821603908082111561143c5761143c6113c8565b6000825160005b818110156114a5576020818601810151858301520161148b565b50600092019182525091905056fefbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313ca26469706673582212204fac3f2964724cd3786705dcb94b9fe6a9d11ae84cf41ff00dd971a48790fa1464736f6c63430008190033",
    "sourceMap": "1164:5062:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2667:219:86;;;;;;:::i;:::-;;:::i;:::-;;;470:14:135;;463:22;445:41;;433:2;418:18;2667:219:86;;;;;;;;7766:108;7861:6;7766:108;;;671:14:135;659:27;;;641:46;;629:2;614:18;7766:108:86;497:196:135;10927:126:86;;;:::i;:::-;;3176:42:13;;;;;;;;;;;;872:18:135;860:31;;;842:50;;830:2;815:18;3176:42:13;698:200:135;3810:120:83;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;;;;1234:25:135;;;1222:2;1207:18;3810:120:83;1088:177:135;3198:265:86;;;;;;:::i;:::-;;:::i;3818:953:13:-;;;;;;:::i;:::-;;:::i;4515:566:86:-;;;;;;:::i;:::-;;:::i;2918:53:13:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2918:53:13;;;;;;;;;;;-1:-1:-1;;;;;2621:32:135;;;2603:51;;2685:2;2670:18;;2663:34;;;;2713:18;;;2706:34;2591:2;2576:18;2918:53:13;2401:345:135;3478:217:13;;;;;;:::i;:::-;;:::i;8068:150:86:-;;;;;;:::i;:::-;;:::i;10296:145::-;;;;;;:::i;:::-;;:::i;4818:678:13:-;;;;;;:::i;:::-;;:::i;3031:33::-;;;;;;6707:106:86;6786:20;;-1:-1:-1;;;;;6786:20:86;6707:106;;;-1:-1:-1;;;;;4007:32:135;;;3989:51;;3977:2;3962:18;6707:106:86;3843:203:135;5543:681:13;;;;;;:::i;:::-;;:::i;2942:93:86:-;;;:::i;2854:136:83:-;;;;;;:::i;:::-;;:::i;7432:261:86:-;;;:::i;:::-;;;;4231:14:135;4272:15;;;4254:34;;4324:15;;;;4319:2;4304:18;;4297:43;4194:18;7432:261:86;4051:295:135;2187:49:83;;2232:4;2187:49;;7130:229:86;;;:::i;9146:344::-;;;:::i;6886:171::-;;;:::i;:::-;;;;-1:-1:-1;;;;;4541:32:135;;;4523:51;;4622:14;4610:27;;;4605:2;4590:18;;4583:55;4496:18;6886:171:86;4351:293:135;3563:267:86;;;;;;:::i;:::-;;:::i;8706:128::-;;;:::i;2708:72:13:-;;-1:-1:-1;;;;;;;;;;;2708:72:13;;2667:219:86;2752:4;-1:-1:-1;;;;;;2775:64:86;;-1:-1:-1;;;2775:64:86;;:104;;;2843:36;2867:11;2843:23;:36::i;:::-;2768:111;2667:219;-1:-1:-1;;2667:219:86:o;10927:126::-;2232:4:83;2464:16;2232:4;2464:10;:16::i;:::-;11018:28:86::1;:26;:28::i;:::-;10927:126:::0;:::o;3198:265::-;3317:4;3313:104;;3366:40;;-1:-1:-1;;;3366:40:86;;;;;;;;;;;3313:104;3426:30;3442:4;3448:7;3426:15;:30::i;:::-;3198:265;;:::o;3818:953:13:-;3974:22;-1:-1:-1;;;;;;;;;;;2464:16:83;2475:4;2464:10;:16::i;:::-;4093:19:13::1;::::0;4075:37:::1;::::0;4093:19:::1;;4075:15;:37;:::i;:::-;4064:7;:48;4060:79;;4121:18;;-1:-1:-1::0;;;4121:18:13::1;;;;;;;;;;;4060:79;4255:18;:20:::0;;;:18:::1;:20;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;4395:47:13::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;4395:47:13;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;4363:29:13;;;:13:::1;:29:::0;;;;;:79;;;;-1:-1:-1;;;;;;4363:79:13::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;4363:79:13;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;4508:83;;5253:25:135;;;4566:15:13::1;5294:18:135::0;;;5287:34;;;;5337:18;;;5330:34;;;4363:29:13;;-1:-1:-1;4363:29:13;;4508:83:::1;::::0;5226:18:135;4508:83:13::1;;;;;;;4688:76;-1:-1:-1::0;;;;;4688:30:13;::::1;4719:10;4739:4;4746:17:::0;4688:30:::1;:76::i;:::-;3818:953:::0;;;;;;:::o;4515:566:86:-;4637:26;;:55;;;;-1:-1:-1;6786:20:86;;-1:-1:-1;;;;;4667:25:86;;;6786:20;;4667:25;4637:55;4633:399;;;4709:23;4734:15;4753:21;:19;:21::i;:::-;4708:66;;-1:-1:-1;4708:66:86;-1:-1:-1;;;;;;4792:29:86;;;;;:58;;-1:-1:-1;14557:13:86;;;;4792:58;:91;;;-1:-1:-1;14785:15:86;14774:26;;;;4854:29;4792:91;4788:185;;;4910:48;;-1:-1:-1;;;4910:48:86;;671:14:135;659:27;;4910:48:86;;;641:46:135;614:18;;4910:48:86;;;;;;;;4788:185;-1:-1:-1;;4993:28:86;4986:35;;-1:-1:-1;;;;4986:35:86;;;4633:399;5041:33;5060:4;5066:7;5041:18;:33::i;3478:217:13:-;2232:4:83;2464:16;2232:4;2464:10;:16::i;:::-;3587:19:13::1;:42:::0;;-1:-1:-1;;3587:42:13::1;;::::0;::::1;::::0;;::::1;::::0;;;3644:44:::1;::::0;842:50:135;;;3644:44:13::1;::::0;830:2:135;815:18;3644:44:13::1;;;;;;;;3478:217:::0;;:::o;8068:150:86:-;2232:4:83;2464:16;2232:4;2464:10;:16::i;:::-;8175:36:86::1;8202:8;8175:26;:36::i;10296:145::-:0;2232:4:83;2464:16;2232:4;2464:10;:16::i;:::-;10400:34:86::1;10425:8;10400:24;:34::i;4818:678:13:-:0;-1:-1:-1;;;;;;;;;;;2464:16:83;2475:4;2464:10;:16::i;:::-;5036:30:13::1;::::0;;;:13:::1;:30;::::0;;;;:38:::1;;::::0;5018:15:::1;:56;5014:88;;;5083:19;;-1:-1:-1::0;;;5083:19:13::1;;;;;;;;;;;5014:88;5179:30;::::0;;;:13:::1;:30;::::0;;;;:52:::1;;:63:::0;;5235:7;;5179:30;:63:::1;::::0;5235:7;;5179:63:::1;:::i;:::-;::::0;;;-1:-1:-1;;5307:49:13::1;::::0;1234:25:135;;;-1:-1:-1;;;;;5307:49:13;::::1;::::0;5319:15;;5307:49:::1;::::0;1222:2:135;1207:18;5307:49:13::1;;;;;;;5418:30;::::0;;;:13:::1;:30;::::0;;;;:36;5411:78:::1;::::0;-1:-1:-1;;;;;5418:36:13::1;5469:10:::0;5481:7;5411:57:::1;:78::i;:::-;4818:678:::0;;;;:::o;5543:681::-;-1:-1:-1;;;;;;;;;;;2464:16:83;2475:4;2464:10;:16::i;:::-;5643:15:13::1;5661:30:::0;;;:13:::1;:30;::::0;;;;:38:::1;;::::0;;5713:12;;;5709:41:::1;;5734:16;;-1:-1:-1::0;;;5734:16:13::1;;;;;;;;;;;5709:41;5782:7;5764:15;:25;5760:59;;;5798:21;;-1:-1:-1::0;;;5798:21:13::1;;;;;;;;;;;5760:59;5830:22;5855:30:::0;;;:13:::1;:30;::::0;;;;;;;:52:::1;::::0;::::1;::::0;;5934:36;;-1:-1:-1;;;;;;5980:37:13;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;6033:54;;1234:25:135;;;5855:52:13;;-1:-1:-1;;;;;5934:36:13::1;::::0;5855:30;;6033:54:::1;::::0;1207:18:135;6033:54:13::1;;;;;;;6163;-1:-1:-1::0;;;;;6163:26:13;::::1;6190:10;6202:14:::0;6163:26:::1;:54::i;:::-;5633:591;;;5543:681:::0;;:::o;2942:93:86:-;2988:7;3014:14;6786:20;;-1:-1:-1;;;;;6786:20:86;;6707:106;3014:14;3007:21;;2942:93;:::o;2854:136:83:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:83;;;;;;;;;;;;;;;2854:136::o;7432:261:86:-;7552:21;;7497:15;;-1:-1:-1;;;7552:21:86;;;;14557:13;;;7591:57;;;;-1:-1:-1;14785:15:86;14774:26;;;;7619:29;7591:57;7590:96;;7681:1;7684;7590:96;;;7653:13;;-1:-1:-1;;;7653:13:86;;;;7668:8;7590:96;7583:103;;;;7432:261;;:::o;7130:229::-;7224:21;;7188:6;;-1:-1:-1;;;7224:21:86;;;;14557:13;;;7263:56;;;;-1:-1:-1;14785:15:86;14774:26;;;;7291:28;7262:90;;7339:13;;-1:-1:-1;;;7339:13:86;;;;7262:90;;;7323:13;;-1:-1:-1;;;7323:13:86;;;;7262:90;7255:97;;;7130:229;:::o;9146:344::-;9210:23;9239:21;:19;:21::i;:::-;-1:-1:-1;9209:51:86;-1:-1:-1;735:10:104;-1:-1:-1;;;;;9274:31:86;;;9270:175;;9388:46;;-1:-1:-1;;;9388:46:86;;735:10:104;9388:46:86;;;3989:51:135;3962:18;;9388:46:86;3843:203:135;9270:175:86;9454:29;:27;:29::i;6886:171::-;6999:20;;-1:-1:-1;;;;;6999:20:86;;;-1:-1:-1;;;7021:28:86;;;;;;6886:171::o;3563:267::-;3683:4;3679:104;;3732:40;;-1:-1:-1;;;3732:40:86;;;;;;;;;;;3679:104;3792:31;3809:4;3815:7;3792:16;:31::i;8706:128::-;2232:4:83;2464:16;2232:4;2464:10;:16::i;:::-;8798:29:86::1;:27;:29::i;2565:202:83:-:0;2650:4;-1:-1:-1;;;;;;2673:47:83;;-1:-1:-1;;;2673:47:83;;:87;;-1:-1:-1;;;;;;;;;;861:40:112;;;2724:36:83;762:146:112;3199:103:83;3265:30;3276:4;735:10:104;3265::83;:30::i;11180:94:86:-;11245:22;11262:1;11265;11245:16;:22::i;:::-;11180:94::o;4226:136:83:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;1702:188:102:-:0;1829:53;;-1:-1:-1;;;;;5766:15:135;;;1829:53:102;;;5748:34:135;5818:15;;;5798:18;;;5791:43;5850:18;;;5843:34;;;1802:81:102;;1822:5;;1844:18;;;;;5683::135;;1829:53:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:102;;;;;;;;;;;1802:19;:81::i;5328:245:83:-;-1:-1:-1;;;;;5421:34:83;;735:10:104;5421:34:83;5417:102;;5478:30;;-1:-1:-1;;;5478:30:83;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;8345:288:86:-;8426:18;8484:19;:17;:19::i;:::-;8447:34;8465:15;8447:17;:34::i;:::-;:56;;;;:::i;:::-;8426:77;;8513:46;8537:8;8547:11;8513:23;:46::i;:::-;8574:52;;671:14:135;659:27;;641:46;;-1:-1:-1;;;;;8574:52:86;;;;;629:2:135;614:18;8574:52:86;;;;;;;8416:217;8345:288;:::o;10566:::-;10644:18;10702:26;10719:8;10702:16;:26::i;:::-;10665:34;10683:15;10665:17;:34::i;:::-;:63;;;;:::i;:::-;10644:84;;10738:39;10755:8;10765:11;10738:16;:39::i;:::-;10792:55;;;4231:14:135;4272:15;;;4254:34;;4324:15;;4319:2;4304:18;;4297:43;10792:55:86;;4194:18:135;10792:55:86;4051:295:135;1303:160:102;1412:43;;-1:-1:-1;;;;;6261:32:135;;;1412:43:102;;;6243:51:135;6310:18;;;6303:34;;;1385:71:102;;1405:5;;1427:14;;;;;6216:18:135;;1412:43:102;6069:274:135;9618:474:86;9685:16;9703:15;9722:21;:19;:21::i;:::-;9684:59;;;;9758:24;9773:8;14557:13;;;;;14471:106;9758:24;9757:25;:58;;;-1:-1:-1;14785:15:86;14774:26;;;;9786:29;9757:58;9753:144;;;9838:48;;-1:-1:-1;;;9838:48:86;;671:14:135;659:27;;9838:48:86;;;641:46:135;614:18;;9838:48:86;497:196:135;9753:144:86;9906:47;2232:4:83;9938:14:86;6786:20;;-1:-1:-1;;;;;6786:20:86;;6707:106;9938:14;9906:11;:47::i;:::-;-1:-1:-1;9963:40:86;2232:4:83;9994:8:86;9963:10;:40::i;:::-;-1:-1:-1;;10020:20:86;10013:27;;-1:-1:-1;;;;;;10050:35:86;;;-1:-1:-1;9618:474:86:o;4642:138:83:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;8962:111:86:-:0;9028:38;9060:1;9064;9028:23;:38::i;3432:197:83:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:83;;-1:-1:-1;;;;;6261:32:135;;3565:47:83;;;6243:51:135;6310:18;;;6303:34;;;6216:18;;3565:47:83;6069:274:135;13741:585:86;13843:21;;-1:-1:-1;;;13843:21:86;;;;14557:13;;13875:365;;14785:15;14774:26;;;;13922:308;;;14040:13;;14024;:29;;-1:-1:-1;;;;;14024:29:86;-1:-1:-1;;;14040:13:86;;;;;-1:-1:-1;;;14024:29:86;;;;;;;13922:308;;;14182:33;;;;;;;13922:308;-1:-1:-1;14250:13:86;:24;;-1:-1:-1;;;;;14284:35:86;-1:-1:-1;;;14250:24:86;;;;;-1:-1:-1;;;;;14284:35:86;;-1:-1:-1;;;14284:35:86;;;;;;;;;;;;;;13741:585::o;5509:370::-;5595:4;5615;5611:214;;5687:1;5661:14;6786:20;;-1:-1:-1;;;;;6786:20:86;;6707:106;5661:14;-1:-1:-1;;;;;5661:28:86;;5657:114;;5716:40;;-1:-1:-1;;;5716:40:86;;;;;;;;;;;5657:114;5784:20;:30;;-1:-1:-1;;;;;;5784:30:86;-1:-1:-1;;;;;5784:30:86;;;;;5611:214;5841:31;5858:4;5864:7;5841:16;:31::i;:::-;5834:38;5509:370;-1:-1:-1;;;5509:370:86:o;4059:629:102:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:102;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:102;;-1:-1:-1;;;;;4007:32:135;;4631:40:102;;;3989:51:135;3962:18;;4631:40:102;3843:203:135;5946:271:86;6033:4;6053:26;;:55;;;;-1:-1:-1;6786:20:86;;-1:-1:-1;;;;;6083:25:86;;;6786:20;;6083:25;6053:55;6049:113;;;6131:20;6124:27;;-1:-1:-1;;;;;;6124:27:86;;;6049:113;6178:32;6196:4;6202:7;6178:17;:32::i;14291:213:115:-;14347:6;14377:16;14369:24;;14365:103;;;14416:41;;-1:-1:-1;;;14416:41:115;;14447:2;14416:41;;;7090:36:135;7142:18;;;7135:34;;;7063:18;;14416:41:115;6909:266:135;14365:103:115;-1:-1:-1;14491:5:115;14291:213::o;13062:525:86:-;13154:18;13176:21;:19;:21::i;:::-;13208:20;:31;;13249:42;;;-1:-1:-1;;;13249:42:86;-1:-1:-1;;;;;;13249:42:86;;;-1:-1:-1;;;;;13208:31:86;;13249:42;;;;13151:46;-1:-1:-1;13403:27:86;;-1:-1:-1;13151:46:86;14557:13;;;;;14471:106;13403:27;13399:182;;;13540:30;;;;;;;13141:446;13062:525;;:::o;11621:1249::-;11695:6;11713:19;11735;:17;:19::i;:::-;11713:41;;12684:12;12673:23;;:8;:23;;;:190;;12840:23;12855:8;12840:12;:23;:::i;:::-;12673:190;;;12722:51;;;;7861:6;12722:8;:51::i;6179:316:83:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:83;;;;;;;;;:36;;-1:-1:-1;;6315:36:83;6347:4;6315:36;;;6397:12;735:10:104;;656:96;6397:12:83;-1:-1:-1;;;;;6370:40:83;6388:7;-1:-1:-1;;;;;6370:40:83;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:83;6424:11;;6272:217;-1:-1:-1;6473:5:83;6466:12;;2705:151:103;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;6730:317:83:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;;;;;;;;;-1:-1:-1;;;;;6866:29:83;;;;;;;;;;:37;;-1:-1:-1;;6866:37:83;;;6922:40;735:10:104;;6866:12:83;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:83;6976:11;;2557:104:114;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;-1:-1:-1;2649:1:114;;2557:104;-1:-1:-1;2557:104:114:o;3180:392:103:-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:103;;3394:4;3359:41;;;3989:51:135;3962:18;;3359:41:103;3843:203:135;3303:108:103;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:103;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:103:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;4793:408::-;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:103;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:103;;-1:-1:-1;;;;;4007:32:135;;5121:24:103;;;3989:51:135;3962:18;;5121:24:103;3843:203:135;5041:119:103;-1:-1:-1;5180:10:103;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:103;;;;;;;;;;;14:286:135;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:135;;209:43;;199:71;;266:1;263;256:12;903:180;962:6;1015:2;1003:9;994:7;990:23;986:32;983:52;;;1031:1;1028;1021:12;983:52;-1:-1:-1;1054:23:135;;903:180;-1:-1:-1;903:180:135:o;1270:173::-;1338:20;;-1:-1:-1;;;;;1387:31:135;;1377:42;;1367:70;;1433:1;1430;1423:12;1367:70;1270:173;;;:::o;1448:254::-;1516:6;1524;1577:2;1565:9;1556:7;1552:23;1548:32;1545:52;;;1593:1;1590;1583:12;1545:52;1629:9;1616:23;1606:33;;1658:38;1692:2;1681:9;1677:18;1658:38;:::i;:::-;1648:48;;1448:254;;;;;:::o;1707:322::-;1784:6;1792;1800;1853:2;1841:9;1832:7;1828:23;1824:32;1821:52;;;1869:1;1866;1859:12;1821:52;1892:29;1911:9;1892:29;:::i;:::-;1882:39;1968:2;1953:18;;1940:32;;-1:-1:-1;2019:2:135;2004:18;;;1991:32;;1707:322;-1:-1:-1;;;1707:322:135:o;2751:284::-;2809:6;2862:2;2850:9;2841:7;2837:23;2833:32;2830:52;;;2878:1;2875;2868:12;2830:52;2917:9;2904:23;2967:18;2960:5;2956:30;2949:5;2946:41;2936:69;;3001:1;2998;2991:12;3040:186;3099:6;3152:2;3140:9;3131:7;3127:23;3123:32;3120:52;;;3168:1;3165;3158:12;3120:52;3191:29;3210:9;3191:29;:::i;3231:280::-;3289:6;3342:2;3330:9;3321:7;3317:23;3313:32;3310:52;;;3358:1;3355;3348:12;3310:52;3397:9;3384:23;3447:14;3440:5;3436:26;3429:5;3426:37;3416:65;;3477:1;3474;3467:12;3516:322;3593:6;3601;3609;3662:2;3650:9;3641:7;3637:23;3633:32;3630:52;;;3678:1;3675;3668:12;3630:52;3714:9;3701:23;3691:33;;3743:38;3777:2;3766:9;3762:18;3743:38;:::i;:::-;3733:48;;3828:2;3817:9;3813:18;3800:32;3790:42;;3516:322;;;;;:::o;4649:127::-;4710:10;4705:3;4701:20;4698:1;4691:31;4741:4;4738:1;4731:15;4765:4;4762:1;4755:15;4781:125;4846:9;;;4867:10;;;4864:36;;;4880:18;;:::i;4911:135::-;4950:3;4971:17;;;4968:43;;4991:18;;:::i;:::-;-1:-1:-1;5038:1:135;5027:13;;4911:135::o;5375:128::-;5442:9;;;5463:11;;;5460:37;;;5477:18;;:::i;5888:176::-;5955:14;5989:10;;;6001;;;5985:27;;6024:11;;;6021:37;;;6038:18;;:::i;:::-;6021:37;5888:176;;;;:::o;6627:277::-;6694:6;6747:2;6735:9;6726:7;6722:23;6718:32;6715:52;;;6763:1;6760;6753:12;6715:52;6795:9;6789:16;6848:5;6841:13;6834:21;6827:5;6824:32;6814:60;;6870:1;6867;6860:12;7180:179;7248:14;7295:10;;;7283;;;7279:27;;7318:12;;;7315:38;;;7333:18;;:::i;7364:412::-;7493:3;7531:6;7525:13;7556:1;7566:129;7580:6;7577:1;7574:13;7566:129;;;7678:4;7662:14;;;7658:25;;7652:32;7639:11;;;7632:53;7595:12;7566:129;;;-1:-1:-1;7750:1:135;7714:16;;7739:13;;;-1:-1:-1;7714:16:135;7364:412;-1:-1:-1;7364:412:135:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DISTRIBUTOR_ROLE()": "f0bd87cc",
    "acceptDefaultAdminTransfer()": "cefc1429",
    "beginDefaultAdminTransfer(address)": "634e93da",
    "cancelDefaultAdminTransfer()": "d602b9fd",
    "changeDefaultAdminDelay(uint48)": "649a5ec7",
    "createDistribution(address,uint256,uint256)": "35f86a36",
    "defaultAdmin()": "84ef8ffc",
    "defaultAdminDelay()": "cc8463c8",
    "defaultAdminDelayIncreaseWait()": "022d63fb",
    "distribute(uint256,address,uint256)": "775520a4",
    "distributions(uint256)": "4487d3df",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "minDistributionTime()": "1d367032",
    "nextDistributionId()": "795be4b9",
    "owner()": "8da5cb5b",
    "pendingDefaultAdmin()": "cf6eefb7",
    "pendingDefaultAdminDelay()": "a1eda53c",
    "reclaimDistribution(uint256)": "89217e6f",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rollbackDefaultAdminDelay()": "0aa6220b",
    "setMinDistributionTime(uint64)": "477f6555",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"name\":\"AccessControlEnforcedDefaultAdminDelay\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AccessControlEnforcedDefaultAdminRules\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"}],\"name\":\"AccessControlInvalidDefaultAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributionEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributionRunning\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndTimeBeforeMin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotReclaimable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminDelayChangeCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"effectSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminDelayChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DefaultAdminTransferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"acceptSchedule\",\"type\":\"uint48\"}],\"name\":\"DefaultAdminTransferScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"distributionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"distributionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReclaimed\",\"type\":\"uint256\"}],\"name\":\"DistributionReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"minDistributionTime\",\"type\":\"uint64\"}],\"name\":\"MinDistributionTimeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"distributionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistribution\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"}],\"name\":\"NewDistributionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISTRIBUTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"beginDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelDefaultAdminTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"}],\"name\":\"changeDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalDistribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"createDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"distributionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdminDelayIncreaseWait\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_distributionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"distributions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"remainingDistribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minDistributionTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextDistributionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingDefaultAdminDelay\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"newDelay\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"schedule\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_distributionId\",\"type\":\"uint256\"}],\"name\":\"reclaimDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollbackDefaultAdminDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_minDistributionTime\",\"type\":\"uint64\"}],\"name\":\"setMinDistributionTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Dinari (https://github.com/dinaricrypto/sbt-contracts/blob/main/src/dividend/DividendDistribution.sol)\",\"details\":\"This contract allows a DISTRIBUTOR_ROLE to create a distribution of tokens to users. It is intended as a flexible way to handle payouts while recording those payouts on-chain. A distribution is created with a pool of tokens and an end time. A DISTRIBUTOR_ROLE can then distribute from that pool to users until the end time. After the end time, the DISTRIBUTOR_ROLE can reclaim any remaining tokens.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlEnforcedDefaultAdminDelay(uint48)\":[{\"details\":\"The delay for transferring the default admin delay is enforced and the operation must wait until `schedule`. NOTE: `schedule` can be 0 indicating there's no transfer scheduled.\"}],\"AccessControlEnforcedDefaultAdminRules()\":[{\"details\":\"At least one of the following rules was violated: - The `DEFAULT_ADMIN_ROLE` must only be managed by itself. - The `DEFAULT_ADMIN_ROLE` must only be held by one account at the time. - Any `DEFAULT_ADMIN_ROLE` transfer must be in two delayed steps.\"}],\"AccessControlInvalidDefaultAdmin(address)\":[{\"details\":\"The new default admin is not a valid default admin.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"DefaultAdminDelayChangeCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdminDelay} is reset if its schedule didn't pass.\"},\"DefaultAdminDelayChangeScheduled(uint48,uint48)\":{\"details\":\"Emitted when a {defaultAdminDelay} change is started, setting `newDelay` as the next delay to be applied between default admin transfer after `effectSchedule` has passed.\"},\"DefaultAdminTransferCanceled()\":{\"details\":\"Emitted when a {pendingDefaultAdmin} is reset if it was never accepted, regardless of its schedule.\"},\"DefaultAdminTransferScheduled(address,uint48)\":{\"details\":\"Emitted when a {defaultAdmin} transfer is started, setting `newAdmin` as the next address to become the {defaultAdmin} by calling {acceptDefaultAdminTransfer} only after `acceptSchedule` passes.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"acceptDefaultAdminTransfer()\":{\"details\":\"Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed.\"},\"beginDefaultAdminTransfer(address)\":{\"details\":\"Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event.\"},\"cancelDefaultAdminTransfer()\":{\"details\":\"Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event.\"},\"changeDefaultAdminDelay(uint48)\":{\"details\":\"Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event.\"},\"createDistribution(address,uint256,uint256)\":{\"details\":\"Only the owner can create a new distribution.\",\"params\":{\"endTime\":\"The timestamp when the distribution stops.\",\"token\":\"The address of the token to be distributed.\",\"totalDistribution\":\"The total amount of tokens to be distributed.\"}},\"defaultAdmin()\":{\"details\":\"Returns the address of the current `DEFAULT_ADMIN_ROLE` holder.\"},\"defaultAdminDelay()\":{\"details\":\"Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}.\"},\"defaultAdminDelayIncreaseWait()\":{\"details\":\"Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds).\"},\"distribute(uint256,address,uint256)\":{\"details\":\"Can only be called by the owner.\",\"params\":{\"_amount\":\"The amount of tokens the user is claiming.\",\"_distributionId\":\"The ID of the distribution.\",\"_recipient\":\"The address of the user claiming tokens.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"See {IERC5313-owner}.\"},\"pendingDefaultAdmin()\":{\"details\":\"Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced.\"},\"pendingDefaultAdminDelay()\":{\"details\":\"Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule.\"},\"reclaimDistribution(uint256)\":{\"details\":\"Can only be called by the distributor after the claim window has passed.\",\"params\":{\"_distributionId\":\"The ID of the distribution to reclaim tokens from.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role.\"},\"revokeRole(bytes32,address)\":{\"details\":\"See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`.\"},\"rollbackDefaultAdminDelay()\":{\"details\":\"Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DISTRIBUTOR_ROLE()\":{\"notice\":\"Role for approved distributors\"},\"constructor\":{\"notice\":\"------------------- Initialization ------------------- ///\"},\"createDistribution(address,uint256,uint256)\":{\"notice\":\"Creates a new distribution.\"},\"distribute(uint256,address,uint256)\":{\"notice\":\"Distributes tokens to recipient.\"},\"distributions(uint256)\":{\"notice\":\"------------------- State ------------------- ///\"},\"minDistributionTime()\":{\"notice\":\"The minimum time that must pass between the creation of a distribution and its end time.\"},\"nextDistributionId()\":{\"notice\":\"The next distribution ID to be used.\"},\"reclaimDistribution(uint256)\":{\"notice\":\"Reclaims unclaimed tokens from an distribution.\"},\"setMinDistributionTime(uint64)\":{\"notice\":\"Set the minimum time that must pass between the creation of a distribution and its end time.\"}},\"notice\":\"Distributes tokens to users over time.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dinary/dividend/DividendDistribution.sol\":\"DividendDistribution\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-math/=node_modules/prb-math/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/dinary/dividend/DividendDistribution.sol\":{\"keccak256\":\"0xd9eb467a9c19008876bcd2d88ef816a7149cf139dadcde2eed8804cda58e7161\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://54af67d8ffc9d79b9d3359f39583e7852927b6f90aff58e490fcdf31b0663753\",\"dweb:/ipfs/QmWVs3G1tz4BAWau1aGxd9gidfsAZZmphkMncr54R2G27K\"]},\"contracts/dinary/dividend/IDividendDistributor.sol\":{\"keccak256\":\"0xa8c10a0a90ddb7ef2fc4bf84816463081f69f59b409d857da559c447081a3c7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b37b182ee1253fee7b91bcbcd0b6e50d8227f105f7413d1c561c98aa0cce2b16\",\"dweb:/ipfs/QmTMZFTJwbHaNuYMRi7MrmMGT5waEJYoF1gtZ33JtumPMZ\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"node_modules/@openzeppelin/contracts/access/extensions/AccessControlDefaultAdminRules.sol\":{\"keccak256\":\"0xd5e43578dce2678fbd458e1221dc37b20e983ecce4a314b422704f07d6015c5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ea4d9ae3392dc9db1ef4d7ebef84ce7fa243dc14abb46e68eb2eb60d2cd0e93\",\"dweb:/ipfs/QmRfjyDoLWF74EgmpcGkWZM7Kx1LgHN8dZHBxAnU9vPH46\"]},\"node_modules/@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol\":{\"keccak256\":\"0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea\",\"dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC5313.sol\":{\"keccak256\":\"0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559\",\"dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ],
          "type": "error",
          "name": "AccessControlEnforcedDefaultAdminDelay"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlEnforcedDefaultAdminRules"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "defaultAdmin",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AccessControlInvalidDefaultAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DistributionEnded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DistributionRunning"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EndTimeBeforeMin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotReclaimable"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "bits",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "SafeCastOverflowedUintDowncast"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminDelayChangeCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48",
              "indexed": false
            },
            {
              "internalType": "uint48",
              "name": "effectSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminDelayChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DefaultAdminTransferCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint48",
              "name": "acceptSchedule",
              "type": "uint48",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultAdminTransferScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "distributionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Distributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "distributionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalReclaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DistributionReclaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "minDistributionTime",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinDistributionTimeSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "distributionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalDistribution",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewDistributionCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DISTRIBUTOR_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptDefaultAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beginDefaultAdminTransfer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelDefaultAdminTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeDefaultAdminDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalDistribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createDistribution",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "distributionId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultAdminDelayIncreaseWait",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_distributionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "distributions",
          "outputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "remainingDistribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minDistributionTime",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextDistributionId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingDefaultAdminDelay",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "newDelay",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "schedule",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_distributionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reclaimDistribution"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rollbackDefaultAdminDelay"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_minDistributionTime",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDistributionTime"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptDefaultAdminTransfer()": {
            "details": "Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. After calling the function: - `DEFAULT_ADMIN_ROLE` should be granted to the caller. - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder. - {pendingDefaultAdmin} should be reset to zero values. Requirements: - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`. - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed."
          },
          "beginDefaultAdminTransfer(address)": {
            "details": "Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance after the current timestamp plus a {defaultAdminDelay}. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminRoleChangeStarted event."
          },
          "cancelDefaultAdminTransfer()": {
            "details": "Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}. A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminTransferCanceled event."
          },
          "changeDefaultAdminDelay(uint48)": {
            "details": "Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting into effect after the current timestamp plus a {defaultAdminDelay}. This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay} set before calling. The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin} complete transfer (including acceptance). The schedule is designed for two scenarios: - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by {defaultAdminDelayIncreaseWait}. - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`. A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change. Requirements: - Only can be called by the current {defaultAdmin}. Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event."
          },
          "createDistribution(address,uint256,uint256)": {
            "details": "Only the owner can create a new distribution.",
            "params": {
              "endTime": "The timestamp when the distribution stops.",
              "token": "The address of the token to be distributed.",
              "totalDistribution": "The total amount of tokens to be distributed."
            }
          },
          "defaultAdmin()": {
            "details": "Returns the address of the current `DEFAULT_ADMIN_ROLE` holder."
          },
          "defaultAdminDelay()": {
            "details": "Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started. This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set the acceptance schedule. NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this function returns the new delay. See {changeDefaultAdminDelay}."
          },
          "defaultAdminDelayIncreaseWait()": {
            "details": "Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay}) to take effect. Default to 5 days. When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds) that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can be overrode for a custom {defaultAdminDelay} increase scheduling. IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise, there's a risk of setting a high new delay that goes into effect almost immediately without the possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds)."
          },
          "distribute(uint256,address,uint256)": {
            "details": "Can only be called by the owner.",
            "params": {
              "_amount": "The amount of tokens the user is claiming.",
              "_distributionId": "The ID of the distribution.",
              "_recipient": "The address of the user claiming tokens."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "See {AccessControl-grantRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "owner()": {
            "details": "See {IERC5313-owner}."
          },
          "pendingDefaultAdmin()": {
            "details": "Returns a tuple of a `newAdmin` and an accept schedule. After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role by calling {acceptDefaultAdminTransfer}, completing the role transfer. A zero value only in `acceptSchedule` indicates no pending admin transfer. NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced."
          },
          "pendingDefaultAdminDelay()": {
            "details": "Returns a tuple of `newDelay` and an effect schedule. After the `schedule` passes, the `newDelay` will get into effect immediately for every new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}. A zero value only in `effectSchedule` indicates no pending delay change. NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay} will be zero after the effect schedule."
          },
          "reclaimDistribution(uint256)": {
            "details": "Can only be called by the distributor after the claim window has passed.",
            "params": {
              "_distributionId": "The ID of the distribution to reclaim tokens from."
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "See {AccessControl-renounceRole}. For the `DEFAULT_ADMIN_ROLE`, it only allows renouncing in two steps by first calling {beginDefaultAdminTransfer} to the `address(0)`, so it's required that the {pendingDefaultAdmin} schedule has also passed when calling this function. After its execution, it will not be possible to call `onlyRole(DEFAULT_ADMIN_ROLE)` functions. NOTE: Renouncing `DEFAULT_ADMIN_ROLE` will leave the contract without a {defaultAdmin}, thereby disabling any functionality that is only available for it, and the possibility of reassigning a non-administrated role."
          },
          "revokeRole(bytes32,address)": {
            "details": "See {AccessControl-revokeRole}. Reverts for `DEFAULT_ADMIN_ROLE`."
          },
          "rollbackDefaultAdminDelay()": {
            "details": "Cancels a scheduled {defaultAdminDelay} change. Requirements: - Only can be called by the current {defaultAdmin}. May emit a DefaultAdminDelayChangeCanceled event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DISTRIBUTOR_ROLE()": {
            "notice": "Role for approved distributors"
          },
          "constructor": {
            "notice": "------------------- Initialization ------------------- ///"
          },
          "createDistribution(address,uint256,uint256)": {
            "notice": "Creates a new distribution."
          },
          "distribute(uint256,address,uint256)": {
            "notice": "Distributes tokens to recipient."
          },
          "distributions(uint256)": {
            "notice": "------------------- State ------------------- ///"
          },
          "minDistributionTime()": {
            "notice": "The minimum time that must pass between the creation of a distribution and its end time."
          },
          "nextDistributionId()": {
            "notice": "The next distribution ID to be used."
          },
          "reclaimDistribution(uint256)": {
            "notice": "Reclaims unclaimed tokens from an distribution."
          },
          "setMinDistributionTime(uint64)": {
            "notice": "Set the minimum time that must pass between the creation of a distribution and its end time."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@prb/=node_modules/@prb/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":prb-math/=node_modules/prb-math/",
        ":solady/=node_modules/solady/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dinary/dividend/DividendDistribution.sol": "DividendDistribution"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dinary/dividend/DividendDistribution.sol": {
        "keccak256": "0xd9eb467a9c19008876bcd2d88ef816a7149cf139dadcde2eed8804cda58e7161",
        "urls": [
          "bzz-raw://54af67d8ffc9d79b9d3359f39583e7852927b6f90aff58e490fcdf31b0663753",
          "dweb:/ipfs/QmWVs3G1tz4BAWau1aGxd9gidfsAZZmphkMncr54R2G27K"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/dinary/dividend/IDividendDistributor.sol": {
        "keccak256": "0xa8c10a0a90ddb7ef2fc4bf84816463081f69f59b409d857da559c447081a3c7d",
        "urls": [
          "bzz-raw://b37b182ee1253fee7b91bcbcd0b6e50d8227f105f7413d1c561c98aa0cce2b16",
          "dweb:/ipfs/QmTMZFTJwbHaNuYMRi7MrmMGT5waEJYoF1gtZ33JtumPMZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308",
        "urls": [
          "bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80",
          "dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/extensions/AccessControlDefaultAdminRules.sol": {
        "keccak256": "0xd5e43578dce2678fbd458e1221dc37b20e983ecce4a314b422704f07d6015c5b",
        "urls": [
          "bzz-raw://9ea4d9ae3392dc9db1ef4d7ebef84ce7fa243dc14abb46e68eb2eb60d2cd0e93",
          "dweb:/ipfs/QmRfjyDoLWF74EgmpcGkWZM7Kx1LgHN8dZHBxAnU9vPH46"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/extensions/IAccessControlDefaultAdminRules.sol": {
        "keccak256": "0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203",
        "urls": [
          "bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea",
          "dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC5313.sol": {
        "keccak256": "0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621",
        "urls": [
          "bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559",
          "dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dinary/dividend/DividendDistribution.sol",
    "id": 3139,
    "exportedSymbols": {
      "AccessControlDefaultAdminRules": [
        63102
      ],
      "DividendDistribution": [
        3138
      ],
      "IDividendDistributor": [
        3176
      ],
      "IERC20": [
        64509
      ],
      "SafeERC20": [
        64861
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:6182:13",
    "nodes": [
      {
        "id": 2853,
        "nodeType": "PragmaDirective",
        "src": "45:23:13",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".25"
        ]
      },
      {
        "id": 2855,
        "nodeType": "ImportDirective",
        "src": "288:128:13",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/extensions/AccessControlDefaultAdminRules.sol",
        "file": "@openzeppelin/contracts/access/extensions/AccessControlDefaultAdminRules.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3139,
        "sourceUnit": 63103,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2854,
              "name": "AccessControlDefaultAdminRules",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63102,
              "src": "296:30:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2858,
        "nodeType": "ImportDirective",
        "src": "417:90:13",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3139,
        "sourceUnit": 64862,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2856,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64861,
              "src": "425:9:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2857,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64509,
              "src": "436:6:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2860,
        "nodeType": "ImportDirective",
        "src": "508:64:13",
        "nodes": [],
        "absolutePath": "contracts/dinary/dividend/IDividendDistributor.sol",
        "file": "./IDividendDistributor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3139,
        "sourceUnit": 3177,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2859,
              "name": "IDividendDistributor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3176,
              "src": "516:20:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3138,
        "nodeType": "ContractDefinition",
        "src": "1164:5062:13",
        "nodes": [
          {
            "id": 2869,
            "nodeType": "UsingForDirective",
            "src": "1256:27:13",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 2866,
              "name": "SafeERC20",
              "nameLocations": [
                "1262:9:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64861,
              "src": "1262:9:13"
            },
            "typeName": {
              "id": 2868,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2867,
                "name": "IERC20",
                "nameLocations": [
                  "1276:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64509,
                "src": "1276:6:13"
              },
              "referencedDeclaration": 64509,
              "src": "1276:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$64509",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 2877,
            "nodeType": "StructDefinition",
            "src": "1408:255:13",
            "nodes": [],
            "canonicalName": "DividendDistribution.Distribution",
            "documentation": {
              "id": 2870,
              "nodeType": "StructuredDocumentation",
              "src": "1289:54:13",
              "text": "------------------- Types ------------------- ///"
            },
            "members": [
              {
                "constant": false,
                "id": 2872,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1446:5:13",
                "nodeType": "VariableDeclaration",
                "scope": 2877,
                "src": "1438:13:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2871,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1438:7:13",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2874,
                "mutability": "mutable",
                "name": "remainingDistribution",
                "nameLocation": "1516:21:13",
                "nodeType": "VariableDeclaration",
                "scope": 2877,
                "src": "1508:29:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2873,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1508:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2876,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "1604:7:13",
                "nodeType": "VariableDeclaration",
                "scope": 2877,
                "src": "1596:15:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2875,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1596:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Distribution",
            "nameLocation": "1415:12:13",
            "scope": 3138,
            "visibility": "public"
          },
          {
            "id": 2881,
            "nodeType": "EventDefinition",
            "src": "1669:57:13",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "414d7f9dac21592ba21279947bff9d47cd9e9f09a573dd27a09f47e51aca6036",
            "name": "MinDistributionTimeSet",
            "nameLocation": "1675:22:13",
            "parameters": {
              "id": 2880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2879,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minDistributionTime",
                  "nameLocation": "1705:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2881,
                  "src": "1698:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2878,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1697:28:13"
            }
          },
          {
            "id": 2889,
            "nodeType": "EventDefinition",
            "src": "1799:91:13",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "a7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f35847",
            "name": "Distributed",
            "nameLocation": "1805:11:13",
            "parameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2883,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "distributionId",
                  "nameLocation": "1833:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2889,
                  "src": "1817:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2885,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1865:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2889,
                  "src": "1849:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2887,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1882:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2889,
                  "src": "1874:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1816:73:13"
            }
          },
          {
            "id": 2899,
            "nodeType": "EventDefinition",
            "src": "1896:138:13",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "10496c360af0bb8491b9e0540332d53535a9ffd302449e93f0f749385b4261bb",
            "name": "NewDistributionCreated",
            "nameLocation": "1902:22:13",
            "parameters": {
              "id": 2898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2891,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "distributionId",
                  "nameLocation": "1950:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "1934:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2893,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalDistribution",
                  "nameLocation": "1974:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "1966:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2895,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startDate",
                  "nameLocation": "2001:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "1993:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2897,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endDate",
                  "nameLocation": "2020:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2899,
                  "src": "2012:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2012:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1924:109:13"
            }
          },
          {
            "id": 2905,
            "nodeType": "EventDefinition",
            "src": "2040:84:13",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f6acdc7488f8ea3bb0494d61a518623d0044b132a007383e0bff5d175596cd44",
            "name": "DistributionReclaimed",
            "nameLocation": "2046:21:13",
            "parameters": {
              "id": 2904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2901,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "distributionId",
                  "nameLocation": "2084:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "2068:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2903,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalReclaimed",
                  "nameLocation": "2108:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2905,
                  "src": "2100:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:56:13"
            }
          },
          {
            "id": 2907,
            "nodeType": "ErrorDefinition",
            "src": "2151:25:13",
            "nodes": [],
            "errorSelector": "b5cc6e0c",
            "name": "EndTimeBeforeMin",
            "nameLocation": "2157:16:13",
            "parameters": {
              "id": 2906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2173:2:13"
            }
          },
          {
            "id": 2909,
            "nodeType": "ErrorDefinition",
            "src": "2252:28:13",
            "nodes": [],
            "errorSelector": "885ed363",
            "name": "DistributionRunning",
            "nameLocation": "2258:19:13",
            "parameters": {
              "id": 2908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2277:2:13"
            }
          },
          {
            "id": 2911,
            "nodeType": "ErrorDefinition",
            "src": "2375:26:13",
            "nodes": [],
            "errorSelector": "9856227d",
            "name": "DistributionEnded",
            "nameLocation": "2381:17:13",
            "parameters": {
              "id": 2910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2398:2:13"
            }
          },
          {
            "id": 2913,
            "nodeType": "ErrorDefinition",
            "src": "2487:23:13",
            "nodes": [],
            "errorSelector": "22093479",
            "name": "NotReclaimable",
            "nameLocation": "2493:14:13",
            "parameters": {
              "id": 2912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2507:2:13"
            }
          },
          {
            "id": 2919,
            "nodeType": "VariableDeclaration",
            "src": "2708:72:13",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 2914,
              "nodeType": "StructuredDocumentation",
              "src": "2661:42:13",
              "text": "@notice Role for approved distributors"
            },
            "functionSelector": "f0bd87cc",
            "mutability": "constant",
            "name": "DISTRIBUTOR_ROLE",
            "nameLocation": "2732:16:13",
            "scope": 3138,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2915,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2708:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4449535452494255544f525f524f4c45",
                  "id": 2917,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2761:18:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c",
                    "typeString": "literal_string \"DISTRIBUTOR_ROLE\""
                  },
                  "value": "DISTRIBUTOR_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_fbd454f36a7e1a388bd6fc3ab10d434aa4578f811acbbcf33afb1c697486313c",
                    "typeString": "literal_string \"DISTRIBUTOR_ROLE\""
                  }
                ],
                "id": 2916,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2751:9:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2918,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2751:29:13",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2925,
            "nodeType": "VariableDeclaration",
            "src": "2918:53:13",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 2920,
              "nodeType": "StructuredDocumentation",
              "src": "2787:54:13",
              "text": "------------------- State ------------------- ///"
            },
            "functionSelector": "4487d3df",
            "mutability": "mutable",
            "name": "distributions",
            "nameLocation": "2958:13:13",
            "scope": 3138,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
              "typeString": "mapping(uint256 => struct DividendDistribution.Distribution)"
            },
            "typeName": {
              "id": 2924,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2921,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2926:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2918:32:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                "typeString": "mapping(uint256 => struct DividendDistribution.Distribution)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2923,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2922,
                  "name": "Distribution",
                  "nameLocations": [
                    "2937:12:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2877,
                  "src": "2937:12:13"
                },
                "referencedDeclaration": 2877,
                "src": "2937:12:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Distribution_$2877_storage_ptr",
                  "typeString": "struct DividendDistribution.Distribution"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2928,
            "nodeType": "VariableDeclaration",
            "src": "3031:33:13",
            "nodes": [],
            "baseFunctions": [
              3147
            ],
            "constant": false,
            "documentation": {
              "id": 2926,
              "nodeType": "StructuredDocumentation",
              "src": "2978:48:13",
              "text": "@notice The next distribution ID to be used."
            },
            "functionSelector": "795be4b9",
            "mutability": "mutable",
            "name": "nextDistributionId",
            "nameLocation": "3046:18:13",
            "scope": 3138,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2927,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3031:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2932,
            "nodeType": "VariableDeclaration",
            "src": "3176:42:13",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 2929,
              "nodeType": "StructuredDocumentation",
              "src": "3071:100:13",
              "text": "@notice The minimum time that must pass between the creation of a distribution and its end time."
            },
            "functionSelector": "1d367032",
            "mutability": "mutable",
            "name": "minDistributionTime",
            "nameLocation": "3190:19:13",
            "scope": 3138,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 2930,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "3176:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 2931,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3212:6:13",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 2943,
            "nodeType": "FunctionDefinition",
            "src": "3293:70:13",
            "nodes": [],
            "body": {
              "id": 2942,
              "nodeType": "Block",
              "src": "3361:2:13",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 2933,
              "nodeType": "StructuredDocumentation",
              "src": "3225:63:13",
              "text": "------------------- Initialization ------------------- ///"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "30",
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3351:1:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "id": 2939,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2935,
                    "src": "3354:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2940,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2937,
                  "name": "AccessControlDefaultAdminRules",
                  "nameLocations": [
                    "3320:30:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63102,
                  "src": "3320:30:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3320:40:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2935,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3313:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2943,
                  "src": "3305:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:15:13"
            },
            "returnParameters": {
              "id": 2941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3361:0:13"
            },
            "scope": 3138,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2961,
            "nodeType": "FunctionDefinition",
            "src": "3478:217:13",
            "nodes": [],
            "body": {
              "id": 2960,
              "nodeType": "Block",
              "src": "3577:118:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2952,
                      "name": "minDistributionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2932,
                      "src": "3587:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2953,
                      "name": "_minDistributionTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2946,
                      "src": "3609:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3587:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2955,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:42:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2957,
                        "name": "_minDistributionTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2946,
                        "src": "3667:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 2956,
                      "name": "MinDistributionTimeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2881,
                      "src": "3644:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3644:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2959,
                  "nodeType": "EmitStatement",
                  "src": "3639:49:13"
                }
              ]
            },
            "documentation": {
              "id": 2944,
              "nodeType": "StructuredDocumentation",
              "src": "3369:104:13",
              "text": "@notice Set the minimum time that must pass between the creation of a distribution and its end time."
            },
            "functionSelector": "477f6555",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2949,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61888,
                    "src": "3557:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2950,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2948,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3548:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61899,
                  "src": "3548:8:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3548:28:13"
              }
            ],
            "name": "setMinDistributionTime",
            "nameLocation": "3487:22:13",
            "parameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2946,
                  "mutability": "mutable",
                  "name": "_minDistributionTime",
                  "nameLocation": "3517:20:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2961,
                  "src": "3510:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2945,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:29:13"
            },
            "returnParameters": {
              "id": 2951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3577:0:13"
            },
            "scope": 3138,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3023,
            "nodeType": "FunctionDefinition",
            "src": "3818:953:13",
            "nodes": [],
            "body": {
              "id": 3022,
              "nodeType": "Block",
              "src": "4002:769:13",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2976,
                      "name": "endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2968,
                      "src": "4064:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2977,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4075:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4081:9:13",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4075:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2979,
                        "name": "minDistributionTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2932,
                        "src": "4093:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "4075:37:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4064:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2985,
                  "nodeType": "IfStatement",
                  "src": "4060:79:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2982,
                        "name": "EndTimeBeforeMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2907,
                        "src": "4121:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4121:18:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2984,
                    "nodeType": "RevertStatement",
                    "src": "4114:25:13"
                  }
                },
                {
                  "expression": {
                    "id": 2989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2986,
                      "name": "distributionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2974,
                      "src": "4238:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4255:20:13",
                      "subExpression": {
                        "id": 2987,
                        "name": "nextDistributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2928,
                        "src": "4255:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4238:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2990,
                  "nodeType": "ExpressionStatement",
                  "src": "4238:37:13"
                },
                {
                  "expression": {
                    "id": 2999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2991,
                        "name": "distributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2925,
                        "src": "4363:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                          "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                        }
                      },
                      "id": 2993,
                      "indexExpression": {
                        "id": 2992,
                        "name": "distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "4377:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4363:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                        "typeString": "struct DividendDistribution.Distribution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2995,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2964,
                          "src": "4408:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2996,
                          "name": "totalDistribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2966,
                          "src": "4415:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2997,
                          "name": "endTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2968,
                          "src": "4434:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2994,
                        "name": "Distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2877,
                        "src": "4395:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Distribution_$2877_storage_ptr_$",
                          "typeString": "type(struct DividendDistribution.Distribution storage pointer)"
                        }
                      },
                      "id": 2998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4395:47:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$2877_memory_ptr",
                        "typeString": "struct DividendDistribution.Distribution memory"
                      }
                    },
                    "src": "4363:79:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                      "typeString": "struct DividendDistribution.Distribution storage ref"
                    }
                  },
                  "id": 3000,
                  "nodeType": "ExpressionStatement",
                  "src": "4363:79:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3002,
                        "name": "distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2974,
                        "src": "4531:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3003,
                        "name": "totalDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "4547:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3004,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4566:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4572:9:13",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4566:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3006,
                        "name": "endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2968,
                        "src": "4583:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3001,
                      "name": "NewDistributionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2899,
                      "src": "4508:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:83:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3008,
                  "nodeType": "EmitStatement",
                  "src": "4503:88:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3013,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4719:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4723:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4719:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3017,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4739:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DividendDistribution_$3138",
                              "typeString": "contract DividendDistribution"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DividendDistribution_$3138",
                              "typeString": "contract DividendDistribution"
                            }
                          ],
                          "id": 3016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4731:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3015,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4731:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4731:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3019,
                        "name": "totalDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "4746:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3010,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2964,
                            "src": "4695:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3009,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64509,
                          "src": "4688:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$64509_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4688:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$64509",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4702:16:13",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64648,
                      "src": "4688:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$64509_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$64509_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:76:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "4688:76:13"
                }
              ]
            },
            "baseFunctions": [
              3159
            ],
            "documentation": {
              "id": 2962,
              "nodeType": "StructuredDocumentation",
              "src": "3777:36:13",
              "text": "@inheritdoc IDividendDistributor"
            },
            "functionSelector": "35f86a36",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2971,
                    "name": "DISTRIBUTOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2919,
                    "src": "3939:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 2972,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2970,
                  "name": "onlyRole",
                  "nameLocations": [
                    "3930:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61899,
                  "src": "3930:8:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3930:26:13"
              }
            ],
            "name": "createDistribution",
            "nameLocation": "3827:18:13",
            "parameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2964,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3854:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "3846:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2966,
                  "mutability": "mutable",
                  "name": "totalDistribution",
                  "nameLocation": "3869:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "3861:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "3896:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "3888:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3888:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:59:13"
            },
            "returnParameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2974,
                  "mutability": "mutable",
                  "name": "distributionId",
                  "nameLocation": "3982:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3023,
                  "src": "3974:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3973:24:13"
            },
            "scope": 3138,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3072,
            "nodeType": "FunctionDefinition",
            "src": "4818:678:13",
            "nodes": [],
            "body": {
              "id": 3071,
              "nodeType": "Block",
              "src": "4956:540:13",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3036,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5018:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5024:9:13",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5018:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3038,
                          "name": "distributions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2925,
                          "src": "5036:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                            "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                          }
                        },
                        "id": 3040,
                        "indexExpression": {
                          "id": 3039,
                          "name": "_distributionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3026,
                          "src": "5050:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5036:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                          "typeString": "struct DividendDistribution.Distribution storage ref"
                        }
                      },
                      "id": 3041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5067:7:13",
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2876,
                      "src": "5036:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5018:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3046,
                  "nodeType": "IfStatement",
                  "src": "5014:88:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3043,
                        "name": "DistributionEnded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2911,
                        "src": "5083:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5083:19:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3045,
                    "nodeType": "RevertStatement",
                    "src": "5076:26:13"
                  }
                },
                {
                  "expression": {
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3047,
                          "name": "distributions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2925,
                          "src": "5179:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                            "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                          }
                        },
                        "id": 3049,
                        "indexExpression": {
                          "id": 3048,
                          "name": "_distributionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3026,
                          "src": "5193:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5179:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                          "typeString": "struct DividendDistribution.Distribution storage ref"
                        }
                      },
                      "id": 3050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5210:21:13",
                      "memberName": "remainingDistribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2874,
                      "src": "5179:52:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3051,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3030,
                      "src": "5235:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5179:63:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3053,
                  "nodeType": "ExpressionStatement",
                  "src": "5179:63:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3055,
                        "name": "_distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3026,
                        "src": "5319:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3056,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3028,
                        "src": "5336:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3057,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3030,
                        "src": "5348:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3054,
                      "name": "Distributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2889,
                      "src": "5307:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 3058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5307:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3059,
                  "nodeType": "EmitStatement",
                  "src": "5302:54:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3067,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3028,
                        "src": "5469:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3068,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3030,
                        "src": "5481:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 3061,
                                "name": "distributions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2925,
                                "src": "5418:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                                  "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                                }
                              },
                              "id": 3063,
                              "indexExpression": {
                                "id": 3062,
                                "name": "_distributionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3026,
                                "src": "5432:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5418:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                                "typeString": "struct DividendDistribution.Distribution storage ref"
                              }
                            },
                            "id": 3064,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5449:5:13",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2872,
                            "src": "5418:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3060,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64509,
                          "src": "5411:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$64509_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5411:44:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$64509",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5456:12:13",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64621,
                      "src": "5411:57:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$64509_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$64509_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5411:78:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3070,
                  "nodeType": "ExpressionStatement",
                  "src": "5411:78:13"
                }
              ]
            },
            "baseFunctions": [
              3169
            ],
            "documentation": {
              "id": 3024,
              "nodeType": "StructuredDocumentation",
              "src": "4777:36:13",
              "text": "@inheritdoc IDividendDistributor"
            },
            "functionSelector": "775520a4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3033,
                    "name": "DISTRIBUTOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2919,
                    "src": "4934:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3032,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4925:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61899,
                  "src": "4925:8:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4925:26:13"
              }
            ],
            "name": "distribute",
            "nameLocation": "4827:10:13",
            "parameters": {
              "id": 3031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3026,
                  "mutability": "mutable",
                  "name": "_distributionId",
                  "nameLocation": "4846:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "4838:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4838:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3028,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "4871:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "4863:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3030,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4891:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3072,
                  "src": "4883:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4883:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4837:62:13"
            },
            "returnParameters": {
              "id": 3035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4956:0:13"
            },
            "scope": 3138,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3137,
            "nodeType": "FunctionDefinition",
            "src": "5543:681:13",
            "nodes": [],
            "body": {
              "id": 3136,
              "nodeType": "Block",
              "src": "5633:591:13",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3082,
                      "mutability": "mutable",
                      "name": "endTime",
                      "nameLocation": "5651:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3136,
                      "src": "5643:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3081,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5643:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3087,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 3083,
                        "name": "distributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2925,
                        "src": "5661:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                          "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                        }
                      },
                      "id": 3085,
                      "indexExpression": {
                        "id": 3084,
                        "name": "_distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "5675:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5661:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                        "typeString": "struct DividendDistribution.Distribution storage ref"
                      }
                    },
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5692:7:13",
                    "memberName": "endTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2876,
                    "src": "5661:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5643:56:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3088,
                      "name": "endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3082,
                      "src": "5713:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5724:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5713:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3094,
                  "nodeType": "IfStatement",
                  "src": "5709:41:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3091,
                        "name": "NotReclaimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2913,
                        "src": "5734:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5734:16:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3093,
                    "nodeType": "RevertStatement",
                    "src": "5727:23:13"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3095,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5764:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5770:9:13",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5764:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3097,
                      "name": "endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3082,
                      "src": "5782:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5764:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3102,
                  "nodeType": "IfStatement",
                  "src": "5760:59:13",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3099,
                        "name": "DistributionRunning",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2909,
                        "src": "5798:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 3100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5798:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 3101,
                    "nodeType": "RevertStatement",
                    "src": "5791:28:13"
                  }
                },
                {
                  "assignments": [
                    3104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3104,
                      "mutability": "mutable",
                      "name": "totalReclaimed",
                      "nameLocation": "5838:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3136,
                      "src": "5830:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5830:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3109,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 3105,
                        "name": "distributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2925,
                        "src": "5855:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                          "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                        }
                      },
                      "id": 3107,
                      "indexExpression": {
                        "id": 3106,
                        "name": "_distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "5869:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5855:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                        "typeString": "struct DividendDistribution.Distribution storage ref"
                      }
                    },
                    "id": 3108,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5886:21:13",
                    "memberName": "remainingDistribution",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2874,
                    "src": "5855:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5830:77:13"
                },
                {
                  "assignments": [
                    3111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3111,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "5926:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3136,
                      "src": "5918:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3110,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5918:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3116,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 3112,
                        "name": "distributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2925,
                        "src": "5934:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                          "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                        }
                      },
                      "id": 3114,
                      "indexExpression": {
                        "id": 3113,
                        "name": "_distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "5948:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5934:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                        "typeString": "struct DividendDistribution.Distribution storage ref"
                      }
                    },
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5965:5:13",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2872,
                    "src": "5934:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5918:52:13"
                },
                {
                  "expression": {
                    "id": 3120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5980:37:13",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3117,
                        "name": "distributions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2925,
                        "src": "5987:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Distribution_$2877_storage_$",
                          "typeString": "mapping(uint256 => struct DividendDistribution.Distribution storage ref)"
                        }
                      },
                      "id": 3119,
                      "indexExpression": {
                        "id": 3118,
                        "name": "_distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "6001:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5987:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$2877_storage",
                        "typeString": "struct DividendDistribution.Distribution storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3121,
                  "nodeType": "ExpressionStatement",
                  "src": "5980:37:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3123,
                        "name": "_distributionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "6055:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3124,
                        "name": "totalReclaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3104,
                        "src": "6072:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3122,
                      "name": "DistributionReclaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2905,
                      "src": "6033:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6033:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3126,
                  "nodeType": "EmitStatement",
                  "src": "6028:59:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6190:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6194:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6190:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3133,
                        "name": "totalReclaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3104,
                        "src": "6202:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3128,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3111,
                            "src": "6170:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3127,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64509,
                          "src": "6163:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$64509_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 3129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6163:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$64509",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6177:12:13",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64621,
                      "src": "6163:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$64509_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$64509_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6163:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3135,
                  "nodeType": "ExpressionStatement",
                  "src": "6163:54:13"
                }
              ]
            },
            "baseFunctions": [
              3175
            ],
            "documentation": {
              "id": 3073,
              "nodeType": "StructuredDocumentation",
              "src": "5502:36:13",
              "text": "@inheritdoc IDividendDistributor"
            },
            "functionSelector": "89217e6f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3078,
                    "name": "DISTRIBUTOR_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2919,
                    "src": "5615:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3079,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3077,
                  "name": "onlyRole",
                  "nameLocations": [
                    "5606:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61899,
                  "src": "5606:8:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "5606:26:13"
              }
            ],
            "name": "reclaimDistribution",
            "nameLocation": "5552:19:13",
            "parameters": {
              "id": 3076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3075,
                  "mutability": "mutable",
                  "name": "_distributionId",
                  "nameLocation": "5580:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3137,
                  "src": "5572:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5572:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5571:25:13"
            },
            "returnParameters": {
              "id": 3080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5633:0:13"
            },
            "scope": 3138,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2862,
              "name": "AccessControlDefaultAdminRules",
              "nameLocations": [
                "1197:30:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63102,
              "src": "1197:30:13"
            },
            "id": 2863,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:30:13"
          },
          {
            "baseName": {
              "id": 2864,
              "name": "IDividendDistributor",
              "nameLocations": [
                "1229:20:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3176,
              "src": "1229:20:13"
            },
            "id": 2865,
            "nodeType": "InheritanceSpecifier",
            "src": "1229:20:13"
          }
        ],
        "canonicalName": "DividendDistribution",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2861,
          "nodeType": "StructuredDocumentation",
          "src": "574:590:13",
          "text": "@notice Distributes tokens to users over time.\n @dev This contract allows a DISTRIBUTOR_ROLE to create a distribution of tokens to users.\n It is intended as a flexible way to handle payouts while recording those payouts on-chain.\n A distribution is created with a pool of tokens and an end time.\n A DISTRIBUTOR_ROLE can then distribute from that pool to users until the end time.\n After the end time, the DISTRIBUTOR_ROLE can reclaim any remaining tokens.\n @author Dinari (https://github.com/dinaricrypto/sbt-contracts/blob/main/src/dividend/DividendDistribution.sol)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3138,
          3176,
          63102,
          62154,
          66486,
          66498,
          63236,
          63201,
          62237,
          65144
        ],
        "name": "DividendDistribution",
        "nameLocation": "1173:20:13",
        "scope": 3139,
        "usedErrors": [
          2907,
          2909,
          2911,
          2913,
          62164,
          62167,
          63114,
          63117,
          63122,
          64588,
          64869,
          64874,
          64877,
          67562
        ],
        "usedEvents": [
          2881,
          2889,
          2899,
          2905,
          62176,
          62185,
          62194,
          63129,
          63132,
          63139,
          63142
        ]
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 13
}
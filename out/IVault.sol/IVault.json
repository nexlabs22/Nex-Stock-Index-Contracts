{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "withdrawFunds(address,address,uint256)": "1c20fadd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of a Vault that allows for ERC20 token deposits and withdrawals\",\"kind\":\"dev\",\"methods\":{\"withdrawFunds(address,address,uint256)\":{\"details\":\"This function should only be called by authorized entities\",\"params\":{\"amount\":\"The amount of tokens to withdraw\",\"token\":\"The ERC20 token to be withdrawn\",\"user\":\"The address of the user to receive the withdrawn funds\"}}},\"title\":\"IVault Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdrawFunds(address,address,uint256)\":{\"notice\":\"Withdraws funds from the vault\"}},\"notice\":\"Interface for the Vault contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dinary/orders/IVault.sol\":\"IVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-math/=node_modules/prb-math/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/dinary/orders/IVault.sol\":{\"keccak256\":\"0x5ab0a567efd4498823f6af2329f9eae55453af29b9f915ae8fb877cf0172550d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cb1ae3c1d2f568a889bd522fb2d57d3180171baf9ee9002ddcd19b3022c995b\",\"dweb:/ipfs/QmekaGzyuE9q3FbF74YGKxZZXKNGLvoc2rBEd3qLJHSSRB\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFunds"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "withdrawFunds(address,address,uint256)": {
            "details": "This function should only be called by authorized entities",
            "params": {
              "amount": "The amount of tokens to withdraw",
              "token": "The ERC20 token to be withdrawn",
              "user": "The address of the user to receive the withdrawn funds"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "withdrawFunds(address,address,uint256)": {
            "notice": "Withdraws funds from the vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@prb/=node_modules/@prb/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":prb-math/=node_modules/prb-math/",
        ":solady/=node_modules/solady/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/dinary/orders/IVault.sol": "IVault"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/dinary/orders/IVault.sol": {
        "keccak256": "0x5ab0a567efd4498823f6af2329f9eae55453af29b9f915ae8fb877cf0172550d",
        "urls": [
          "bzz-raw://7cb1ae3c1d2f568a889bd522fb2d57d3180171baf9ee9002ddcd19b3022c995b",
          "dweb:/ipfs/QmekaGzyuE9q3FbF74YGKxZZXKNGLvoc2rBEd3qLJHSSRB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/dinary/orders/IVault.sol",
    "id": 3651,
    "exportedSymbols": {
      "IERC20": [
        64509
      ],
      "IVault": [
        3650
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:667:17",
    "nodes": [
      {
        "id": 3635,
        "nodeType": "PragmaDirective",
        "src": "32:24:17",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".23"
        ]
      },
      {
        "id": 3637,
        "nodeType": "ImportDirective",
        "src": "58:79:17",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3651,
        "sourceUnit": 64862,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3636,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64509,
              "src": "66:6:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3650,
        "nodeType": "ContractDefinition",
        "src": "295:403:17",
        "nodes": [
          {
            "id": 3649,
            "nodeType": "FunctionDefinition",
            "src": "620:76:17",
            "nodes": [],
            "documentation": {
              "id": 3639,
              "nodeType": "StructuredDocumentation",
              "src": "318:297:17",
              "text": "@notice Withdraws funds from the vault\n @dev This function should only be called by authorized entities\n @param token The ERC20 token to be withdrawn\n @param user The address of the user to receive the withdrawn funds\n @param amount The amount of tokens to withdraw"
            },
            "functionSelector": "1c20fadd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFunds",
            "nameLocation": "629:13:17",
            "parameters": {
              "id": 3647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3642,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "650:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3649,
                  "src": "643:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$64509",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3640,
                      "name": "IERC20",
                      "nameLocations": [
                        "643:6:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64509,
                      "src": "643:6:17"
                    },
                    "referencedDeclaration": 64509,
                    "src": "643:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$64509",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3644,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "665:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3649,
                  "src": "657:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3646,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "679:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3649,
                  "src": "671:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:44:17"
            },
            "returnParameters": {
              "id": 3648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "695:0:17"
            },
            "scope": 3650,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IVault",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3638,
          "nodeType": "StructuredDocumentation",
          "src": "139:156:17",
          "text": "@title IVault Interface\n @notice Interface for the Vault contract\n @dev Interface of a Vault that allows for ERC20 token deposits and withdrawals"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          3650
        ],
        "name": "IVault",
        "nameLocation": "305:6:17",
        "scope": 3651,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 17
}
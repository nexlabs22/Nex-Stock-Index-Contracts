{"abi":[],"bytecode":{"object":"0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b4c1b45a1777e567e599002155e15c9a22b05cc1a5cd66167ef5bbce5dd29f064736f6c63430008190033","sourceMap":"621:2783:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b4c1b45a1777e567e599002155e15c9a22b05cc1a5cd66167ef5bbce5dd29f064736f6c63430008190033","sourceMap":"621:2783:36:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/libs/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/=node_modules/@prb/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-math/=node_modules/prb-math/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/test/libs/SafeMathChainlink.sol\":{\"keccak256\":\"0x6628968d462f06519d8d8410df04f7bd3fdaa8ca8215c342fbf6aaccb330571c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e318a341e2f4382534c66a2167a7869525b749b16d5d6efc6605fcc47cf38b6a\",\"dweb:/ipfs/QmTgU4a1Fcf4rrfwZKokDY3wmo1FFhyxALjB6Z8m2RRtiG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/","@openzeppelin/=node_modules/@openzeppelin/","@prb/=node_modules/@prb/","@thirdweb-dev/=node_modules/@thirdweb-dev/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/@thirdweb-dev/dynamic-contracts/lib/forge-std/lib/ds-test/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","prb-math/=node_modules/prb-math/","solady/=node_modules/solady/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/test/libs/SafeMathChainlink.sol":"SafeMathChainlink"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/test/libs/SafeMathChainlink.sol":{"keccak256":"0x6628968d462f06519d8d8410df04f7bd3fdaa8ca8215c342fbf6aaccb330571c","urls":["bzz-raw://e318a341e2f4382534c66a2167a7869525b749b16d5d6efc6605fcc47cf38b6a","dweb:/ipfs/QmTgU4a1Fcf4rrfwZKokDY3wmo1FFhyxALjB6Z8m2RRtiG"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/test/libs/SafeMathChainlink.sol","id":16898,"exportedSymbols":{"SafeMathChainlink":[16897]},"nodeType":"SourceUnit","src":"32:3372:36","nodes":[{"id":16760,"nodeType":"PragmaDirective","src":"32:23:36","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":16897,"nodeType":"ContractDefinition","src":"621:2783:36","nodes":[{"id":16787,"nodeType":"FunctionDefinition","src":"863:162:36","nodes":[],"body":{"id":16786,"nodeType":"Block","src":"930:95:36","nodes":[],"statements":[{"assignments":[16772],"declarations":[{"constant":false,"id":16772,"mutability":"mutable","name":"c","nameLocation":"944:1:36","nodeType":"VariableDeclaration","scope":16786,"src":"936:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16771,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":16776,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16773,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16764,"src":"948:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":16774,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16766,"src":"952:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"948:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"936:17:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16778,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16772,"src":"967:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":16779,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16764,"src":"972:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"967:6:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":16781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"975:29:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":16777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"959:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":16782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:46:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16783,"nodeType":"ExpressionStatement","src":"959:46:36"},{"expression":{"id":16784,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16772,"src":"1019:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":16770,"id":16785,"nodeType":"Return","src":"1012:8:36"}]},"documentation":{"id":16762,"nodeType":"StructuredDocumentation","src":"651:209:36","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"872:3:36","parameters":{"id":16767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16764,"mutability":"mutable","name":"a","nameLocation":"884:1:36","nodeType":"VariableDeclaration","scope":16787,"src":"876:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16763,"name":"uint256","nodeType":"ElementaryTypeName","src":"876:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16766,"mutability":"mutable","name":"b","nameLocation":"895:1:36","nodeType":"VariableDeclaration","scope":16787,"src":"887:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16765,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"875:22:36"},"returnParameters":{"id":16770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16787,"src":"921:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16768,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"920:9:36"},"scope":16897,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":16813,"nodeType":"FunctionDefinition","src":"1277:165:36","nodes":[],"body":{"id":16812,"nodeType":"Block","src":"1344:98:36","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16798,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16792,"src":"1358:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":16799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16790,"src":"1363:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1358:6:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":16801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:32:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":16797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1350:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":16802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:49:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16803,"nodeType":"ExpressionStatement","src":"1350:49:36"},{"assignments":[16805],"declarations":[{"constant":false,"id":16805,"mutability":"mutable","name":"c","nameLocation":"1413:1:36","nodeType":"VariableDeclaration","scope":16812,"src":"1405:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":16809,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16790,"src":"1417:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":16807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16792,"src":"1421:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1417:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1405:17:36"},{"expression":{"id":16810,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16805,"src":"1436:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":16796,"id":16811,"nodeType":"Return","src":"1429:8:36"}]},"documentation":{"id":16788,"nodeType":"StructuredDocumentation","src":"1029:245:36","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"1286:3:36","parameters":{"id":16793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16790,"mutability":"mutable","name":"a","nameLocation":"1298:1:36","nodeType":"VariableDeclaration","scope":16813,"src":"1290:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16792,"mutability":"mutable","name":"b","nameLocation":"1309:1:36","nodeType":"VariableDeclaration","scope":16813,"src":"1301:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1289:22:36"},"returnParameters":{"id":16796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16813,"src":"1335:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1334:9:36"},"scope":16897,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":16848,"nodeType":"FunctionDefinition","src":"1670:418:36","nodes":[],"body":{"id":16847,"nodeType":"Block","src":"1737:351:36","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16816,"src":"1952:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":16824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1957:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1952:6:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16829,"nodeType":"IfStatement","src":"1948:35:36","trueBody":{"id":16828,"nodeType":"Block","src":"1960:23:36","statements":[{"expression":{"hexValue":"30","id":16826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1975:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":16822,"id":16827,"nodeType":"Return","src":"1968:8:36"}]}},{"assignments":[16831],"declarations":[{"constant":false,"id":16831,"mutability":"mutable","name":"c","nameLocation":"1997:1:36","nodeType":"VariableDeclaration","scope":16847,"src":"1989:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1989:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":16835,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16816,"src":"2001:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":16833,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16818,"src":"2005:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2001:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1989:17:36"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16837,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16831,"src":"2020:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":16838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16816,"src":"2024:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2020:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":16840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16818,"src":"2029:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2020:10:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":16842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2032:35:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":16836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2012:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":16843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2012:56:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16844,"nodeType":"ExpressionStatement","src":"2012:56:36"},{"expression":{"id":16845,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16831,"src":"2082:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":16822,"id":16846,"nodeType":"Return","src":"2075:8:36"}]},"documentation":{"id":16814,"nodeType":"StructuredDocumentation","src":"1446:221:36","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"1679:3:36","parameters":{"id":16819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16816,"mutability":"mutable","name":"a","nameLocation":"1691:1:36","nodeType":"VariableDeclaration","scope":16848,"src":"1683:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16818,"mutability":"mutable","name":"b","nameLocation":"1702:1:36","nodeType":"VariableDeclaration","scope":16848,"src":"1694:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:22:36"},"returnParameters":{"id":16822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16848,"src":"1728:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:9:36"},"scope":16897,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":16874,"nodeType":"FunctionDefinition","src":"2529:304:36","nodes":[],"body":{"id":16873,"nodeType":"Block","src":"2596:237:36","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16859,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16853,"src":"2672:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":16860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2676:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2672:5:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":16862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2679:28:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":16858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2664:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":16863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:44:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16864,"nodeType":"ExpressionStatement","src":"2664:44:36"},{"assignments":[16866],"declarations":[{"constant":false,"id":16866,"mutability":"mutable","name":"c","nameLocation":"2722:1:36","nodeType":"VariableDeclaration","scope":16873,"src":"2714:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2714:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":16870,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16851,"src":"2726:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":16868,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16853,"src":"2730:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2726:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2714:17:36"},{"expression":{"id":16871,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16866,"src":"2827:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":16857,"id":16872,"nodeType":"Return","src":"2820:8:36"}]},"documentation":{"id":16849,"nodeType":"StructuredDocumentation","src":"2092:434:36","text":" @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"2538:3:36","parameters":{"id":16854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16851,"mutability":"mutable","name":"a","nameLocation":"2550:1:36","nodeType":"VariableDeclaration","scope":16874,"src":"2542:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16853,"mutability":"mutable","name":"b","nameLocation":"2561:1:36","nodeType":"VariableDeclaration","scope":16874,"src":"2553:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2553:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2541:22:36"},"returnParameters":{"id":16857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16874,"src":"2587:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16855,"name":"uint256","nodeType":"ElementaryTypeName","src":"2587:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2586:9:36"},"scope":16897,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":16896,"nodeType":"FunctionDefinition","src":"3263:139:36","nodes":[],"body":{"id":16895,"nodeType":"Block","src":"3330:72:36","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16879,"src":"3344:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":16886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3349:1:36","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3344:6:36","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":16888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3352:26:36","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":16884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3336:7:36","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":16889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:43:36","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16890,"nodeType":"ExpressionStatement","src":"3336:43:36"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":16893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":16891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16877,"src":"3392:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":16892,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16879,"src":"3396:1:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3392:5:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":16883,"id":16894,"nodeType":"Return","src":"3385:12:36"}]},"documentation":{"id":16875,"nodeType":"StructuredDocumentation","src":"2837:423:36","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"3272:3:36","parameters":{"id":16880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16877,"mutability":"mutable","name":"a","nameLocation":"3284:1:36","nodeType":"VariableDeclaration","scope":16896,"src":"3276:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3276:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16879,"mutability":"mutable","name":"b","nameLocation":"3295:1:36","nodeType":"VariableDeclaration","scope":16896,"src":"3287:9:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3287:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3275:22:36"},"returnParameters":{"id":16883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16896,"src":"3321:7:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3321:7:36","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3320:9:36"},"scope":16897,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"SafeMathChainlink","contractDependencies":[],"contractKind":"library","documentation":{"id":16761,"nodeType":"StructuredDocumentation","src":"57:563:36","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"linearizedBaseContracts":[16897],"name":"SafeMathChainlink","nameLocation":"629:17:36","scope":16898,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":36}